#
# PySNMP MIB module HM800MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hitachi/HM800MIB
# Produced by pysmi-1.1.8 at Wed Jun 29 15:09:04 2022
# On host fv-az180-114 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, enterprises, Integer32, Counter64, MibIdentifier, Gauge32, IpAddress, NotificationType, TimeTicks, Counter32, ModuleIdentity, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "enterprises", "Integer32", "Counter64", "MibIdentifier", "Gauge32", "IpAddress", "NotificationType", "TimeTicks", "Counter32", "ModuleIdentity", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hitachi = MibIdentifier((1, 3, 6, 1, 4, 1, 116))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3))
storage = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11))
raid = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11, 4))
raidDummy = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1))
raidRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1))
systemExMib = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5))
storageExMib = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11))
raidExMib = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4))
raidExMibDummy = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1))
raidExMibDummyX = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2))
raidExMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1))
raidExMibName = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibName.setStatus('mandatory')
raidExMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibVersion.setStatus('mandatory')
raidExMibAgentVersion = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibAgentVersion.setStatus('mandatory')
raidExMibDkcCount = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidExMibDkcCount.setStatus('mandatory')
raidExMibRaidListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5), )
if mibBuilder.loadTexts: raidExMibRaidListTable.setStatus('mandatory')
raidExMibRaidListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1), ).setIndexNames((0, "HM800MIB", "raidlistSerialNumber"))
if mibBuilder.loadTexts: raidExMibRaidListEntry.setStatus('mandatory')
raidlistSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistSerialNumber.setStatus('mandatory')
raidlistMibNickName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistMibNickName.setStatus('mandatory')
raidlistDKCMainVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistDKCMainVersion.setStatus('mandatory')
raidlistDKCProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raidlistDKCProductName.setStatus('mandatory')
raidExMibDKCHWTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6), )
if mibBuilder.loadTexts: raidExMibDKCHWTable.setStatus('mandatory')
raidExMibDKCHWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1), ).setIndexNames((0, "HM800MIB", "dkcRaidListIndexSerialNumber"))
if mibBuilder.loadTexts: raidExMibDKCHWEntry.setStatus('mandatory')
dkcRaidListIndexSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcRaidListIndexSerialNumber.setStatus('mandatory')
dkcHWProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWProcessor.setStatus('mandatory')
dkcHWCSW = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWCSW.setStatus('mandatory')
dkcHWCache = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWCache.setStatus('mandatory')
dkcHWSM = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWSM.setStatus('mandatory')
dkcHWPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWPS.setStatus('mandatory')
dkcHWBattery = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWBattery.setStatus('mandatory')
dkcHWFan = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWFan.setStatus('mandatory')
dkcHWEnvironment = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkcHWEnvironment.setStatus('mandatory')
raidExMibDKUHWTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7), )
if mibBuilder.loadTexts: raidExMibDKUHWTable.setStatus('mandatory')
raidExMibDKUHWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1), ).setIndexNames((0, "HM800MIB", "dkuRaidListIndexSerialNumber"))
if mibBuilder.loadTexts: raidExMibDKUHWEntry.setStatus('mandatory')
dkuRaidListIndexSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuRaidListIndexSerialNumber.setStatus('mandatory')
dkuHWPS = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWPS.setStatus('mandatory')
dkuHWFan = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWFan.setStatus('mandatory')
dkuHWEnvironment = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWEnvironment.setStatus('mandatory')
dkuHWDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noError", 1), ("acute", 2), ("serious", 3), ("moderate", 4), ("service", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dkuHWDrive.setStatus('mandatory')
raidExMibTrapListTable = MibTable((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8), )
if mibBuilder.loadTexts: raidExMibTrapListTable.setStatus('mandatory')
raidExMibTrapListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1), ).setIndexNames((0, "HM800MIB", "eventListIndexSerialNumber"), (0, "HM800MIB", "eventListIndexRecordNo"))
if mibBuilder.loadTexts: raidExMibTrapListEntry.setStatus('mandatory')
eventListIndexSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListIndexSerialNumber.setStatus('mandatory')
eventListNickname = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListNickname.setStatus('mandatory')
eventListIndexRecordNo = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListIndexRecordNo.setStatus('mandatory')
eventListREFCODE = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListREFCODE.setStatus('mandatory')
eventListDate = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListDate.setStatus('mandatory')
eventListTime = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListTime.setStatus('mandatory')
eventListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 1, 1, 8, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventListDescription.setStatus('mandatory')
eventTrapSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 1), Integer32())
if mibBuilder.loadTexts: eventTrapSerialNumber.setStatus('mandatory')
eventTrapNickname = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 2), DisplayString())
if mibBuilder.loadTexts: eventTrapNickname.setStatus('mandatory')
eventTrapREFCODE = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 3), DisplayString())
if mibBuilder.loadTexts: eventTrapREFCODE.setStatus('mandatory')
eventTrapPartsID = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 4), ObjectIdentifier())
if mibBuilder.loadTexts: eventTrapPartsID.setStatus('mandatory')
eventTrapDate = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 5), DisplayString())
if mibBuilder.loadTexts: eventTrapDate.setStatus('mandatory')
eventTrapTime = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 6), DisplayString())
if mibBuilder.loadTexts: eventTrapTime.setStatus('mandatory')
eventTrapDescription = MibScalar((1, 3, 6, 1, 4, 1, 116, 5, 11, 4, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256)))
if mibBuilder.loadTexts: eventTrapDescription.setStatus('mandatory')
raideventUseracute = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,1)).setObjects(("HM800MIB", "eventTrapSerialNumber"), ("HM800MIB", "eventTrapNickname"), ("HM800MIB", "eventTrapREFCODE"), ("HM800MIB", "eventTrapPartsID"), ("HM800MIB", "eventTrapDate"), ("HM800MIB", "eventTrapTime"), ("HM800MIB", "eventTrapDescription"))
raideventUserserious = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,2)).setObjects(("HM800MIB", "eventTrapSerialNumber"), ("HM800MIB", "eventTrapNickname"), ("HM800MIB", "eventTrapREFCODE"), ("HM800MIB", "eventTrapPartsID"), ("HM800MIB", "eventTrapDate"), ("HM800MIB", "eventTrapTime"), ("HM800MIB", "eventTrapDescription"))
raideventUsermoderate = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,3)).setObjects(("HM800MIB", "eventTrapSerialNumber"), ("HM800MIB", "eventTrapNickname"), ("HM800MIB", "eventTrapREFCODE"), ("HM800MIB", "eventTrapPartsID"), ("HM800MIB", "eventTrapDate"), ("HM800MIB", "eventTrapTime"), ("HM800MIB", "eventTrapDescription"))
raideventUserservice = NotificationType((1, 3, 6, 1, 4, 1, 116, 3, 11, 4, 1, 1) + (0,4)).setObjects(("HM800MIB", "eventTrapSerialNumber"), ("HM800MIB", "eventTrapNickname"), ("HM800MIB", "eventTrapREFCODE"), ("HM800MIB", "eventTrapPartsID"), ("HM800MIB", "eventTrapDate"), ("HM800MIB", "eventTrapTime"), ("HM800MIB", "eventTrapDescription"))
mibBuilder.exportSymbols("HM800MIB", raidExMibDKCHWTable=raidExMibDKCHWTable, dkcHWPS=dkcHWPS, raidRoot=raidRoot, raidDummy=raidDummy, raidExMibTrapListEntry=raidExMibTrapListEntry, dkcHWSM=dkcHWSM, raidExMibRaidListEntry=raidExMibRaidListEntry, raidlistDKCMainVersion=raidlistDKCMainVersion, raidlistDKCProductName=raidlistDKCProductName, eventTrapDescription=eventTrapDescription, dkcHWCache=dkcHWCache, eventListREFCODE=eventListREFCODE, raidExMibVersion=raidExMibVersion, raidlistSerialNumber=raidlistSerialNumber, systemExMib=systemExMib, dkcHWCSW=dkcHWCSW, dkcHWEnvironment=dkcHWEnvironment, raideventUserservice=raideventUserservice, dkcRaidListIndexSerialNumber=dkcRaidListIndexSerialNumber, eventTrapSerialNumber=eventTrapSerialNumber, eventTrapTime=eventTrapTime, dkcHWFan=dkcHWFan, raidExMibRaidListTable=raidExMibRaidListTable, dkuRaidListIndexSerialNumber=dkuRaidListIndexSerialNumber, raidExMibRoot=raidExMibRoot, raidExMibDKUHWTable=raidExMibDKUHWTable, eventListDescription=eventListDescription, raidExMibDKCHWEntry=raidExMibDKCHWEntry, dkcHWProcessor=dkcHWProcessor, raideventUserserious=raideventUserserious, dkuHWDrive=dkuHWDrive, hitachi=hitachi, storage=storage, raidExMibAgentVersion=raidExMibAgentVersion, raidExMibDummy=raidExMibDummy, raidExMibTrapListTable=raidExMibTrapListTable, eventListNickname=eventListNickname, raideventUsermoderate=raideventUsermoderate, eventListIndexRecordNo=eventListIndexRecordNo, eventTrapNickname=eventTrapNickname, eventListTime=eventListTime, dkuHWEnvironment=dkuHWEnvironment, dkuHWFan=dkuHWFan, raid=raid, raidExMibDummyX=raidExMibDummyX, eventListDate=eventListDate, eventTrapDate=eventTrapDate, raideventUseracute=raideventUseracute, raidExMib=raidExMib, raidExMibDkcCount=raidExMibDkcCount, dkcHWBattery=dkcHWBattery, eventTrapREFCODE=eventTrapREFCODE, raidExMibDKUHWEntry=raidExMibDKUHWEntry, raidExMibName=raidExMibName, raidlistMibNickName=raidlistMibNickName, eventListIndexSerialNumber=eventListIndexSerialNumber, eventTrapPartsID=eventTrapPartsID, system=system, storageExMib=storageExMib, dkuHWPS=dkuHWPS)
