#
# PySNMP MIB module CADANT-PRODUCTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/arris/CADANT-PRODUCTS-MIB
# Produced by pysmi-1.1.8 at Wed Sep 13 07:56:37 2023
# On host fv-az370-447 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Gauge32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, NotificationType, Counter32, Counter64, IpAddress, ModuleIdentity, TimeTicks, Integer32, Unsigned32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "NotificationType", "Counter32", "Counter64", "IpAddress", "ModuleIdentity", "TimeTicks", "Integer32", "Unsigned32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cadant = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998))
cadant.setRevisions(('2000-11-18 00:00', '2002-02-01 00:00', '2002-05-07 00:00', '2002-06-26 00:00', '2002-12-10 00:00', '2003-06-30 00:00', '2007-06-04 00:00',))
if mibBuilder.loadTexts: cadant.setLastUpdated('200306300000Z')
if mibBuilder.loadTexts: cadant.setOrganization('Arris International')
cadObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1))
cadProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2))
cadCable = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1))
cadSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 5))
cadNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 6))
cadEquipment = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 10))
cadSpectrum = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15))
cadLayer2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 20))
cadLayer3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25))
cadSubscriber = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 30))
cadPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 35))
cadAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 40))
cadIke = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 45))
cadSchema = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 50))
cadCmRemoteQuery = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 55))
cadExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 100))
cadTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 105))
cadCmtsIf3 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 110))
cadL2vpn = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 120))
cadNms = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 2))
c4cmts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 1))
c4ccmts = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 2))
g2ims = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 2, 3))
mibBuilder.exportSymbols("CADANT-PRODUCTS-MIB", cadExperimental=cadExperimental, cadLayer3=cadLayer3, cadCable=cadCable, cadTopology=cadTopology, cadIke=cadIke, cadL2vpn=cadL2vpn, cadSubscriber=cadSubscriber, cadCmRemoteQuery=cadCmRemoteQuery, cadPolicy=cadPolicy, c4ccmts=c4ccmts, cadNms=cadNms, cadObjects=cadObjects, cadSchema=cadSchema, cadProducts=cadProducts, cadEquipment=cadEquipment, cadSpectrum=cadSpectrum, cadSystem=cadSystem, cadCmtsIf3=cadCmtsIf3, g2ims=g2ims, PYSNMP_MODULE_ID=cadant, cadant=cadant, cadAuthentication=cadAuthentication, cadLayer2=cadLayer2, c4cmts=c4cmts, cadNotification=cadNotification)
