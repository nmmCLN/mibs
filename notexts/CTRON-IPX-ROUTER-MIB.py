#
# PySNMP MIB module CTRON-IPX-ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-IPX-ROUTER-MIB
# Produced by pysmi-1.1.11 at Wed Apr  3 14:50:41 2024
# On host fv-az1198-695 platform Linux version 6.5.0-1016-azure by user runner
# Using Python version 3.10.14 (main, Mar 20 2024, 15:15:25) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
MacAddress, = mibBuilder.importSymbols("BRIDGE-MIB", "MacAddress")
nwRtrProtoSuites, = mibBuilder.importSymbols("ROUTER-OIDS", "nwRtrProtoSuites")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, Gauge32, IpAddress, Unsigned32, NotificationType, Counter32, TimeTicks, Bits, MibIdentifier, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Gauge32", "IpAddress", "Unsigned32", "NotificationType", "Counter32", "TimeTicks", "Bits", "MibIdentifier", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress")
nwIpxRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2))
nwIpxMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 1))
nwIpxComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2))
nwIpxSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1))
nwIpxForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2))
nwIpxTopology = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4))
nwIpxFib = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5))
nwIpxEndSystems = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6))
nwIpxAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7))
nwIpxFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 8))
nwIpxRedirector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9))
nwIpxEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10))
nwIpxWorkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 11))
nwIpxSysConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 1))
nwIpxSysAdministration = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 2))
nwIpxFwdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1))
nwIpxFwdInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2))
nwIpxFwdCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1))
nwIpxFwdIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1))
nwIpxFwdIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2))
nwIpxDistanceVector = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1))
nwIpxLinkState = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 2))
nwIpxRip = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1))
nwIpxSap = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2))
nwIpxRipSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1))
nwIpxRipInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2))
nwIpxRipDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3))
nwIpxRipFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 4))
nwIpxRipConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1))
nwIpxRipCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2))
nwIpxRipIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1))
nwIpxRipIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2))
nwIpxSapSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1))
nwIpxSapInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2))
nwIpxSapServerTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3))
nwIpxSapFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 4))
nwIpxSapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1))
nwIpxSapCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2))
nwIpxSapIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1))
nwIpxSapIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2))
nwIpxNlsp = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 2, 1))
nwIpxHostsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 1))
nwIpxHostsInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 2))
nwIpxHostsToMedia = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3))
nwIpxNetBIOS = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1))
nwIpxBroadcast = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2))
nwIpxEcho = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3))
nwIpxNetBIOSSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1))
nwIpxNetBIOSInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2))
nwIpxNetBIOSConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 1))
nwIpxNetBIOSCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2))
nwIpxNetBIOSIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1))
nwIpxNetBIOSIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2))
nwIpxBroadcastSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1))
nwIpxBroadcastInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2))
nwIpxBroadcastConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 1))
nwIpxBroadcastCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2))
nwIpxBroadcastIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1))
nwIpxBroadcastIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2))
nwIpxEchoSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1))
nwIpxEchoInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2))
nwIpxEchoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 1))
nwIpxEchoCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2))
nwIpxEchoIfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1))
nwIpxEchoIfCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2))
nwIpxEventLogConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 1))
nwIpxEventLogFilterTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2))
nwIpxEventLogTable = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3))
class IpxAddress(OctetString):
    pass

nwIpxMibRevText = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxMibRevText.setStatus('mandatory')
nwIpxSysRouterId = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 1, 1), IpxAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSysRouterId.setStatus('mandatory')
nwIpxSysAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSysAdminStatus.setStatus('mandatory')
nwIpxSysOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSysOperStatus.setStatus('mandatory')
nwIpxSysAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSysAdminReset.setStatus('mandatory')
nwIpxSysOperationalTimel = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSysOperationalTimel.setStatus('mandatory')
nwIpxSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 1, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSysVersion.setStatus('mandatory')
nwIpxFwdCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdCtrAdminStatus.setStatus('mandatory')
nwIpxFwdCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdCtrReset.setStatus('mandatory')
nwIpxFwdCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrOperationalTime.setStatus('mandatory')
nwIpxFwdCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrInPkts.setStatus('mandatory')
nwIpxFwdCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrOutPkts.setStatus('mandatory')
nwIpxFwdCtrFwdPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrFwdPkts.setStatus('mandatory')
nwIpxFwdCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrFilteredPkts.setStatus('mandatory')
nwIpxFwdCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrDiscardPkts.setStatus('mandatory')
nwIpxFwdCtrAddrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrAddrErrPkts.setStatus('mandatory')
nwIpxFwdCtrLenErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrLenErrPkts.setStatus('mandatory')
nwIpxFwdCtrHdrErrPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHdrErrPkts.setStatus('mandatory')
nwIpxFwdCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrInBytes.setStatus('mandatory')
nwIpxFwdCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrOutBytes.setStatus('mandatory')
nwIpxFwdCtrFwdBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrFwdBytes.setStatus('mandatory')
nwIpxFwdCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrFilteredBytes.setStatus('mandatory')
nwIpxFwdCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrDiscardBytes.setStatus('mandatory')
nwIpxFwdCtrHostInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHostInPkts.setStatus('mandatory')
nwIpxFwdCtrHostOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHostOutPkts.setStatus('mandatory')
nwIpxFwdCtrHostDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHostDiscardPkts.setStatus('mandatory')
nwIpxFwdCtrHostInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHostInBytes.setStatus('mandatory')
nwIpxFwdCtrHostOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHostOutBytes.setStatus('mandatory')
nwIpxFwdCtrHostDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdCtrHostDiscardBytes.setStatus('mandatory')
nwIpxFwdIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpxFwdIfTable.setStatus('mandatory')
nwIpxFwdIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxFwdIfIndex"))
if mibBuilder.loadTexts: nwIpxFwdIfEntry.setStatus('mandatory')
nwIpxFwdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfIndex.setStatus('mandatory')
nwIpxFwdIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfAdminStatus.setStatus('mandatory')
nwIpxFwdIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfOperStatus.setStatus('mandatory')
nwIpxFwdIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfOperationalTime.setStatus('mandatory')
nwIpxFwdIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("add", 2), ("delete", 3))).clone('delete')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfControl.setStatus('mandatory')
nwIpxFwdIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 6), Integer32().clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfMtu.setStatus('mandatory')
nwIpxFwdIfForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfForwarding.setStatus('mandatory')
nwIpxFwdIfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("i8022", 4), ("novell", 6), ("nativewan", 8), ("encapenet", 9), ("encapenet8022", 10), ("encapenetsnap", 11), ("encapenetnovell", 12), ("encaptr8022", 13), ("encaptrsnap", 14), ("encapfddi8022", 15), ("encapfddisnap", 16), ("canonical", 17))).clone('i8022')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfFrameType.setStatus('mandatory')
nwIpxFwdIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfAclIdentifier.setStatus('mandatory')
nwIpxFwdIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfAclStatus.setStatus('mandatory')
nwIpxFwdIfCacheControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfCacheControl.setStatus('mandatory')
nwIpxFwdIfCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCacheEntries.setStatus('mandatory')
nwIpxFwdIfCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCacheHits.setStatus('mandatory')
nwIpxFwdIfCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCacheMisses.setStatus('mandatory')
nwIpxAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2), )
if mibBuilder.loadTexts: nwIpxAddressTable.setStatus('mandatory')
nwIpxAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxAddrIfIndex"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxAddrIfAddress"))
if mibBuilder.loadTexts: nwIpxAddrEntry.setStatus('mandatory')
nwIpxAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxAddrIfIndex.setStatus('mandatory')
nwIpxAddrIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 1, 2), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxAddrIfAddress.setStatus('mandatory')
nwIpxAddrIfControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("add", 2), ("delete", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAddrIfControl.setStatus('mandatory')
nwIpxAddrIfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("primary", 2), ("secondary", 3))).clone('primary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAddrIfAddrType.setStatus('mandatory')
nwIpxFwdIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpxFwdIfCtrTable.setStatus('mandatory')
nwIpxFwdIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxFwdIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpxFwdIfCtrEntry.setStatus('mandatory')
nwIpxFwdIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrIfIndex.setStatus('mandatory')
nwIpxFwdIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfCtrAdminStatus.setStatus('mandatory')
nwIpxFwdIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFwdIfCtrReset.setStatus('mandatory')
nwIpxFwdIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrOperationalTime.setStatus('mandatory')
nwIpxFwdIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrInPkts.setStatus('mandatory')
nwIpxFwdIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrOutPkts.setStatus('mandatory')
nwIpxFwdIfCtrFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrFwdPkts.setStatus('mandatory')
nwIpxFwdIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrFilteredPkts.setStatus('mandatory')
nwIpxFwdIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrDiscardPkts.setStatus('mandatory')
nwIpxFwdIfCtrAddrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrAddrErrPkts.setStatus('mandatory')
nwIpxFwdIfCtrLenErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrLenErrPkts.setStatus('mandatory')
nwIpxFwdIfCtrHdrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHdrErrPkts.setStatus('mandatory')
nwIpxFwdIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrInBytes.setStatus('mandatory')
nwIpxFwdIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrOutBytes.setStatus('mandatory')
nwIpxFwdIfCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrFwdBytes.setStatus('mandatory')
nwIpxFwdIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrFilteredBytes.setStatus('mandatory')
nwIpxFwdIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrDiscardBytes.setStatus('mandatory')
nwIpxFwdIfCtrHostInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHostInPkts.setStatus('mandatory')
nwIpxFwdIfCtrHostOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHostOutPkts.setStatus('mandatory')
nwIpxFwdIfCtrHostDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHostDiscardPkts.setStatus('mandatory')
nwIpxFwdIfCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHostInBytes.setStatus('mandatory')
nwIpxFwdIfCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHostOutBytes.setStatus('mandatory')
nwIpxFwdIfCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFwdIfCtrHostDiscardBytes.setStatus('mandatory')
nwIpxRipAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipAdminStatus.setStatus('mandatory')
nwIpxRipOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipOperStatus.setStatus('mandatory')
nwIpxRipAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipAdminReset.setStatus('mandatory')
nwIpxRipOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipOperationalTime.setStatus('mandatory')
nwIpxRipVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipVersion.setStatus('mandatory')
nwIpxRipStackSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 6), Integer32().clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipStackSize.setStatus('mandatory')
nwIpxRipThreadPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 7), Integer32().clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipThreadPriority.setStatus('mandatory')
nwIpxRipDatabaseThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 8), Integer32().clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipDatabaseThreshold.setStatus('mandatory')
nwIpxRipAgeOut = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 9), Integer32().clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipAgeOut.setStatus('mandatory')
nwIpxRipHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 1, 10), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipHoldDown.setStatus('mandatory')
nwIpxRipCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipCtrAdminStatus.setStatus('mandatory')
nwIpxRipCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipCtrReset.setStatus('mandatory')
nwIpxRipCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrOperationalTime.setStatus('mandatory')
nwIpxRipCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrInPkts.setStatus('mandatory')
nwIpxRipCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrOutPkts.setStatus('mandatory')
nwIpxRipCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrFilteredPkts.setStatus('mandatory')
nwIpxRipCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrDiscardPkts.setStatus('mandatory')
nwIpxRipCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrInBytes.setStatus('mandatory')
nwIpxRipCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrOutBytes.setStatus('mandatory')
nwIpxRipCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrFilteredBytes.setStatus('mandatory')
nwIpxRipCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipCtrDiscardBytes.setStatus('mandatory')
nwIpxRipIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpxRipIfTable.setStatus('mandatory')
nwIpxRipIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxRipIfIndex"))
if mibBuilder.loadTexts: nwIpxRipIfEntry.setStatus('mandatory')
nwIpxRipIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfIndex.setStatus('mandatory')
nwIpxRipIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfAdminStatus.setStatus('mandatory')
nwIpxRipIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfOperStatus.setStatus('mandatory')
nwIpxRipIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfOperationalTime.setStatus('mandatory')
nwIpxRipIfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfVersion.setStatus('mandatory')
nwIpxRipIfAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 6), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfAdvertisement.setStatus('mandatory')
nwIpxRipIfFloodDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 7), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfFloodDelay.setStatus('mandatory')
nwIpxRipIfRequestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 8), Integer32().clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfRequestDelay.setStatus('mandatory')
nwIpxRipIfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 9), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfPriority.setStatus('mandatory')
nwIpxRipIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 10), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfHelloTimer.setStatus('mandatory')
nwIpxRipIfSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfSplitHorizon.setStatus('mandatory')
nwIpxRipIfPoisonReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfPoisonReverse.setStatus('mandatory')
nwIpxRipIfSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfSnooping.setStatus('mandatory')
nwIpxRipIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bma", 2), ("nbma", 3))).clone('bma')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfType.setStatus('mandatory')
nwIpxRipIfXmitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfXmitCost.setStatus('mandatory')
nwIpxRipIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfAclIdentifier.setStatus('mandatory')
nwIpxRipIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfAclStatus.setStatus('mandatory')
nwIpxRipIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpxRipIfCtrTable.setStatus('mandatory')
nwIpxRipIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxRipIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpxRipIfCtrEntry.setStatus('mandatory')
nwIpxRipIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrIfIndex.setStatus('mandatory')
nwIpxRipIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfCtrAdminStatus.setStatus('mandatory')
nwIpxRipIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxRipIfCtrReset.setStatus('mandatory')
nwIpxRipIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrOperationalTime.setStatus('mandatory')
nwIpxRipIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrInPkts.setStatus('mandatory')
nwIpxRipIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrOutPkts.setStatus('mandatory')
nwIpxRipIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrFilteredPkts.setStatus('mandatory')
nwIpxRipIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrDiscardPkts.setStatus('mandatory')
nwIpxRipIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrInBytes.setStatus('mandatory')
nwIpxRipIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrOutBytes.setStatus('mandatory')
nwIpxRipIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrFilteredBytes.setStatus('mandatory')
nwIpxRipIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipIfCtrDiscardBytes.setStatus('mandatory')
nwIpxRipRouteTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1), )
if mibBuilder.loadTexts: nwIpxRipRouteTable.setStatus('mandatory')
nwIpxRipRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxRipRtNetId"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxRipRtIfIndex"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxRipRtSrcNode"))
if mibBuilder.loadTexts: nwIpxRipRouteEntry.setStatus('mandatory')
nwIpxRipRtNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 1), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtNetId.setStatus('mandatory')
nwIpxRipRtIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtIfIndex.setStatus('mandatory')
nwIpxRipRtSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 3), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtSrcNode.setStatus('mandatory')
nwIpxRipRtHops = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtHops.setStatus('mandatory')
nwIpxRipRtTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtTicks.setStatus('mandatory')
nwIpxRipRtAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtAge.setStatus('mandatory')
nwIpxRipRtType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtType.setStatus('mandatory')
nwIpxRipRtFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxRipRtFlags.setStatus('mandatory')
nwIpxSapAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapAdminStatus.setStatus('mandatory')
nwIpxSapOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapOperStatus.setStatus('mandatory')
nwIpxSapAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapAdminReset.setStatus('mandatory')
nwIpxSapOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapOperationalTime.setStatus('mandatory')
nwIpxSapVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapVersion.setStatus('mandatory')
nwIpxSapStackSize = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 6), Integer32().clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapStackSize.setStatus('mandatory')
nwIpxSapThreadPriority = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 7), Integer32().clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapThreadPriority.setStatus('mandatory')
nwIpxSapDatabaseThreshold = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 8), Integer32().clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapDatabaseThreshold.setStatus('mandatory')
nwIpxSapAgeOut = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 9), Integer32().clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapAgeOut.setStatus('mandatory')
nwIpxSapHoldDown = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 1, 10), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapHoldDown.setStatus('mandatory')
nwIpxSapCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapCtrAdminStatus.setStatus('mandatory')
nwIpxSapCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapCtrReset.setStatus('mandatory')
nwIpxSapCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrOperationalTime.setStatus('mandatory')
nwIpxSapCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrInPkts.setStatus('mandatory')
nwIpxSapCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrOutPkts.setStatus('mandatory')
nwIpxSapCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrFilteredPkts.setStatus('mandatory')
nwIpxSapCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrDiscardPkts.setStatus('mandatory')
nwIpxSapCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrInBytes.setStatus('mandatory')
nwIpxSapCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrOutBytes.setStatus('mandatory')
nwIpxSapCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrFilteredBytes.setStatus('mandatory')
nwIpxSapCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapCtrDiscardBytes.setStatus('mandatory')
nwIpxSapIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpxSapIfTable.setStatus('mandatory')
nwIpxSapIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapIfIndex"))
if mibBuilder.loadTexts: nwIpxSapIfEntry.setStatus('mandatory')
nwIpxSapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfIndex.setStatus('mandatory')
nwIpxSapIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfAdminStatus.setStatus('mandatory')
nwIpxSapIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfOperStatus.setStatus('mandatory')
nwIpxSapIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfOperationalTime.setStatus('mandatory')
nwIpxSapIfVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfVersion.setStatus('mandatory')
nwIpxSapIfAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 6), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfAdvertisement.setStatus('mandatory')
nwIpxSapIfFloodDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 7), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfFloodDelay.setStatus('mandatory')
nwIpxSapIfRequestDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfRequestDelay.setStatus('mandatory')
nwIpxSapIfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 9), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfPriority.setStatus('mandatory')
nwIpxSapIfHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 10), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfHelloTimer.setStatus('mandatory')
nwIpxSapIfSplitHorizon = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfSplitHorizon.setStatus('mandatory')
nwIpxSapIfPoisonReverse = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfPoisonReverse.setStatus('mandatory')
nwIpxSapIfSnooping = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfSnooping.setStatus('mandatory')
nwIpxSapIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("bma", 2), ("nbma", 3))).clone('bma')).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfType.setStatus('mandatory')
nwIpxSapIfXmitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfXmitCost.setStatus('mandatory')
nwIpxSapIfAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfAclIdentifier.setStatus('mandatory')
nwIpxSapIfAclStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfAclStatus.setStatus('mandatory')
nwIpxSapIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpxSapIfCtrTable.setStatus('mandatory')
nwIpxSapIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpxSapIfCtrEntry.setStatus('mandatory')
nwIpxSapIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrIfIndex.setStatus('mandatory')
nwIpxSapIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfCtrAdminStatus.setStatus('mandatory')
nwIpxSapIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxSapIfCtrReset.setStatus('mandatory')
nwIpxSapIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrOperationalTime.setStatus('mandatory')
nwIpxSapIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrInPkts.setStatus('mandatory')
nwIpxSapIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrOutPkts.setStatus('mandatory')
nwIpxSapIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrFilteredPkts.setStatus('mandatory')
nwIpxSapIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrDiscardPkts.setStatus('mandatory')
nwIpxSapIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrInBytes.setStatus('mandatory')
nwIpxSapIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrOutBytes.setStatus('mandatory')
nwIpxSapIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrFilteredBytes.setStatus('mandatory')
nwIpxSapIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapIfCtrDiscardBytes.setStatus('mandatory')
nwIpxSapServerIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1), )
if mibBuilder.loadTexts: nwIpxSapServerIfTable.setStatus('mandatory')
nwIpxSapServerIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapServerIfNetId"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapServerIfNode"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapServerIfSocket"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapServerIfServiceType"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapServerIfIfNum"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxSapServerIfSrcNode"))
if mibBuilder.loadTexts: nwIpxSapServerIfEntry.setStatus('mandatory')
nwIpxSapServerIfNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 1), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfNetId.setStatus('mandatory')
nwIpxSapServerIfNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfNode.setStatus('mandatory')
nwIpxSapServerIfSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfSocket.setStatus('mandatory')
nwIpxSapServerIfServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfServiceType.setStatus('mandatory')
nwIpxSapServerIfIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfIfNum.setStatus('mandatory')
nwIpxSapServerIfSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfSrcNode.setStatus('mandatory')
nwIpxSapServerIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfName.setStatus('mandatory')
nwIpxSapServerIfHops = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfHops.setStatus('mandatory')
nwIpxSapServerIfAge = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfAge.setStatus('mandatory')
nwIpxSapServerIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfType.setStatus('mandatory')
nwIpxSapServerIfFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 4, 1, 2, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxSapServerIfFlags.setStatus('mandatory')
nwIpxFibTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1), )
if mibBuilder.loadTexts: nwIpxFibTable.setStatus('mandatory')
nwIpxFibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxFibNetId"))
if mibBuilder.loadTexts: nwIpxFibEntry.setStatus('mandatory')
nwIpxFibNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 1), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxFibNetId.setStatus('mandatory')
nwIpxFibHops = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFibHops.setStatus('mandatory')
nwIpxFibTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 3), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFibTimeTicks.setStatus('mandatory')
nwIpxFibNextHopIf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFibNextHopIf.setStatus('mandatory')
nwIpxFibNextHopNet = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFibNextHopNet.setStatus('mandatory')
nwIpxFibNextHopNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFibNextHopNode.setStatus('mandatory')
nwIpxFibRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4))).clone('direct')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxFibRouteType.setStatus('mandatory')
nwIpxAclValidEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxAclValidEntries.setStatus('mandatory')
nwIpxAclTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2), )
if mibBuilder.loadTexts: nwIpxAclTable.setStatus('mandatory')
nwIpxAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxAclIdentifier"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxAclSequence"))
if mibBuilder.loadTexts: nwIpxAclEntry.setStatus('mandatory')
nwIpxAclIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxAclIdentifier.setStatus('mandatory')
nwIpxAclSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxAclSequence.setStatus('mandatory')
nwIpxAclPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("permit", 3), ("deny", 4), ("permit-bidirectional", 5), ("deny-bidirectional", 6))).clone('permit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclPermission.setStatus('mandatory')
nwIpxAclMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxAclMatches.setStatus('mandatory')
nwIpxAclDestNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclDestNetNum.setStatus('mandatory')
nwIpxAclDestNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclDestNode.setStatus('mandatory')
nwIpxAclDestSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclDestSocket.setStatus('mandatory')
nwIpxAclSrcNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 8), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclSrcNetNum.setStatus('mandatory')
nwIpxAclSrcNode = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclSrcNode.setStatus('mandatory')
nwIpxAclSrcSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 7, 2, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxAclSrcSocket.setStatus('mandatory')
nwIpxNetBIOSAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSAdminStatus.setStatus('mandatory')
nwIpxNetBIOSOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSOperStatus.setStatus('mandatory')
nwIpxNetBIOSAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSAdminReset.setStatus('mandatory')
nwIpxNetBIOSOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSOperationalTime.setStatus('mandatory')
nwIpxNetBIOSVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSVersion.setStatus('mandatory')
nwIpxNetBIOSCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrAdminStatus.setStatus('mandatory')
nwIpxNetBIOSCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrReset.setStatus('mandatory')
nwIpxNetBIOSCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrOperationalTime.setStatus('mandatory')
nwIpxNetBIOSCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrInPkts.setStatus('mandatory')
nwIpxNetBIOSCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrOutPkts.setStatus('mandatory')
nwIpxNetBIOSCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrFilteredPkts.setStatus('mandatory')
nwIpxNetBIOSCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrDiscardPkts.setStatus('mandatory')
nwIpxNetBIOSCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrInBytes.setStatus('mandatory')
nwIpxNetBIOSCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrOutBytes.setStatus('mandatory')
nwIpxNetBIOSCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrFilteredBytes.setStatus('mandatory')
nwIpxNetBIOSCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSCtrDiscardBytes.setStatus('mandatory')
nwIpxNetBIOSIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpxNetBIOSIfTable.setStatus('mandatory')
nwIpxNetBIOSIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxNetBIOSIfIndex"))
if mibBuilder.loadTexts: nwIpxNetBIOSIfEntry.setStatus('mandatory')
nwIpxNetBIOSIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSIfIndex.setStatus('mandatory')
nwIpxNetBIOSIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSIfAdminStatus.setStatus('mandatory')
nwIpxNetBIOSIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfOperStatus.setStatus('mandatory')
nwIpxNetBIOSIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfOperationalTime.setStatus('mandatory')
nwIpxNetBIOSIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrTable.setStatus('mandatory')
nwIpxNetBIOSIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxNetBIOSIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrEntry.setStatus('mandatory')
nwIpxNetBIOSIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrIfIndex.setStatus('mandatory')
nwIpxNetBIOSIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrAdminStatus.setStatus('mandatory')
nwIpxNetBIOSIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrReset.setStatus('mandatory')
nwIpxNetBIOSIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrOperationalTime.setStatus('mandatory')
nwIpxNetBIOSIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrInPkts.setStatus('mandatory')
nwIpxNetBIOSIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrOutPkts.setStatus('mandatory')
nwIpxNetBIOSIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrFilteredPkts.setStatus('mandatory')
nwIpxNetBIOSIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrDiscardPkts.setStatus('mandatory')
nwIpxNetBIOSIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrInBytes.setStatus('mandatory')
nwIpxNetBIOSIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrOutBytes.setStatus('mandatory')
nwIpxNetBIOSIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrFilteredBytes.setStatus('mandatory')
nwIpxNetBIOSIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 1, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxNetBIOSIfCtrDiscardBytes.setStatus('mandatory')
nwIpxBcastAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastAdminStatus.setStatus('mandatory')
nwIpxBcastOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastOperStatus.setStatus('mandatory')
nwIpxBcastAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2))).clone('other')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastAdminReset.setStatus('mandatory')
nwIpxBcastOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastOperationalTime.setStatus('mandatory')
nwIpxBcastVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastVersion.setStatus('mandatory')
nwIpxBcastCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastCtrAdminStatus.setStatus('mandatory')
nwIpxBcastCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastCtrReset.setStatus('mandatory')
nwIpxBcastCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrOperationalTime.setStatus('mandatory')
nwIpxBcastCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrInPkts.setStatus('mandatory')
nwIpxBcastCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrOutPkts.setStatus('mandatory')
nwIpxBcastCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrFilteredPkts.setStatus('mandatory')
nwIpxBcastCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrDiscardPkts.setStatus('mandatory')
nwIpxBcastCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrInBytes.setStatus('mandatory')
nwIpxBcastCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrOutBytes.setStatus('mandatory')
nwIpxBcastCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrFilteredBytes.setStatus('mandatory')
nwIpxBcastCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastCtrDiscardBytes.setStatus('mandatory')
nwIpxBcastIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpxBcastIfTable.setStatus('mandatory')
nwIpxBcastIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxBcastIfIndex"))
if mibBuilder.loadTexts: nwIpxBcastIfEntry.setStatus('mandatory')
nwIpxBcastIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastIfIndex.setStatus('mandatory')
nwIpxBcastIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastIfAdminStatus.setStatus('mandatory')
nwIpxBcastIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfOperStatus.setStatus('mandatory')
nwIpxBcastIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfOperationalTime.setStatus('mandatory')
nwIpxBcastIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpxBcastIfCtrTable.setStatus('mandatory')
nwIpxBcastIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxBcastIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpxBcastIfCtrEntry.setStatus('mandatory')
nwIpxBcastIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrIfIndex.setStatus('mandatory')
nwIpxBcastIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastIfCtrAdminStatus.setStatus('mandatory')
nwIpxBcastIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxBcastIfCtrReset.setStatus('mandatory')
nwIpxBcastIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrOperationalTime.setStatus('mandatory')
nwIpxBcastIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrInPkts.setStatus('mandatory')
nwIpxBcastIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrOutPkts.setStatus('mandatory')
nwIpxBcastIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrFilteredPkts.setStatus('mandatory')
nwIpxBcastIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrDiscardPkts.setStatus('mandatory')
nwIpxBcastIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrInBytes.setStatus('mandatory')
nwIpxBcastIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrOutBytes.setStatus('mandatory')
nwIpxBcastIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrFilteredBytes.setStatus('mandatory')
nwIpxBcastIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 2, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxBcastIfCtrDiscardBytes.setStatus('mandatory')
nwIpxEchoAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoAdminStatus.setStatus('mandatory')
nwIpxEchoOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoOperStatus.setStatus('mandatory')
nwIpxEchoAdminReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoAdminReset.setStatus('mandatory')
nwIpxEchoOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoOperationalTime.setStatus('mandatory')
nwIpxEchoVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoVersion.setStatus('mandatory')
nwIpxEchoCtrAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoCtrAdminStatus.setStatus('mandatory')
nwIpxEchoCtrReset = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoCtrReset.setStatus('mandatory')
nwIpxEchoCtrOperationalTime = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrOperationalTime.setStatus('mandatory')
nwIpxEchoCtrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrInPkts.setStatus('mandatory')
nwIpxEchoCtrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrOutPkts.setStatus('mandatory')
nwIpxEchoCtrFilteredPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrFilteredPkts.setStatus('mandatory')
nwIpxEchoCtrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrDiscardPkts.setStatus('mandatory')
nwIpxEchoCtrInBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrInBytes.setStatus('mandatory')
nwIpxEchoCtrOutBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrOutBytes.setStatus('mandatory')
nwIpxEchoCtrFilteredBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoCtrFilteredBytes.setStatus('mandatory')
nwIpxEchoSCtrDiscardBytes = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoSCtrDiscardBytes.setStatus('mandatory')
nwIpxEchoIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1, 1), )
if mibBuilder.loadTexts: nwIpxEchoIfTable.setStatus('mandatory')
nwIpxEchoIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxEchoIfIndex"))
if mibBuilder.loadTexts: nwIpxEchoIfEntry.setStatus('mandatory')
nwIpxEchoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoIfIndex.setStatus('mandatory')
nwIpxEchoIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoIfAdminStatus.setStatus('mandatory')
nwIpxEchoIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfOperStatus.setStatus('mandatory')
nwIpxEchoIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfOperationalTime.setStatus('mandatory')
nwIpxEchoIfCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1), )
if mibBuilder.loadTexts: nwIpxEchoIfCtrTable.setStatus('mandatory')
nwIpxEchoIfCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxEchoIfCtrIfIndex"))
if mibBuilder.loadTexts: nwIpxEchoIfCtrEntry.setStatus('mandatory')
nwIpxEchoIfCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrIfIndex.setStatus('mandatory')
nwIpxEchoIfCtrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoIfCtrAdminStatus.setStatus('mandatory')
nwIpxEchoIfCtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEchoIfCtrReset.setStatus('mandatory')
nwIpxEchoIfCtrOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrOperationalTime.setStatus('mandatory')
nwIpxEchoIfCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrInPkts.setStatus('mandatory')
nwIpxEchoIfCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrOutPkts.setStatus('mandatory')
nwIpxEchoIfCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrFilteredPkts.setStatus('mandatory')
nwIpxEchoIfCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrDiscardPkts.setStatus('mandatory')
nwIpxEchoIfCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrInBytes.setStatus('mandatory')
nwIpxEchoIfCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrOutBytes.setStatus('mandatory')
nwIpxEchoIfCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrFilteredBytes.setStatus('mandatory')
nwIpxEchoIfCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 9, 3, 2, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEchoIfCtrDiscardBytes.setStatus('mandatory')
nwIpxHostMapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1), )
if mibBuilder.loadTexts: nwIpxHostMapTable.setStatus('mandatory')
nwIpxHostMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxHostMapIfIndex"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxHostMapIpxAddr"))
if mibBuilder.loadTexts: nwIpxHostMapEntry.setStatus('mandatory')
nwIpxHostMapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxHostMapIfIndex.setStatus('mandatory')
nwIpxHostMapIpxAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 2), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxHostMapIpxAddr.setStatus('mandatory')
nwIpxHostMapPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 3), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxHostMapPhysAddr.setStatus('mandatory')
nwIpxHostMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), ("inactive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxHostMapType.setStatus('mandatory')
nwIpxHostMapCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxHostMapCircuitID.setStatus('mandatory')
nwIpxHostMapFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("snap", 3), ("i8022", 4), ("novell", 6), ("nativewan", 8), ("encapenet", 9), ("encapenet8022", 10), ("encapenetsnap", 11), ("encapenetnovell", 12), ("encaptr8022", 13), ("encaptrsnap", 14), ("encapfddi8022", 15), ("encapfddisnap", 16), ("canonical", 17)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxHostMapFraming.setStatus('mandatory')
nwIpxHostMapPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 6, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxHostMapPortNumber.setStatus('mandatory')
nwIpxEventAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventAdminStatus.setStatus('mandatory')
nwIpxEventMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 1, 2), Integer32().clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventMaxEntries.setStatus('mandatory')
nwIpxEventTraceAll = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventTraceAll.setStatus('mandatory')
nwIpxEventFilterTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1), )
if mibBuilder.loadTexts: nwIpxEventFilterTable.setStatus('mandatory')
nwIpxEventFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxEventFltrProtocol"), (0, "CTRON-IPX-ROUTER-MIB", "nwIpxEventFltrIfNum"))
if mibBuilder.loadTexts: nwIpxEventFilterEntry.setStatus('mandatory')
nwIpxEventFltrProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventFltrProtocol.setStatus('mandatory')
nwIpxEventFltrIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventFltrIfNum.setStatus('mandatory')
nwIpxEventFltrControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("delete", 2), ("add", 3))).clone('add')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventFltrControl.setStatus('mandatory')
nwIpxEventFltrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("error", 32))).clone('misc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventFltrType.setStatus('mandatory')
nwIpxEventFltrSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3))).clone('highest')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventFltrSeverity.setStatus('mandatory')
nwIpxEventFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("log", 1), ("trap", 2), ("log-trap", 3))).clone('log')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nwIpxEventFltrAction.setStatus('mandatory')
nwIpxEventTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1), )
if mibBuilder.loadTexts: nwIpxEventTable.setStatus('mandatory')
nwIpxEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1), ).setIndexNames((0, "CTRON-IPX-ROUTER-MIB", "nwIpxEventNumber"))
if mibBuilder.loadTexts: nwIpxEventEntry.setStatus('mandatory')
nwIpxEventNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventNumber.setStatus('mandatory')
nwIpxEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventTime.setStatus('mandatory')
nwIpxEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("misc", 1), ("timer", 2), ("rcv", 4), ("xmit", 8), ("event", 16), ("error", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventType.setStatus('mandatory')
nwIpxEventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("highest", 1), ("highmed", 2), ("highlow", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventSeverity.setStatus('mandatory')
nwIpxEventProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventProtocol.setStatus('mandatory')
nwIpxEventIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventIfNum.setStatus('mandatory')
nwIpxEventTextString = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 3, 2, 2, 10, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwIpxEventTextString.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-IPX-ROUTER-MIB", nwIpxFwdSystem=nwIpxFwdSystem, nwIpxNetBIOSIfCtrFilteredBytes=nwIpxNetBIOSIfCtrFilteredBytes, nwIpxRipIfCtrFilteredBytes=nwIpxRipIfCtrFilteredBytes, nwIpxFibTable=nwIpxFibTable, nwIpxHostsSystem=nwIpxHostsSystem, nwIpxRipCtrAdminStatus=nwIpxRipCtrAdminStatus, nwIpxEventFltrIfNum=nwIpxEventFltrIfNum, nwIpxSapCtrReset=nwIpxSapCtrReset, nwIpxEventNumber=nwIpxEventNumber, nwIpxRip=nwIpxRip, nwIpxEchoIfIndex=nwIpxEchoIfIndex, nwIpxRipSystem=nwIpxRipSystem, nwIpxEchoIfOperationalTime=nwIpxEchoIfOperationalTime, nwIpxFwdCtrHostOutPkts=nwIpxFwdCtrHostOutPkts, nwIpxRipAgeOut=nwIpxRipAgeOut, nwIpxEventFltrProtocol=nwIpxEventFltrProtocol, nwIpxNetBIOSCtrOutBytes=nwIpxNetBIOSCtrOutBytes, nwIpxSapServerIfNode=nwIpxSapServerIfNode, nwIpxNetBIOSAdminReset=nwIpxNetBIOSAdminReset, nwIpxSapHoldDown=nwIpxSapHoldDown, nwIpxAddrIfIndex=nwIpxAddrIfIndex, nwIpxRipIfCtrIfIndex=nwIpxRipIfCtrIfIndex, nwIpxFwdCtrHostInPkts=nwIpxFwdCtrHostInPkts, nwIpxRipIfConfig=nwIpxRipIfConfig, nwIpxAddressTable=nwIpxAddressTable, nwIpxRipAdminReset=nwIpxRipAdminReset, nwIpxSapIfCtrDiscardBytes=nwIpxSapIfCtrDiscardBytes, nwIpxFwdIfCacheControl=nwIpxFwdIfCacheControl, nwIpxFwdIfCtrLenErrPkts=nwIpxFwdIfCtrLenErrPkts, nwIpxRipIfCtrAdminStatus=nwIpxRipIfCtrAdminStatus, nwIpxBcastIfCtrEntry=nwIpxBcastIfCtrEntry, nwIpxEchoCtrInBytes=nwIpxEchoCtrInBytes, nwIpxRipIfFloodDelay=nwIpxRipIfFloodDelay, nwIpxBcastIfCtrInPkts=nwIpxBcastIfCtrInPkts, nwIpxSapIfCtrIfIndex=nwIpxSapIfCtrIfIndex, nwIpxSysConfig=nwIpxSysConfig, nwIpxFwdIfCtrIfIndex=nwIpxFwdIfCtrIfIndex, nwIpxSapConfig=nwIpxSapConfig, nwIpxBcastIfIndex=nwIpxBcastIfIndex, nwIpxEventFilterEntry=nwIpxEventFilterEntry, nwIpxRipIfCtrInPkts=nwIpxRipIfCtrInPkts, nwIpxFwdIfIndex=nwIpxFwdIfIndex, nwIpxEchoIfConfig=nwIpxEchoIfConfig, nwIpxSapIfOperationalTime=nwIpxSapIfOperationalTime, nwIpxSapIfCtrFilteredBytes=nwIpxSapIfCtrFilteredBytes, nwIpxRipCtrOutPkts=nwIpxRipCtrOutPkts, nwIpxEchoIfCtrFilteredBytes=nwIpxEchoIfCtrFilteredBytes, nwIpxRipIfAclStatus=nwIpxRipIfAclStatus, nwIpxEchoIfCtrIfIndex=nwIpxEchoIfCtrIfIndex, nwIpxWorkGroup=nwIpxWorkGroup, nwIpxSysOperationalTimel=nwIpxSysOperationalTimel, nwIpxRipIfCounters=nwIpxRipIfCounters, nwIpxSapIfXmitCost=nwIpxSapIfXmitCost, nwIpxBcastVersion=nwIpxBcastVersion, nwIpxSapServerTable=nwIpxSapServerTable, nwIpxEchoIfAdminStatus=nwIpxEchoIfAdminStatus, nwIpxSapServerIfAge=nwIpxSapServerIfAge, nwIpxBcastCtrDiscardBytes=nwIpxBcastCtrDiscardBytes, nwIpxSapStackSize=nwIpxSapStackSize, nwIpxFwdIfCtrFwdBytes=nwIpxFwdIfCtrFwdBytes, nwIpxBcastIfEntry=nwIpxBcastIfEntry, nwIpxSapIfCtrInPkts=nwIpxSapIfCtrInPkts, nwIpxFwdIfCtrDiscardBytes=nwIpxFwdIfCtrDiscardBytes, nwIpxEchoIfCtrEntry=nwIpxEchoIfCtrEntry, nwIpxLinkState=nwIpxLinkState, nwIpxBroadcastIfCounters=nwIpxBroadcastIfCounters, nwIpxSapCtrFilteredBytes=nwIpxSapCtrFilteredBytes, nwIpxForwarding=nwIpxForwarding, nwIpxSapIfAdvertisement=nwIpxSapIfAdvertisement, nwIpxEchoOperationalTime=nwIpxEchoOperationalTime, nwIpxSapOperationalTime=nwIpxSapOperationalTime, nwIpxFwdCtrOperationalTime=nwIpxFwdCtrOperationalTime, nwIpxRipRtTicks=nwIpxRipRtTicks, nwIpxFwdIfOperStatus=nwIpxFwdIfOperStatus, nwIpxRipIfAdvertisement=nwIpxRipIfAdvertisement, nwIpxFwdCtrHostOutBytes=nwIpxFwdCtrHostOutBytes, nwIpxEchoIfCtrTable=nwIpxEchoIfCtrTable, nwIpxEventTable=nwIpxEventTable, nwIpxNetBIOSCtrInBytes=nwIpxNetBIOSCtrInBytes, nwIpxFilters=nwIpxFilters, nwIpxNetBIOSIfCtrDiscardBytes=nwIpxNetBIOSIfCtrDiscardBytes, nwIpxNetBIOSIfCtrReset=nwIpxNetBIOSIfCtrReset, nwIpxSapDatabaseThreshold=nwIpxSapDatabaseThreshold, nwIpxHostsToMedia=nwIpxHostsToMedia, nwIpxSapIfEntry=nwIpxSapIfEntry, nwIpxNetBIOSCtrReset=nwIpxNetBIOSCtrReset, nwIpxRipIfCtrOutBytes=nwIpxRipIfCtrOutBytes, nwIpxSapIfCtrOutPkts=nwIpxSapIfCtrOutPkts, nwIpxRipRtHops=nwIpxRipRtHops, nwIpxSapIfAclIdentifier=nwIpxSapIfAclIdentifier, nwIpxSysAdministration=nwIpxSysAdministration, nwIpxRipDatabase=nwIpxRipDatabase, nwIpxSapIfCtrReset=nwIpxSapIfCtrReset, nwIpxSapAdminReset=nwIpxSapAdminReset, nwIpxFwdIfCtrEntry=nwIpxFwdIfCtrEntry, nwIpxBcastIfOperationalTime=nwIpxBcastIfOperationalTime, nwIpxNetBIOSIfCtrIfIndex=nwIpxNetBIOSIfCtrIfIndex, nwIpxRipIfRequestDelay=nwIpxRipIfRequestDelay, nwIpxHostsInterfaces=nwIpxHostsInterfaces, nwIpxEventFltrType=nwIpxEventFltrType, nwIpxEchoOperStatus=nwIpxEchoOperStatus, nwIpxAclSrcNode=nwIpxAclSrcNode, nwIpxFwdIfCtrFilteredBytes=nwIpxFwdIfCtrFilteredBytes, nwIpxNetBIOSAdminStatus=nwIpxNetBIOSAdminStatus, nwIpxAclIdentifier=nwIpxAclIdentifier, nwIpxFwdCtrOutPkts=nwIpxFwdCtrOutPkts, nwIpxFibNextHopNet=nwIpxFibNextHopNet, nwIpxAddrIfControl=nwIpxAddrIfControl, nwIpxRipIfIndex=nwIpxRipIfIndex, nwIpxSapIfFloodDelay=nwIpxSapIfFloodDelay, nwIpxSapIfSplitHorizon=nwIpxSapIfSplitHorizon, nwIpxNetBIOSIfCounters=nwIpxNetBIOSIfCounters, nwIpxEventFilterTable=nwIpxEventFilterTable, nwIpxNlsp=nwIpxNlsp, nwIpxFwdCtrOutBytes=nwIpxFwdCtrOutBytes, nwIpxFwdIfCtrAddrErrPkts=nwIpxFwdIfCtrAddrErrPkts, nwIpxFwdCtrFilteredPkts=nwIpxFwdCtrFilteredPkts, nwIpxSapCtrFilteredPkts=nwIpxSapCtrFilteredPkts, nwIpxSapServerIfEntry=nwIpxSapServerIfEntry, nwIpxMibs=nwIpxMibs, nwIpxSapIfConfig=nwIpxSapIfConfig, nwIpxEchoCtrInPkts=nwIpxEchoCtrInPkts, nwIpxFwdCounters=nwIpxFwdCounters, nwIpxEventType=nwIpxEventType, nwIpxRipIfType=nwIpxRipIfType, nwIpxSapFilters=nwIpxSapFilters, nwIpxHostMapEntry=nwIpxHostMapEntry, nwIpxSysAdminReset=nwIpxSysAdminReset, nwIpxNetBIOSCtrFilteredBytes=nwIpxNetBIOSCtrFilteredBytes, nwIpxRipIfTable=nwIpxRipIfTable, nwIpxAclSrcSocket=nwIpxAclSrcSocket, nwIpxSapIfSnooping=nwIpxSapIfSnooping, nwIpxAclSequence=nwIpxAclSequence, nwIpxFwdCtrInBytes=nwIpxFwdCtrInBytes, nwIpxRipIfAdminStatus=nwIpxRipIfAdminStatus, nwIpxBroadcastSystem=nwIpxBroadcastSystem, nwIpxBcastIfAdminStatus=nwIpxBcastIfAdminStatus, nwIpxBcastIfCtrAdminStatus=nwIpxBcastIfCtrAdminStatus, nwIpxEchoSystem=nwIpxEchoSystem, nwIpxFwdIfCtrTable=nwIpxFwdIfCtrTable, nwIpxSapServerIfTable=nwIpxSapServerIfTable, nwIpxBcastIfOperStatus=nwIpxBcastIfOperStatus, nwIpxRipIfAclIdentifier=nwIpxRipIfAclIdentifier, nwIpxEchoCtrOutBytes=nwIpxEchoCtrOutBytes, nwIpxNetBIOSIfCtrTable=nwIpxNetBIOSIfCtrTable, nwIpxEchoIfCtrOperationalTime=nwIpxEchoIfCtrOperationalTime, nwIpxRipCtrInBytes=nwIpxRipCtrInBytes, nwIpxSapServerIfName=nwIpxSapServerIfName, nwIpxSapIfType=nwIpxSapIfType, nwIpxRipCtrFilteredPkts=nwIpxRipCtrFilteredPkts, nwIpxFwdCtrHostInBytes=nwIpxFwdCtrHostInBytes, nwIpxHostMapIfIndex=nwIpxHostMapIfIndex, nwIpxFwdIfCtrHostInPkts=nwIpxFwdIfCtrHostInPkts, nwIpxSapCtrDiscardPkts=nwIpxSapCtrDiscardPkts, nwIpxHostMapTable=nwIpxHostMapTable, nwIpxEventFltrSeverity=nwIpxEventFltrSeverity, nwIpxFwdIfCtrDiscardPkts=nwIpxFwdIfCtrDiscardPkts, nwIpxRipThreadPriority=nwIpxRipThreadPriority, nwIpxAddrIfAddress=nwIpxAddrIfAddress, nwIpxRipIfCtrDiscardBytes=nwIpxRipIfCtrDiscardBytes, nwIpxAddrIfAddrType=nwIpxAddrIfAddrType, nwIpxSapCounters=nwIpxSapCounters, nwIpxEventMaxEntries=nwIpxEventMaxEntries, nwIpxBroadcastIfConfig=nwIpxBroadcastIfConfig, nwIpxSapIfCtrOperationalTime=nwIpxSapIfCtrOperationalTime, nwIpxFwdCtrFwdBytes=nwIpxFwdCtrFwdBytes, nwIpxFibNextHopIf=nwIpxFibNextHopIf, nwIpxBcastAdminReset=nwIpxBcastAdminReset, nwIpxRipOperationalTime=nwIpxRipOperationalTime, nwIpxNetBIOSOperationalTime=nwIpxNetBIOSOperationalTime, nwIpxRipRtNetId=nwIpxRipRtNetId, nwIpxFwdIfAclIdentifier=nwIpxFwdIfAclIdentifier, nwIpxRipStackSize=nwIpxRipStackSize, nwIpxRipRtAge=nwIpxRipRtAge, nwIpxRipIfVersion=nwIpxRipIfVersion, nwIpxSapServerIfIfNum=nwIpxSapServerIfIfNum, nwIpxHostMapFraming=nwIpxHostMapFraming, nwIpxNetBIOSIfCtrOutPkts=nwIpxNetBIOSIfCtrOutPkts, nwIpxBcastIfCtrOperationalTime=nwIpxBcastIfCtrOperationalTime, nwIpxEchoCtrOperationalTime=nwIpxEchoCtrOperationalTime, nwIpxMibRevText=nwIpxMibRevText, nwIpxFwdIfCtrOutPkts=nwIpxFwdIfCtrOutPkts, nwIpxNetBIOSOperStatus=nwIpxNetBIOSOperStatus, nwIpxNetBIOSCtrOutPkts=nwIpxNetBIOSCtrOutPkts, nwIpxEchoIfCtrReset=nwIpxEchoIfCtrReset, nwIpxFwdCtrFwdPkts=nwIpxFwdCtrFwdPkts, nwIpxRipCounters=nwIpxRipCounters, nwIpxFwdIfFrameType=nwIpxFwdIfFrameType, nwIpxSapServerIfFlags=nwIpxSapServerIfFlags, nwIpxNetBIOSCtrAdminStatus=nwIpxNetBIOSCtrAdminStatus, nwIpxSapServerIfSrcNode=nwIpxSapServerIfSrcNode, nwIpxRipIfPriority=nwIpxRipIfPriority, nwIpxAclTable=nwIpxAclTable, nwIpxSapAdminStatus=nwIpxSapAdminStatus, nwIpxBcastCtrReset=nwIpxBcastCtrReset, nwIpxFwdCtrInPkts=nwIpxFwdCtrInPkts, nwIpxFwdIfCtrInBytes=nwIpxFwdIfCtrInBytes, nwIpxAclMatches=nwIpxAclMatches, nwIpxTopology=nwIpxTopology, nwIpxSapCtrOperationalTime=nwIpxSapCtrOperationalTime, nwIpxHostMapPortNumber=nwIpxHostMapPortNumber, nwIpxRipIfHelloTimer=nwIpxRipIfHelloTimer, nwIpxBcastIfCtrInBytes=nwIpxBcastIfCtrInBytes, nwIpxHostMapCircuitID=nwIpxHostMapCircuitID, nwIpxDistanceVector=nwIpxDistanceVector, nwIpxEchoCtrFilteredBytes=nwIpxEchoCtrFilteredBytes, nwIpxRipIfCtrTable=nwIpxRipIfCtrTable, nwIpxFwdIfCtrHostOutBytes=nwIpxFwdIfCtrHostOutBytes, nwIpxFwdIfCacheEntries=nwIpxFwdIfCacheEntries, nwIpxRipRouteTable=nwIpxRipRouteTable, nwIpxFwdIfCounters=nwIpxFwdIfCounters, nwIpxBcastIfTable=nwIpxBcastIfTable, nwIpxRipRouteEntry=nwIpxRipRouteEntry, nwIpxBcastCtrAdminStatus=nwIpxBcastCtrAdminStatus, nwIpxEchoAdminReset=nwIpxEchoAdminReset, nwIpxSapInterfaces=nwIpxSapInterfaces, nwIpxSapCtrAdminStatus=nwIpxSapCtrAdminStatus, nwIpxEchoIfCtrDiscardPkts=nwIpxEchoIfCtrDiscardPkts, nwIpxNetBIOSCtrOperationalTime=nwIpxNetBIOSCtrOperationalTime, nwIpxSystem=nwIpxSystem, nwIpxFwdIfConfig=nwIpxFwdIfConfig, nwIpxEchoIfCtrInPkts=nwIpxEchoIfCtrInPkts, nwIpxNetBIOSIfTable=nwIpxNetBIOSIfTable, nwIpxSapIfCtrFilteredPkts=nwIpxSapIfCtrFilteredPkts, nwIpxFwdCtrDiscardBytes=nwIpxFwdCtrDiscardBytes, nwIpxFwdIfCtrAdminStatus=nwIpxFwdIfCtrAdminStatus, nwIpxFwdIfCtrInPkts=nwIpxFwdIfCtrInPkts, nwIpxRipCtrDiscardBytes=nwIpxRipCtrDiscardBytes, nwIpxRipCtrOperationalTime=nwIpxRipCtrOperationalTime, nwIpxComponents=nwIpxComponents, nwIpxEventLogFilterTable=nwIpxEventLogFilterTable, nwIpxSapServerIfHops=nwIpxSapServerIfHops, nwIpxRipIfCtrOperationalTime=nwIpxRipIfCtrOperationalTime, nwIpxFwdCtrReset=nwIpxFwdCtrReset, nwIpxEvent=nwIpxEvent, nwIpxSapIfCounters=nwIpxSapIfCounters, nwIpxSapCtrOutBytes=nwIpxSapCtrOutBytes, nwIpxSapIfCtrInBytes=nwIpxSapIfCtrInBytes, nwIpxSapIfOperStatus=nwIpxSapIfOperStatus, nwIpxRipCtrReset=nwIpxRipCtrReset, nwIpxHostMapIpxAddr=nwIpxHostMapIpxAddr, nwIpxBcastIfCtrFilteredBytes=nwIpxBcastIfCtrFilteredBytes, nwIpxRipIfSplitHorizon=nwIpxRipIfSplitHorizon, nwIpxEchoIfCtrInBytes=nwIpxEchoIfCtrInBytes, nwIpxNetBIOSCtrFilteredPkts=nwIpxNetBIOSCtrFilteredPkts, nwIpxHostMapType=nwIpxHostMapType, nwIpxBcastIfCtrFilteredPkts=nwIpxBcastIfCtrFilteredPkts, nwIpxFwdCtrAddrErrPkts=nwIpxFwdCtrAddrErrPkts, nwIpxNetBIOSIfConfig=nwIpxNetBIOSIfConfig, nwIpxRipRtType=nwIpxRipRtType, nwIpxEchoCtrAdminStatus=nwIpxEchoCtrAdminStatus, nwIpxEventEntry=nwIpxEventEntry, nwIpxEchoInterface=nwIpxEchoInterface, nwIpxFwdIfCacheMisses=nwIpxFwdIfCacheMisses)
mibBuilder.exportSymbols("CTRON-IPX-ROUTER-MIB", nwIpxFwdIfControl=nwIpxFwdIfControl, nwIpxBcastCtrFilteredBytes=nwIpxBcastCtrFilteredBytes, nwIpxBcastCtrOutBytes=nwIpxBcastCtrOutBytes, nwIpxBroadcastConfig=nwIpxBroadcastConfig, nwIpxFwdIfOperationalTime=nwIpxFwdIfOperationalTime, nwIpxRipRtSrcNode=nwIpxRipRtSrcNode, nwIpxRipRtFlags=nwIpxRipRtFlags, nwIpxFibRouteType=nwIpxFibRouteType, nwIpxEchoCtrOutPkts=nwIpxEchoCtrOutPkts, nwIpxBcastIfCtrOutBytes=nwIpxBcastIfCtrOutBytes, nwIpxEchoConfig=nwIpxEchoConfig, nwIpxNetBIOSSystem=nwIpxNetBIOSSystem, nwIpxSapIfVersion=nwIpxSapIfVersion, nwIpxBcastIfCtrDiscardPkts=nwIpxBcastIfCtrDiscardPkts, nwIpxFwdCtrDiscardPkts=nwIpxFwdCtrDiscardPkts, nwIpxFwdIfEntry=nwIpxFwdIfEntry, nwIpxFwdIfCtrOutBytes=nwIpxFwdIfCtrOutBytes, nwIpxEventFltrControl=nwIpxEventFltrControl, nwIpxFwdIfCtrHostDiscardBytes=nwIpxFwdIfCtrHostDiscardBytes, nwIpxFwdCtrLenErrPkts=nwIpxFwdCtrLenErrPkts, nwIpxNetBIOSIfCtrInPkts=nwIpxNetBIOSIfCtrInPkts, nwIpxAclDestNode=nwIpxAclDestNode, nwIpxRipIfXmitCost=nwIpxRipIfXmitCost, nwIpxEventTextString=nwIpxEventTextString, nwIpxSapVersion=nwIpxSapVersion, nwIpxSysRouterId=nwIpxSysRouterId, nwIpxRipIfCtrOutPkts=nwIpxRipIfCtrOutPkts, nwIpxSapThreadPriority=nwIpxSapThreadPriority, nwIpxFwdIfCtrFilteredPkts=nwIpxFwdIfCtrFilteredPkts, nwIpxNetBIOSCounters=nwIpxNetBIOSCounters, nwIpxBcastCtrFilteredPkts=nwIpxBcastCtrFilteredPkts, nwIpxAclEntry=nwIpxAclEntry, nwIpxFwdIfForwarding=nwIpxFwdIfForwarding, nwIpxRipConfig=nwIpxRipConfig, nwIpxNetBIOSCtrDiscardPkts=nwIpxNetBIOSCtrDiscardPkts, nwIpxRipIfCtrEntry=nwIpxRipIfCtrEntry, nwIpxSapServerIfType=nwIpxSapServerIfType, nwIpxNetBIOSInterface=nwIpxNetBIOSInterface, nwIpxNetBIOSIfOperStatus=nwIpxNetBIOSIfOperStatus, nwIpxSysOperStatus=nwIpxSysOperStatus, nwIpxSapIfCtrEntry=nwIpxSapIfCtrEntry, nwIpxEventProtocol=nwIpxEventProtocol, nwIpxFib=nwIpxFib, nwIpxNetBIOSCtrInPkts=nwIpxNetBIOSCtrInPkts, nwIpxFwdIfTable=nwIpxFwdIfTable, nwIpxFwdIfAclStatus=nwIpxFwdIfAclStatus, nwIpxBcastCtrOperationalTime=nwIpxBcastCtrOperationalTime, nwIpxRipCtrInPkts=nwIpxRipCtrInPkts, nwIpxBcastCtrDiscardPkts=nwIpxBcastCtrDiscardPkts, nwIpxBroadcastInterface=nwIpxBroadcastInterface, nwIpxAccessControl=nwIpxAccessControl, nwIpxFwdIfCtrHostDiscardPkts=nwIpxFwdIfCtrHostDiscardPkts, nwIpxFwdIfMtu=nwIpxFwdIfMtu, nwIpxRipIfCtrFilteredPkts=nwIpxRipIfCtrFilteredPkts, nwIpxSysAdminStatus=nwIpxSysAdminStatus, nwIpxEchoCtrReset=nwIpxEchoCtrReset, nwIpxFwdIfCtrOperationalTime=nwIpxFwdIfCtrOperationalTime, nwIpxSapCtrInPkts=nwIpxSapCtrInPkts, nwIpxEchoSCtrDiscardBytes=nwIpxEchoSCtrDiscardBytes, nwIpxEchoCounters=nwIpxEchoCounters, nwIpxFwdCtrHdrErrPkts=nwIpxFwdCtrHdrErrPkts, nwIpxBcastIfCtrDiscardBytes=nwIpxBcastIfCtrDiscardBytes, nwIpxNetBIOSIfOperationalTime=nwIpxNetBIOSIfOperationalTime, nwIpxFibTimeTicks=nwIpxFibTimeTicks, nwIpxEventTime=nwIpxEventTime, nwIpxRipCtrFilteredBytes=nwIpxRipCtrFilteredBytes, nwIpxAclPermission=nwIpxAclPermission, nwIpxNetBIOSIfCtrOperationalTime=nwIpxNetBIOSIfCtrOperationalTime, nwIpxBcastIfCtrTable=nwIpxBcastIfCtrTable, nwIpxRedirector=nwIpxRedirector, nwIpxNetBIOSConfig=nwIpxNetBIOSConfig, nwIpxFibEntry=nwIpxFibEntry, IpxAddress=IpxAddress, nwIpxBcastOperStatus=nwIpxBcastOperStatus, nwIpxFwdInterfaces=nwIpxFwdInterfaces, nwIpxBcastIfCtrIfIndex=nwIpxBcastIfCtrIfIndex, nwIpxSapServerIfServiceType=nwIpxSapServerIfServiceType, nwIpxNetBIOS=nwIpxNetBIOS, nwIpxBcastAdminStatus=nwIpxBcastAdminStatus, nwIpxFwdCtrAdminStatus=nwIpxFwdCtrAdminStatus, nwIpxEventIfNum=nwIpxEventIfNum, nwIpxNetBIOSIfCtrDiscardPkts=nwIpxNetBIOSIfCtrDiscardPkts, nwIpxNetBIOSIfCtrOutBytes=nwIpxNetBIOSIfCtrOutBytes, nwIpxSapIfCtrOutBytes=nwIpxSapIfCtrOutBytes, nwIpxRouter=nwIpxRouter, nwIpxFwdIfCtrFwdPkts=nwIpxFwdIfCtrFwdPkts, nwIpxFwdIfCtrReset=nwIpxFwdIfCtrReset, nwIpxSapIfCtrTable=nwIpxSapIfCtrTable, nwIpxRipHoldDown=nwIpxRipHoldDown, nwIpxNetBIOSIfCtrFilteredPkts=nwIpxNetBIOSIfCtrFilteredPkts, nwIpxRipCtrDiscardPkts=nwIpxRipCtrDiscardPkts, nwIpxFwdIfCacheHits=nwIpxFwdIfCacheHits, nwIpxFibHops=nwIpxFibHops, nwIpxSapAgeOut=nwIpxSapAgeOut, nwIpxBcastCtrInPkts=nwIpxBcastCtrInPkts, nwIpxRipOperStatus=nwIpxRipOperStatus, nwIpxBcastCtrInBytes=nwIpxBcastCtrInBytes, nwIpxBroadcast=nwIpxBroadcast, nwIpxAddrEntry=nwIpxAddrEntry, nwIpxEchoIfCtrOutPkts=nwIpxEchoIfCtrOutPkts, nwIpxNetBIOSIfEntry=nwIpxNetBIOSIfEntry, nwIpxEchoIfEntry=nwIpxEchoIfEntry, nwIpxEchoCtrFilteredPkts=nwIpxEchoCtrFilteredPkts, nwIpxEventAdminStatus=nwIpxEventAdminStatus, nwIpxEventTraceAll=nwIpxEventTraceAll, nwIpxRipAdminStatus=nwIpxRipAdminStatus, nwIpxSapIfTable=nwIpxSapIfTable, nwIpxNetBIOSCtrDiscardBytes=nwIpxNetBIOSCtrDiscardBytes, nwIpxSapIfCtrAdminStatus=nwIpxSapIfCtrAdminStatus, nwIpxRipFilters=nwIpxRipFilters, nwIpxSapIfRequestDelay=nwIpxSapIfRequestDelay, nwIpxRipRtIfIndex=nwIpxRipRtIfIndex, nwIpxEchoVersion=nwIpxEchoVersion, nwIpxSapIfHelloTimer=nwIpxSapIfHelloTimer, nwIpxSapServerIfSocket=nwIpxSapServerIfSocket, nwIpxFwdCtrHostDiscardBytes=nwIpxFwdCtrHostDiscardBytes, nwIpxEventLogConfig=nwIpxEventLogConfig, nwIpxFwdIfCtrHostOutPkts=nwIpxFwdIfCtrHostOutPkts, nwIpxSapIfPriority=nwIpxSapIfPriority, nwIpxEchoIfOperStatus=nwIpxEchoIfOperStatus, nwIpxRipInterfaces=nwIpxRipInterfaces, nwIpxAclDestNetNum=nwIpxAclDestNetNum, nwIpxSapServerIfNetId=nwIpxSapServerIfNetId, nwIpxFibNextHopNode=nwIpxFibNextHopNode, nwIpxSapSystem=nwIpxSapSystem, nwIpxRipIfCtrReset=nwIpxRipIfCtrReset, nwIpxFwdIfAdminStatus=nwIpxFwdIfAdminStatus, nwIpxNetBIOSIfCtrAdminStatus=nwIpxNetBIOSIfCtrAdminStatus, nwIpxEchoIfCtrOutBytes=nwIpxEchoIfCtrOutBytes, nwIpxEventFltrAction=nwIpxEventFltrAction, nwIpxNetBIOSIfCtrEntry=nwIpxNetBIOSIfCtrEntry, nwIpxFwdIfCtrHdrErrPkts=nwIpxFwdIfCtrHdrErrPkts, nwIpxEchoAdminStatus=nwIpxEchoAdminStatus, nwIpxSapCtrOutPkts=nwIpxSapCtrOutPkts, nwIpxEchoIfCounters=nwIpxEchoIfCounters, nwIpxSapOperStatus=nwIpxSapOperStatus, nwIpxRipIfOperationalTime=nwIpxRipIfOperationalTime, nwIpxHostMapPhysAddr=nwIpxHostMapPhysAddr, nwIpxNetBIOSIfAdminStatus=nwIpxNetBIOSIfAdminStatus, nwIpxEcho=nwIpxEcho, nwIpxRipIfCtrDiscardPkts=nwIpxRipIfCtrDiscardPkts, nwIpxSysVersion=nwIpxSysVersion, nwIpxSapCtrInBytes=nwIpxSapCtrInBytes, nwIpxRipCtrOutBytes=nwIpxRipCtrOutBytes, nwIpxRipVersion=nwIpxRipVersion, nwIpxRipIfCtrInBytes=nwIpxRipIfCtrInBytes, nwIpxSapIfCtrDiscardPkts=nwIpxSapIfCtrDiscardPkts, nwIpxNetBIOSIfCtrInBytes=nwIpxNetBIOSIfCtrInBytes, nwIpxEventLogTable=nwIpxEventLogTable, nwIpxFwdCtrFilteredBytes=nwIpxFwdCtrFilteredBytes, nwIpxSapIfAdminStatus=nwIpxSapIfAdminStatus, nwIpxEchoIfCtrFilteredPkts=nwIpxEchoIfCtrFilteredPkts, nwIpxAclSrcNetNum=nwIpxAclSrcNetNum, nwIpxFwdCtrHostDiscardPkts=nwIpxFwdCtrHostDiscardPkts, nwIpxBcastIfCtrReset=nwIpxBcastIfCtrReset, nwIpxBcastOperationalTime=nwIpxBcastOperationalTime, nwIpxBcastCtrOutPkts=nwIpxBcastCtrOutPkts, nwIpxEchoIfCtrDiscardBytes=nwIpxEchoIfCtrDiscardBytes, nwIpxEndSystems=nwIpxEndSystems, nwIpxSap=nwIpxSap, nwIpxRipIfEntry=nwIpxRipIfEntry, nwIpxBcastIfCtrOutPkts=nwIpxBcastIfCtrOutPkts, nwIpxSapIfAclStatus=nwIpxSapIfAclStatus, nwIpxEchoIfCtrAdminStatus=nwIpxEchoIfCtrAdminStatus, nwIpxAclDestSocket=nwIpxAclDestSocket, nwIpxFibNetId=nwIpxFibNetId, nwIpxAclValidEntries=nwIpxAclValidEntries, nwIpxRipDatabaseThreshold=nwIpxRipDatabaseThreshold, nwIpxRipIfOperStatus=nwIpxRipIfOperStatus, nwIpxRipIfSnooping=nwIpxRipIfSnooping, nwIpxSapIfIndex=nwIpxSapIfIndex, nwIpxEchoIfTable=nwIpxEchoIfTable, nwIpxBroadcastCounters=nwIpxBroadcastCounters, nwIpxSapCtrDiscardBytes=nwIpxSapCtrDiscardBytes, nwIpxNetBIOSVersion=nwIpxNetBIOSVersion, nwIpxFwdIfCtrHostInBytes=nwIpxFwdIfCtrHostInBytes, nwIpxEchoCtrDiscardPkts=nwIpxEchoCtrDiscardPkts, nwIpxRipIfPoisonReverse=nwIpxRipIfPoisonReverse, nwIpxNetBIOSIfIndex=nwIpxNetBIOSIfIndex, nwIpxEventSeverity=nwIpxEventSeverity, nwIpxSapIfPoisonReverse=nwIpxSapIfPoisonReverse)
