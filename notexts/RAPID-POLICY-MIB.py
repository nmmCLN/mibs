#
# PySNMP MIB module RAPID-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nortel/RAPID-POLICY-MIB
# Produced by pysmi-1.1.8 at Fri Jul  8 07:41:52 2022
# On host fv-az190-632 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
rapidstream, = mibBuilder.importSymbols("RAPID-MIB", "rapidstream")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, Integer32, IpAddress, NotificationType, Counter64, MibIdentifier, ModuleIdentity, Counter32, ObjectIdentity, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "Integer32", "IpAddress", "NotificationType", "Counter64", "MibIdentifier", "ModuleIdentity", "Counter32", "ObjectIdentity", "enterprises")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
rsPolicyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4355, 4))
rsPolicyMIB.setRevisions(('2001-05-21 12:00', '2002-11-01 12:00',))
if mibBuilder.loadTexts: rsPolicyMIB.setLastUpdated('0105211200Z')
if mibBuilder.loadTexts: rsPolicyMIB.setOrganization('WatchGuard Technologies, Inc.')
rsPolicyToTunnel = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 4, 1))
if mibBuilder.loadTexts: rsPolicyToTunnel.setStatus('current')
rsPolicyStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 4, 2))
if mibBuilder.loadTexts: rsPolicyStatistics.setStatus('current')
rsPolicyToTunnelNum = MibScalar((1, 3, 6, 1, 4, 1, 4355, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyToTunnelNum.setStatus('current')
rsPolicyToTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2), )
if mibBuilder.loadTexts: rsPolicyToTunnelTable.setStatus('current')
rsPolicyToTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2, 1), ).setIndexNames((0, "RAPID-POLICY-MIB", "rsPolicyToTunnelPolicyID"), (0, "RAPID-POLICY-MIB", "rsPolicyToTunnelTunnelID"))
if mibBuilder.loadTexts: rsPolicyToTunnelEntry.setStatus('current')
rsPolicyToTunnelPolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyToTunnelPolicyID.setStatus('current')
rsPolicyToTunnelTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyToTunnelTunnelID.setStatus('current')
rsPolicyTableNum = MibScalar((1, 3, 6, 1, 4, 1, 4355, 4, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyTableNum.setStatus('current')
rsPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2), )
if mibBuilder.loadTexts: rsPolicyTable.setStatus('current')
rsPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1), ).setIndexNames((0, "RAPID-POLICY-MIB", "rsPolicyID"))
if mibBuilder.loadTexts: rsPolicyEntry.setStatus('current')
rsPolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyID.setStatus('current')
rsPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyName.setStatus('current')
rsPolicyBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyBytes.setStatus('current')
rsPolicyPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyPackets.setStatus('current')
rsPolicyIpsecDecryptErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecDecryptErr.setStatus('current')
rsPolicyIpsecAuthErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecAuthErr.setStatus('current')
rsPolicyIpsecReplayErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecReplayErr.setStatus('current')
rsPolicyIpsecPadErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecPadErr.setStatus('current')
rsPolicyIpsecPolicyErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecPolicyErr.setStatus('current')
rsPolicyFwDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyFwDisc.setStatus('current')
rsPolicyOtherDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyOtherDisc.setStatus('current')
rsPolicyActiveStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyActiveStreams.setStatus('current')
rsPolicyIpsecDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecDisc.setStatus('current')
rsPolicyDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyDisc.setStatus('current')
rsPolicyNumTunl = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyNumTunl.setStatus('current')
rsPolicySingleCntrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicySingleCntrNum.setStatus('current')
rsPolicyLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyLogging.setStatus('current')
mibBuilder.exportSymbols("RAPID-POLICY-MIB", rsPolicyBytes=rsPolicyBytes, rsPolicyNumTunl=rsPolicyNumTunl, rsPolicyPackets=rsPolicyPackets, rsPolicyIpsecPadErr=rsPolicyIpsecPadErr, rsPolicyOtherDisc=rsPolicyOtherDisc, rsPolicyToTunnelNum=rsPolicyToTunnelNum, rsPolicyIpsecDecryptErr=rsPolicyIpsecDecryptErr, rsPolicyName=rsPolicyName, rsPolicyToTunnelTunnelID=rsPolicyToTunnelTunnelID, rsPolicyStatistics=rsPolicyStatistics, rsPolicyTableNum=rsPolicyTableNum, rsPolicyToTunnelTable=rsPolicyToTunnelTable, rsPolicyIpsecDisc=rsPolicyIpsecDisc, rsPolicyActiveStreams=rsPolicyActiveStreams, rsPolicyMIB=rsPolicyMIB, rsPolicyFwDisc=rsPolicyFwDisc, rsPolicyToTunnelPolicyID=rsPolicyToTunnelPolicyID, PYSNMP_MODULE_ID=rsPolicyMIB, rsPolicyIpsecPolicyErr=rsPolicyIpsecPolicyErr, rsPolicyToTunnelEntry=rsPolicyToTunnelEntry, rsPolicyID=rsPolicyID, rsPolicyIpsecAuthErr=rsPolicyIpsecAuthErr, rsPolicyLogging=rsPolicyLogging, rsPolicyToTunnel=rsPolicyToTunnel, rsPolicySingleCntrNum=rsPolicySingleCntrNum, rsPolicyIpsecReplayErr=rsPolicyIpsecReplayErr, rsPolicyDisc=rsPolicyDisc, rsPolicyEntry=rsPolicyEntry, rsPolicyTable=rsPolicyTable)
