#
# PySNMP MIB module RAPID-IPSEC-ENDPOINT-PAIR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nortel/RAPID-IPSEC-ENDPOINT-PAIR-MIB
# Produced by pysmi-1.1.8 at Mon Sep 19 08:34:52 2022
# On host fv-az278-268 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
rapidstream, = mibBuilder.importSymbols("RAPID-MIB", "rapidstream")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, Counter32, enterprises, Gauge32, ModuleIdentity, Unsigned32, Bits, ObjectIdentity, NotificationType, MibIdentifier, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Counter32", "enterprises", "Gauge32", "ModuleIdentity", "Unsigned32", "Bits", "ObjectIdentity", "NotificationType", "MibIdentifier", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rsIpsecEndpointPairModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 4355, 5))
rsIpsecEndpointPairModule.setRevisions(('2000-03-21 12:00', '2002-11-01 12:00',))
if mibBuilder.loadTexts: rsIpsecEndpointPairModule.setLastUpdated('9909081200Z')
if mibBuilder.loadTexts: rsIpsecEndpointPairModule.setOrganization('WatchGuard Technologies, Inc.')
rsIpsecEndpointPairMIB = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 5, 1))
if mibBuilder.loadTexts: rsIpsecEndpointPairMIB.setStatus('current')
rsIpsecEndpointPair = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1))
if mibBuilder.loadTexts: rsIpsecEndpointPair.setStatus('current')
rsIpsecEndpointPairStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2))
if mibBuilder.loadTexts: rsIpsecEndpointPairStatistics.setStatus('current')
rsIpsecEndpointPairNum = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairNum.setStatus('current')
rsIpsecEndpointPairTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2), )
if mibBuilder.loadTexts: rsIpsecEndpointPairTable.setStatus('current')
rsIpsecEndpointPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1), ).setIndexNames((0, "RAPID-IPSEC-ENDPOINT-PAIR-MIB", "rsIpsecEndpointPairIndex"))
if mibBuilder.loadTexts: rsIpsecEndpointPairEntry.setStatus('current')
rsIpsecEndpointPairIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairIndex.setStatus('current')
rsIpsecEndpointPairLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairLocalAddr.setStatus('current')
rsIpsecEndpointPairPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerAddr.setStatus('current')
rsIpsecEndpointPairInSAs = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairInSAs.setStatus('current')
rsIpsecEndpointPairOutSAs = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairOutSAs.setStatus('current')
rsIpsecEndpointPairInAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 6), Counter32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairInAccKbytes.setStatus('current')
rsIpsecEndpointPairOutAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 7), Counter32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairOutAccKbytes.setStatus('current')
rsIpsecEndpointPairInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairInPackets.setStatus('current')
rsIpsecEndpointPairOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairOutPackets.setStatus('current')
rsIpsecEndpointPairDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairDecryptErrors.setStatus('current')
rsIpsecEndpointPairAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairAuthErrors.setStatus('current')
rsIpsecEndpointPairReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairReplayErrors.setStatus('current')
rsIpsecEndpointPairPolicyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairPolicyErrors.setStatus('current')
rsIpsecEndpointPairPadErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairPadErrors.setStatus('current')
rsIpsecEndpointPairOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairOtherReceiveErrors.setStatus('current')
rsIpsecEndpointPairSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairSendErrors.setStatus('current')
rsIpsecEndpointPairTotalInSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalInSAs.setStatus('current')
rsIpsecEndpointPairTotalOutSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalOutSAs.setStatus('current')
rsIpsecEndpointPairTotalInAccKbytes = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 3), Counter32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalInAccKbytes.setStatus('current')
rsIpsecEndpointPairTotalOutAccKbytes = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalOutAccKbytes.setStatus('current')
rsIpsecEndpointPairTotalInPackets = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 5), Counter32()).setUnits('Kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalInPackets.setStatus('current')
rsIpsecEndpointPairTotalOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalOutPackets.setStatus('current')
rsIpsecEndpointPairTotalDecryptErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalDecryptErrors.setStatus('current')
rsIpsecEndpointPairTotalAuthErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalAuthErrors.setStatus('current')
rsIpsecEndpointPairTotalReplayErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalReplayErrors.setStatus('current')
rsIpsecEndpointPairTotalPolicyErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalPolicyErrors.setStatus('current')
rsIpsecEndpointPairTotalPadErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalPadErrors.setStatus('current')
rsIpsecEndpointPairTotalOtherReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalOtherReceiveErrors.setStatus('current')
rsIpsecEndpointPairTotalSendErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairTotalSendErrors.setStatus('current')
rsIpsecEndpointPairPeerIPToTunnel = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 5, 1, 3))
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerIPToTunnel.setStatus('current')
rsIpsecEndpointPairPeerIPToTunnelNum = MibScalar((1, 3, 6, 1, 4, 1, 4355, 5, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerIPToTunnelNum.setStatus('current')
rsIpsecEndpointPairPeerIPToTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 5, 1, 3, 2), )
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerIPToTunnelTable.setStatus('current')
rsIpsecEndpointPairPeerIPToTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 5, 1, 3, 2, 1), ).setIndexNames((0, "RAPID-IPSEC-ENDPOINT-PAIR-MIB", "rsIpsecEndpointPairPeerIPToTunnelPeerIP"), (0, "RAPID-IPSEC-ENDPOINT-PAIR-MIB", "rsIpsecEndpointPairPeerIPToTunnelTunnelID"))
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerIPToTunnelEntry.setStatus('current')
rsIpsecEndpointPairPeerIPToTunnelPeerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 3, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerIPToTunnelPeerIP.setStatus('current')
rsIpsecEndpointPairPeerIPToTunnelTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 5, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEndpointPairPeerIPToTunnelTunnelID.setStatus('current')
mibBuilder.exportSymbols("RAPID-IPSEC-ENDPOINT-PAIR-MIB", rsIpsecEndpointPairOtherReceiveErrors=rsIpsecEndpointPairOtherReceiveErrors, rsIpsecEndpointPairTotalDecryptErrors=rsIpsecEndpointPairTotalDecryptErrors, rsIpsecEndpointPairInAccKbytes=rsIpsecEndpointPairInAccKbytes, rsIpsecEndpointPairTotalPadErrors=rsIpsecEndpointPairTotalPadErrors, rsIpsecEndpointPairTotalOtherReceiveErrors=rsIpsecEndpointPairTotalOtherReceiveErrors, rsIpsecEndpointPairPeerIPToTunnelNum=rsIpsecEndpointPairPeerIPToTunnelNum, rsIpsecEndpointPairTable=rsIpsecEndpointPairTable, rsIpsecEndpointPairTotalInSAs=rsIpsecEndpointPairTotalInSAs, rsIpsecEndpointPairNum=rsIpsecEndpointPairNum, rsIpsecEndpointPairDecryptErrors=rsIpsecEndpointPairDecryptErrors, rsIpsecEndpointPairTotalInAccKbytes=rsIpsecEndpointPairTotalInAccKbytes, rsIpsecEndpointPairTotalInPackets=rsIpsecEndpointPairTotalInPackets, rsIpsecEndpointPairPolicyErrors=rsIpsecEndpointPairPolicyErrors, rsIpsecEndpointPairInSAs=rsIpsecEndpointPairInSAs, rsIpsecEndpointPairTotalReplayErrors=rsIpsecEndpointPairTotalReplayErrors, rsIpsecEndpointPairInPackets=rsIpsecEndpointPairInPackets, rsIpsecEndpointPairLocalAddr=rsIpsecEndpointPairLocalAddr, rsIpsecEndpointPairTotalSendErrors=rsIpsecEndpointPairTotalSendErrors, rsIpsecEndpointPairPeerIPToTunnelTable=rsIpsecEndpointPairPeerIPToTunnelTable, rsIpsecEndpointPairTotalOutAccKbytes=rsIpsecEndpointPairTotalOutAccKbytes, rsIpsecEndpointPairStatistics=rsIpsecEndpointPairStatistics, rsIpsecEndpointPairTotalPolicyErrors=rsIpsecEndpointPairTotalPolicyErrors, rsIpsecEndpointPairOutPackets=rsIpsecEndpointPairOutPackets, rsIpsecEndpointPairSendErrors=rsIpsecEndpointPairSendErrors, rsIpsecEndpointPairOutSAs=rsIpsecEndpointPairOutSAs, rsIpsecEndpointPairTotalAuthErrors=rsIpsecEndpointPairTotalAuthErrors, rsIpsecEndpointPairAuthErrors=rsIpsecEndpointPairAuthErrors, rsIpsecEndpointPairMIB=rsIpsecEndpointPairMIB, rsIpsecEndpointPairIndex=rsIpsecEndpointPairIndex, rsIpsecEndpointPairTotalOutSAs=rsIpsecEndpointPairTotalOutSAs, rsIpsecEndpointPairReplayErrors=rsIpsecEndpointPairReplayErrors, rsIpsecEndpointPairModule=rsIpsecEndpointPairModule, rsIpsecEndpointPairPeerIPToTunnelTunnelID=rsIpsecEndpointPairPeerIPToTunnelTunnelID, PYSNMP_MODULE_ID=rsIpsecEndpointPairModule, rsIpsecEndpointPairPeerIPToTunnelEntry=rsIpsecEndpointPairPeerIPToTunnelEntry, rsIpsecEndpointPairTotalOutPackets=rsIpsecEndpointPairTotalOutPackets, rsIpsecEndpointPairPeerIPToTunnelPeerIP=rsIpsecEndpointPairPeerIPToTunnelPeerIP, rsIpsecEndpointPairOutAccKbytes=rsIpsecEndpointPairOutAccKbytes, rsIpsecEndpointPairPeerAddr=rsIpsecEndpointPairPeerAddr, rsIpsecEndpointPair=rsIpsecEndpointPair, rsIpsecEndpointPairEntry=rsIpsecEndpointPairEntry, rsIpsecEndpointPairPadErrors=rsIpsecEndpointPairPadErrors, rsIpsecEndpointPairPeerIPToTunnel=rsIpsecEndpointPairPeerIPToTunnel)
