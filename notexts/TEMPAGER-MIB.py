#
# PySNMP MIB module TEMPAGER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/avtech/TEMPAGER-MIB
# Produced by pysmi-1.1.8 at Thu Sep 15 09:35:08 2022
# On host fv-az196-500 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, Gauge32, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, enterprises, Bits, Counter32, Unsigned32, MibIdentifier, ObjectIdentity, TimeTicks, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "Gauge32", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "enterprises", "Bits", "Counter32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
avtech = MibIdentifier((1, 3, 6, 1, 4, 1, 20916))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1))
tempager = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 1))
sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 1, 2))
thresholds = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3))
temperature = MibIdentifier((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1))
tempreading1c = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading1c.setStatus('mandatory')
tempreading2c = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading2c.setStatus('mandatory')
tempreading3c = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading3c.setStatus('mandatory')
tempreading4c = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading4c.setStatus('mandatory')
tempreading1f = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading1f.setStatus('mandatory')
tempreading2f = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading2f.setStatus('mandatory')
tempreading3f = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading3f.setStatus('mandatory')
tempreading4f = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempreading4f.setStatus('mandatory')
alarmtemp1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmtemp1.setStatus('mandatory')
alarmtemp2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmtemp2.setStatus('mandatory')
alarmtemp3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmtemp3.setStatus('mandatory')
alarmtemp4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmtemp4.setStatus('mandatory')
alarmmessage = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 2, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmmessage.setStatus('mandatory')
upperlimit1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upperlimit1.setStatus('mandatory')
lowerlimit1 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowerlimit1.setStatus('mandatory')
upperlimit2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upperlimit2.setStatus('mandatory')
lowerlimit2 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowerlimit2.setStatus('mandatory')
upperlimit3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upperlimit3.setStatus('mandatory')
lowerlimit3 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowerlimit3.setStatus('mandatory')
upperlimit4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upperlimit4.setStatus('mandatory')
lowerlimit4 = MibScalar((1, 3, 6, 1, 4, 1, 20916, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowerlimit4.setStatus('mandatory')
alarmstart1_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,1)).setLabel("alarmstart1-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading1c"), ("TEMPAGER-MIB", "tempreading1f"))
tempager_snmp_trap = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,2)).setLabel("tempager-snmp-trap").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading1c"), ("TEMPAGER-MIB", "tempreading1f"), ("TEMPAGER-MIB", "tempreading2c"), ("TEMPAGER-MIB", "tempreading2f"), ("TEMPAGER-MIB", "tempreading3c"), ("TEMPAGER-MIB", "tempreading3f"), ("TEMPAGER-MIB", "tempreading4c"), ("TEMPAGER-MIB", "tempreading4f"))
alarmstart2_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,3)).setLabel("alarmstart2-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading2c"), ("TEMPAGER-MIB", "tempreading2f"))
alarmclear2_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,4)).setLabel("alarmclear2-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading2c"), ("TEMPAGER-MIB", "tempreading2f"))
alarmstart3_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,5)).setLabel("alarmstart3-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading3c"), ("TEMPAGER-MIB", "tempreading3f"))
alarmclear3_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,6)).setLabel("alarmclear3-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading3c"), ("TEMPAGER-MIB", "tempreading3f"))
alarmstart4_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,7)).setLabel("alarmstart4-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading4c"), ("TEMPAGER-MIB", "tempreading4f"))
alarmclear4_t4 = NotificationType((1, 3, 6, 1, 4, 1, 20916, 1, 1) + (0,8)).setLabel("alarmclear4-t4").setObjects(("TEMPAGER-MIB", "alarmmessage"), ("TEMPAGER-MIB", "tempreading4c"), ("TEMPAGER-MIB", "tempreading4f"))
mibBuilder.exportSymbols("TEMPAGER-MIB", tempreading1f=tempreading1f, products=products, tempreading3f=tempreading3f, thresholds=thresholds, alarmtemp1=alarmtemp1, tempreading4c=tempreading4c, sensors=sensors, avtech=avtech, tempreading2f=tempreading2f, alarmstart3_t4=alarmstart3_t4, traps=traps, tempager_snmp_trap=tempager_snmp_trap, tempreading2c=tempreading2c, tempager=tempager, tempreading4f=tempreading4f, alarmclear3_t4=alarmclear3_t4, alarmclear4_t4=alarmclear4_t4, upperlimit4=upperlimit4, upperlimit1=upperlimit1, alarmstart2_t4=alarmstart2_t4, upperlimit2=upperlimit2, upperlimit3=upperlimit3, alarmclear2_t4=alarmclear2_t4, alarmtemp3=alarmtemp3, temperature=temperature, alarmstart1_t4=alarmstart1_t4, tempreading1c=tempreading1c, lowerlimit2=lowerlimit2, alarmtemp4=alarmtemp4, lowerlimit4=lowerlimit4, alarmmessage=alarmmessage, tempreading3c=tempreading3c, alarmtemp2=alarmtemp2, lowerlimit3=lowerlimit3, alarmstart4_t4=alarmstart4_t4, lowerlimit1=lowerlimit1)
