#
# PySNMP MIB module HPOV-NNM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source https://pysnmp.github.io:443/mibs/asn1/HPOV-NNM-MIB
# Produced by pysmi-1.1.8 at Fri Jul  8 08:20:25 2022
# On host fv-az130-744 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, Integer32, Counter32, enterprises, Bits, IpAddress, ModuleIdentity, Counter64, MibIdentifier, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "Counter32", "enterprises", "Bits", "IpAddress", "ModuleIdentity", "Counter64", "MibIdentifier", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
openView = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 17))
hpOpenView = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 17, 1))
hpOpenView.setRevisions(('2005-09-28 00:00', '1996-07-08 00:00',))
if mibBuilder.loadTexts: hpOpenView.setLastUpdated('200509280000Z')
if mibBuilder.loadTexts: hpOpenView.setOrganization('Hewlett-Packard, Network & System Management Division')
class OVTextString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

openViewTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 17, 2))
openViewSourceId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewSourceId.setStatus('current')
openViewSourceName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 2), OVTextString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewSourceName.setStatus('current')
openViewObjectId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewObjectId.setStatus('current')
openViewData = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 4), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewData.setStatus('current')
openViewSeverity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 5), OVTextString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewSeverity.setStatus('current')
openViewCategory = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 6), OVTextString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewCategory.setStatus('current')
openViewFilter = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewFilter.setStatus('current')
openViewEntity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 8), OVTextString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewEntity.setStatus('current')
openViewAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewAddress.setStatus('current')
openViewPid = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewPid.setStatus('current')
openViewCmipManagedObjectClass = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 11), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewCmipManagedObjectClass.setStatus('current')
openViewCmipEventTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 12), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewCmipEventTime.setStatus('current')
openViewCmipEventType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 13), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewCmipEventType.setStatus('current')
openViewCmipEventInfo = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 14), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewCmipEventInfo.setStatus('current')
openViewCmipManagedObjectInstanceId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 15), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewCmipManagedObjectInstanceId.setStatus('current')
openViewEventUUID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewEventUUID.setStatus('current')
openViewEcsCorrelateEvUUID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 17), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewEcsCorrelateEvUUID.setStatus('current')
openViewEcsNodeImportance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 17, 2, 18), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: openViewEcsNodeImportance.setStatus('current')
hpOVNNMTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 17, 1, 0))
hpOVMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 17, 1, 0, 58916872)).setObjects(("HPOV-NNM-MIB", "openViewSourceId"), ("HPOV-NNM-MIB", "openViewSourceName"), ("HPOV-NNM-MIB", "openViewData"), ("HPOV-NNM-MIB", "openViewSeverity"))
if mibBuilder.loadTexts: hpOVMessageTrap.setStatus('current')
mibBuilder.exportSymbols("HPOV-NNM-MIB", openViewCmipManagedObjectInstanceId=openViewCmipManagedObjectInstanceId, openViewAddress=openViewAddress, openViewEcsNodeImportance=openViewEcsNodeImportance, openViewData=openViewData, hpOVMessageTrap=hpOVMessageTrap, openViewCategory=openViewCategory, openViewSeverity=openViewSeverity, openViewTrapVars=openViewTrapVars, openViewPid=openViewPid, openViewCmipManagedObjectClass=openViewCmipManagedObjectClass, nm=nm, openViewCmipEventType=openViewCmipEventType, openViewFilter=openViewFilter, openViewEventUUID=openViewEventUUID, openViewObjectId=openViewObjectId, openViewSourceId=openViewSourceId, openViewEntity=openViewEntity, openViewCmipEventTime=openViewCmipEventTime, openViewCmipEventInfo=openViewCmipEventInfo, openViewEcsCorrelateEvUUID=openViewEcsCorrelateEvUUID, hpOVNNMTraps=hpOVNNMTraps, PYSNMP_MODULE_ID=hpOpenView, hp=hp, hpOpenView=hpOpenView, openViewSourceName=openViewSourceName, OVTextString=OVTextString, openView=openView)
