#
# PySNMP MIB module BENU-HTTP-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/benuos/BENU-HTTP-SERVER-MIB
# Produced by pysmi-1.1.8 at Tue Jul 26 16:39:06 2022
# On host fv-az119-924 platform Linux version 5.15.0-1014-azure by user runner
# Using Python version 3.10.5 (main, Jul 11 2022, 14:35:34) [GCC 9.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
benuWAG, = mibBuilder.importSymbols("BENU-WAG-MIB", "benuWAG")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, ModuleIdentity, Gauge32, Counter32, Bits, MibIdentifier, iso, Integer32, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "ModuleIdentity", "Gauge32", "Counter32", "Bits", "MibIdentifier", "iso", "Integer32", "Unsigned32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
benuHttpServerMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10))
benuHttpServerMIB.setRevisions(('2015-10-21 00:00',))
if mibBuilder.loadTexts: benuHttpServerMIB.setLastUpdated('201510210000Z')
if mibBuilder.loadTexts: benuHttpServerMIB.setOrganization('Benu Networks,Inc')
bHttpServerObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1))
if mibBuilder.loadTexts: bHttpServerObjects.setStatus('current')
bHttpServerLatencyTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1), )
if mibBuilder.loadTexts: bHttpServerLatencyTable.setStatus('current')
bHttpServerLatencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1), ).setIndexNames((0, "BENU-HTTP-SERVER-MIB", "bHttpServLatencyStatsInterval"))
if mibBuilder.loadTexts: bHttpServerLatencyEntry.setStatus('current')
bHttpServLatencyStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: bHttpServLatencyStatsInterval.setStatus('current')
bHttpServLatencyStatsIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyStatsIntervalDuration.setStatus('current')
bHttpServLatencyTotalPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyTotalPktCount.setStatus('current')
bHttpServLatencyMaxProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyMaxProcessingTime.setStatus('current')
bHttpServLatencyMinProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyMinProcessingTime.setStatus('current')
bHttpServLatencyAvgProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyAvgProcessingTime.setStatus('current')
bHttpServLatencyProcessTimeMorethan1MSPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyProcessTimeMorethan1MSPktCount.setStatus('current')
bHttpServLatencyGetTotalPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyGetTotalPktCount.setStatus('current')
bHttpServLatencyGetMaxProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyGetMaxProcessingTime.setStatus('current')
bHttpServLatencyGetMinProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyGetMinProcessingTime.setStatus('current')
bHttpServLatencyGetAvgProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyGetAvgProcessingTime.setStatus('current')
bHttpServLatencyGetProcessTimeMorethan1MSPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyGetProcessTimeMorethan1MSPktCount.setStatus('current')
bHttpServLatencyPostTotalPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyPostTotalPktCount.setStatus('current')
bHttpServLatencyPostMaxProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyPostMaxProcessingTime.setStatus('current')
bHttpServLatencyPostMinProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyPostMinProcessingTime.setStatus('current')
bHttpServLatencyPostAvgProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyPostAvgProcessingTime.setStatus('current')
bHttpServLatencyPostProcessTimeMorethan1MSPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyPostProcessTimeMorethan1MSPktCount.setStatus('current')
bHttpServLatencyDeleteTotalPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyDeleteTotalPktCount.setStatus('current')
bHttpServLatencyDeleteMaxProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyDeleteMaxProcessingTime.setStatus('current')
bHttpServLatencyDeleteMinProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyDeleteMinProcessingTime.setStatus('current')
bHttpServLatencyDeleteAvgProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyDeleteAvgProcessingTime.setStatus('current')
bHttpServLatencyDeleteProcessTimeMorethan1MSPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 10, 1, 1, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bHttpServLatencyDeleteProcessTimeMorethan1MSPktCount.setStatus('current')
mibBuilder.exportSymbols("BENU-HTTP-SERVER-MIB", bHttpServerLatencyEntry=bHttpServerLatencyEntry, bHttpServerLatencyTable=bHttpServerLatencyTable, bHttpServLatencyGetAvgProcessingTime=bHttpServLatencyGetAvgProcessingTime, bHttpServLatencyDeleteMaxProcessingTime=bHttpServLatencyDeleteMaxProcessingTime, bHttpServLatencyPostProcessTimeMorethan1MSPktCount=bHttpServLatencyPostProcessTimeMorethan1MSPktCount, bHttpServLatencyStatsIntervalDuration=bHttpServLatencyStatsIntervalDuration, bHttpServLatencyGetMaxProcessingTime=bHttpServLatencyGetMaxProcessingTime, bHttpServLatencyGetTotalPktCount=bHttpServLatencyGetTotalPktCount, bHttpServerObjects=bHttpServerObjects, bHttpServLatencyTotalPktCount=bHttpServLatencyTotalPktCount, bHttpServLatencyAvgProcessingTime=bHttpServLatencyAvgProcessingTime, bHttpServLatencyPostAvgProcessingTime=bHttpServLatencyPostAvgProcessingTime, bHttpServLatencyDeleteMinProcessingTime=bHttpServLatencyDeleteMinProcessingTime, bHttpServLatencyDeleteProcessTimeMorethan1MSPktCount=bHttpServLatencyDeleteProcessTimeMorethan1MSPktCount, bHttpServLatencyProcessTimeMorethan1MSPktCount=bHttpServLatencyProcessTimeMorethan1MSPktCount, bHttpServLatencyGetMinProcessingTime=bHttpServLatencyGetMinProcessingTime, bHttpServLatencyMinProcessingTime=bHttpServLatencyMinProcessingTime, bHttpServLatencyPostMaxProcessingTime=bHttpServLatencyPostMaxProcessingTime, bHttpServLatencyDeleteTotalPktCount=bHttpServLatencyDeleteTotalPktCount, bHttpServLatencyStatsInterval=bHttpServLatencyStatsInterval, benuHttpServerMIB=benuHttpServerMIB, PYSNMP_MODULE_ID=benuHttpServerMIB, bHttpServLatencyGetProcessTimeMorethan1MSPktCount=bHttpServLatencyGetProcessTimeMorethan1MSPktCount, bHttpServLatencyPostMinProcessingTime=bHttpServLatencyPostMinProcessingTime, bHttpServLatencyPostTotalPktCount=bHttpServLatencyPostTotalPktCount, bHttpServLatencyMaxProcessingTime=bHttpServLatencyMaxProcessingTime, bHttpServLatencyDeleteAvgProcessingTime=bHttpServLatencyDeleteAvgProcessingTime)
