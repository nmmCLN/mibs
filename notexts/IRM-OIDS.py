#
# PySNMP MIB module IRM-OIDS (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/IRM-OIDS
# Produced by pysmi-1.1.8 at Mon Jan 16 15:04:28 2023
# On host fv-az587-63 platform Linux version 5.15.0-1030-azure by user runner
# Using Python version 3.10.9 (main, Dec  7 2022, 08:16:13) [GCC 11.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
cabletron, = mibBuilder.importSymbols("CTRON-OIDS", "cabletron")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, ObjectIdentity, Integer32, Counter64, iso, Gauge32, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "ObjectIdentity", "Integer32", "Counter64", "iso", "Gauge32", "IpAddress", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
commsDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1))
layerMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 2))
common = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1))
repeater = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 2))
bridge = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 3))
router = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 4))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 5))
subsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6))
commonRev1 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 1))
sysOIDs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2))
repeaterRev1 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 2, 1))
repeaterRev2 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 2, 2))
subSysMMAC = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 1))
subSysDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 2))
ups = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 3))
dl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 4))
backplaneProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 5))
nb30Rev1 = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 6, 12))
sysOtherType = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2, 1))
sysChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2, 2))
sysRepeaters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2, 3))
sysBridges = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2, 4))
sysRouters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2, 5))
sysIntDev = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 1, 1, 2, 6))
mibBuilder.exportSymbols("IRM-OIDS", commsDevice=commsDevice, repeaterRev2=repeaterRev2, repeaterRev1=repeaterRev1, sysRepeaters=sysRepeaters, dl=dl, router=router, bridge=bridge, ups=ups, repeater=repeater, commonRev1=commonRev1, sysIntDev=sysIntDev, sysOtherType=sysOtherType, subsystem=subsystem, subSysMMAC=subSysMMAC, nb30Rev1=nb30Rev1, subSysDevice=subSysDevice, sysOIDs=sysOIDs, common=common, layerMgmt=layerMgmt, backplaneProtocol=backplaneProtocol, sysBridges=sysBridges, sysChassis=sysChassis, product=product, sysRouters=sysRouters)
