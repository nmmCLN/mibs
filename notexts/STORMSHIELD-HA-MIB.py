#
# PySNMP MIB module STORMSHIELD-HA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/stormshield/STORMSHIELD-HA-MIB
# Produced by pysmi-1.1.12 at Thu Apr  4 13:55:19 2024
# On host fv-az1490-927 platform Linux version 6.5.0-1016-azure by user runner
# Using Python version 3.10.14 (main, Mar 20 2024, 15:15:25) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Unsigned32, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, NotificationType, MibIdentifier, ObjectIdentity, Gauge32, iso, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "NotificationType", "MibIdentifier", "ObjectIdentity", "Gauge32", "iso", "Integer32", "TimeTicks")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
stormshieldMIB, = mibBuilder.importSymbols("STORMSHIELD-SMI-MIB", "stormshieldMIB")
snsHA = ModuleIdentity((1, 3, 6, 1, 4, 1, 11256, 1, 11))
snsHA.setRevisions(('2017-02-20 00:00',))
if mibBuilder.loadTexts: snsHA.setLastUpdated('201702200000Z')
if mibBuilder.loadTexts: snsHA.setOrganization('Stormshield')
snsNbNode = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNbNode.setStatus('current')
snsNbDeadNode = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNbDeadNode.setStatus('current')
snsNbActiveNode = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNbActiveNode.setStatus('current')
snsNbHALinks = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNbHALinks.setStatus('current')
snsNbFaultyHALinks = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNbFaultyHALinks.setStatus('current')
snsNodeTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7), )
if mibBuilder.loadTexts: snsNodeTable.setStatus('current')
snsNode = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1), ).setIndexNames((0, "STORMSHIELD-HA-MIB", "snsNodeIndex"))
if mibBuilder.loadTexts: snsNode.setStatus('current')
snsNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: snsNodeIndex.setStatus('current')
snsFwSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsFwSerial.setStatus('current')
snsOnline = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsOnline.setStatus('current')
snsModel = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsModel.setStatus('current')
snsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsVersion.setStatus('current')
snsHALicence = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHALicence.setStatus('current')
snsHAQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHAQuality.setStatus('current')
snsHAPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHAPriority.setStatus('current')
snsHAStatusForced = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHAStatusForced.setStatus('current')
snsHAActive = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHAActive.setStatus('current')
snsUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsUptime.setStatus('current')
snsHASyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHASyncStatus.setStatus('current')
snsHAFwAdminRevison = MibScalar((1, 3, 6, 1, 4, 1, 11256, 1, 11, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsHAFwAdminRevison.setStatus('current')
snsNodePowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 11, 10), )
if mibBuilder.loadTexts: snsNodePowerSupplyTable.setStatus('current')
snsNodePowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 11, 10, 1), ).setIndexNames((0, "STORMSHIELD-HA-MIB", "snsNodeIndex"), (0, "STORMSHIELD-HA-MIB", "snsNodePowerSupplyIndex"))
if mibBuilder.loadTexts: snsNodePowerSupplyEntry.setStatus('current')
snsNodePowerSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: snsNodePowerSupplyIndex.setStatus('current')
snsNodePowerSupplyPowered = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 10, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodePowerSupplyPowered.setStatus('current')
snsNodeDiskTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11), )
if mibBuilder.loadTexts: snsNodeDiskTable.setStatus('current')
snsNodeDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1), ).setIndexNames((0, "STORMSHIELD-HA-MIB", "snsNodeIndex"), (0, "STORMSHIELD-HA-MIB", "snsNodeDiskIndex"))
if mibBuilder.loadTexts: snsNodeDiskEntry.setStatus('current')
snsNodeDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: snsNodeDiskIndex.setStatus('current')
snsNodeDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodeDiskName.setStatus('current')
snsNodeDiskSmartResult = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodeDiskSmartResult.setStatus('current')
snsNodeDiskIsRaid = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodeDiskIsRaid.setStatus('current')
snsNodeDiskRaidStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodeDiskRaidStatus.setStatus('current')
snsNodeDiskPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodeDiskPosition.setStatus('current')
snsNodeCpuTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 11, 12), )
if mibBuilder.loadTexts: snsNodeCpuTable.setStatus('current')
snsNodeCpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 11, 12, 1), ).setIndexNames((0, "STORMSHIELD-HA-MIB", "snsNodeIndex"), (0, "STORMSHIELD-HA-MIB", "snsNodeCpuIndex"))
if mibBuilder.loadTexts: snsNodeCpuEntry.setStatus('current')
snsNodeCpuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: snsNodeCpuIndex.setStatus('current')
snsNodeCpuTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 11, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsNodeCpuTemp.setStatus('current')
mibBuilder.exportSymbols("STORMSHIELD-HA-MIB", snsNodeIndex=snsNodeIndex, snsHA=snsHA, snsHAFwAdminRevison=snsHAFwAdminRevison, snsHAActive=snsHAActive, snsHAPriority=snsHAPriority, snsOnline=snsOnline, PYSNMP_MODULE_ID=snsHA, snsVersion=snsVersion, snsNodePowerSupplyTable=snsNodePowerSupplyTable, snsHAQuality=snsHAQuality, snsFwSerial=snsFwSerial, snsNodePowerSupplyPowered=snsNodePowerSupplyPowered, snsNodeDiskEntry=snsNodeDiskEntry, snsNodeDiskSmartResult=snsNodeDiskSmartResult, snsHAStatusForced=snsHAStatusForced, snsNbActiveNode=snsNbActiveNode, snsUptime=snsUptime, snsNodeDiskRaidStatus=snsNodeDiskRaidStatus, snsHASyncStatus=snsHASyncStatus, snsNodeCpuEntry=snsNodeCpuEntry, snsNodeDiskPosition=snsNodeDiskPosition, snsNbDeadNode=snsNbDeadNode, snsNodeCpuTemp=snsNodeCpuTemp, snsModel=snsModel, snsHALicence=snsHALicence, snsNodeDiskIsRaid=snsNodeDiskIsRaid, snsNodeCpuTable=snsNodeCpuTable, snsNodeTable=snsNodeTable, snsNodeCpuIndex=snsNodeCpuIndex, snsNbNode=snsNbNode, snsNodeDiskIndex=snsNodeDiskIndex, snsNodeDiskName=snsNodeDiskName, snsNodeDiskTable=snsNodeDiskTable, snsNodePowerSupplyEntry=snsNodePowerSupplyEntry, snsNode=snsNode, snsNbFaultyHALinks=snsNbFaultyHALinks, snsNodePowerSupplyIndex=snsNodePowerSupplyIndex, snsNbHALinks=snsNbHALinks)
