#
# PySNMP MIB module IPS-AUTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/equallogic/IPS-AUTH-MIB
# Produced by pysmi-1.1.8 at Wed Jun 29 13:07:54 2022
# On host fv-az90-294 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Counter64, NotificationType, Bits, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, experimental, Counter32, ObjectIdentity, ModuleIdentity, Integer32, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "NotificationType", "Bits", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "experimental", "Counter32", "ObjectIdentity", "ModuleIdentity", "Integer32", "Unsigned32", "iso")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ipsAuthModule = ModuleIdentity((1, 3, 6, 1, 3, 99999))
ipsAuthModule.setRevisions(('2002-06-26 00:00',))
if mibBuilder.loadTexts: ipsAuthModule.setLastUpdated('200206260000Z')
if mibBuilder.loadTexts: ipsAuthModule.setOrganization('IETF IPS Working Group')
ipsAuthObjects = MibIdentifier((1, 3, 6, 1, 3, 99999, 1))
ipsAuthNotifications = MibIdentifier((1, 3, 6, 1, 3, 99999, 2))
ipsAuthConformance = MibIdentifier((1, 3, 6, 1, 3, 99999, 3))
class IpsAuthAddress(TextualConvention, OctetString):
    reference = 'IANA-ADDRESS-FAMILY-NUMBERS-MIB; INET-ADDRESS-MIB (RFC 2851); Fibre Channel Management MIB (presently defined in draft-ietf-ips-fcmgmt-mib-01.txt).'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

ipsAuthDescriptors = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 1))
ipsAuthMethodTypes = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 1, 1))
ipsAuthMethodNone = ObjectIdentity((1, 3, 6, 1, 3, 99999, 1, 1, 1, 1))
if mibBuilder.loadTexts: ipsAuthMethodNone.setStatus('current')
ipsAuthMethodSrp = ObjectIdentity((1, 3, 6, 1, 3, 99999, 1, 1, 1, 2))
if mibBuilder.loadTexts: ipsAuthMethodSrp.setStatus('current')
ipsAuthMethodChap = ObjectIdentity((1, 3, 6, 1, 3, 99999, 1, 1, 1, 3))
if mibBuilder.loadTexts: ipsAuthMethodChap.setStatus('current')
ipsAuthInstance = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 2))
ipsAuthInstanceAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 2, 2), )
if mibBuilder.loadTexts: ipsAuthInstanceAttributesTable.setStatus('current')
ipsAuthInstanceAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 2, 2, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"))
if mibBuilder.loadTexts: ipsAuthInstanceAttributesEntry.setStatus('current')
ipsAuthInstIndex = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ipsAuthInstIndex.setStatus('current')
ipsAuthInstDescr = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipsAuthInstDescr.setStatus('current')
ipsAuthIdentity = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 3))
ipsAuthIdentAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 3, 1), )
if mibBuilder.loadTexts: ipsAuthIdentAttributesTable.setStatus('current')
ipsAuthIdentAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 3, 1, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentIndex"))
if mibBuilder.loadTexts: ipsAuthIdentAttributesEntry.setStatus('current')
ipsAuthIdentIndex = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ipsAuthIdentIndex.setStatus('current')
ipsAuthIdentDescription = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentDescription.setStatus('current')
ipsAuthIdentRowStatus = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentRowStatus.setStatus('current')
ipsAuthIdentityName = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 4))
ipsAuthIdentNameAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 4, 1), )
if mibBuilder.loadTexts: ipsAuthIdentNameAttributesTable.setStatus('current')
ipsAuthIdentNameAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 4, 1, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentNameIndex"))
if mibBuilder.loadTexts: ipsAuthIdentNameAttributesEntry.setStatus('current')
ipsAuthIdentNameIndex = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ipsAuthIdentNameIndex.setStatus('current')
ipsAuthIdentName = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentName.setStatus('current')
ipsAuthIdentNameRowStatus = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 4, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentNameRowStatus.setStatus('current')
ipsAuthIdentityAddress = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 5))
ipsAuthIdentAddrAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 5, 1), )
if mibBuilder.loadTexts: ipsAuthIdentAddrAttributesTable.setStatus('current')
ipsAuthIdentAddrAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 5, 1, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentAddrIndex"))
if mibBuilder.loadTexts: ipsAuthIdentAddrAttributesEntry.setStatus('current')
ipsAuthIdentAddrIndex = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ipsAuthIdentAddrIndex.setStatus('current')
ipsAuthIdentAddrType = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 5, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentAddrType.setStatus('current')
ipsAuthIdentAddrStart = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 5, 1, 1, 3), IpsAuthAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentAddrStart.setStatus('current')
ipsAuthIdentAddrEnd = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 5, 1, 1, 4), IpsAuthAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentAddrEnd.setStatus('current')
ipsAuthIdentAddrRowStatus = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthIdentAddrRowStatus.setStatus('current')
ipsAuthCredential = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 6))
ipsAuthCredentialAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 6, 1), )
if mibBuilder.loadTexts: ipsAuthCredentialAttributesTable.setStatus('current')
ipsAuthCredentialAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 6, 1, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentIndex"), (0, "IPS-AUTH-MIB", "ipsAuthCredIndex"))
if mibBuilder.loadTexts: ipsAuthCredentialAttributesEntry.setStatus('current')
ipsAuthCredIndex = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 6, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ipsAuthCredIndex.setStatus('current')
ipsAuthCredAuthMethod = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 6, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredAuthMethod.setStatus('current')
ipsAuthCredRowStatus = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredRowStatus.setStatus('current')
ipsAuthCredChap = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 7))
ipsAuthCredChapAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 7, 1), )
if mibBuilder.loadTexts: ipsAuthCredChapAttributesTable.setStatus('current')
ipsAuthCredChapAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 7, 1, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentIndex"), (0, "IPS-AUTH-MIB", "ipsAuthCredIndex"))
if mibBuilder.loadTexts: ipsAuthCredChapAttributesEntry.setStatus('current')
ipsAuthCredChapUserName = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 7, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredChapUserName.setStatus('current')
ipsAuthCredChapPassword = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredChapPassword.setStatus('current')
ipsAuthCredChapRowStatus = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 7, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredChapRowStatus.setStatus('current')
ipsAuthCredSrp = MibIdentifier((1, 3, 6, 1, 3, 99999, 1, 8))
ipsAuthCredSrpAttributesTable = MibTable((1, 3, 6, 1, 3, 99999, 1, 8, 1), )
if mibBuilder.loadTexts: ipsAuthCredSrpAttributesTable.setStatus('current')
ipsAuthCredSrpAttributesEntry = MibTableRow((1, 3, 6, 1, 3, 99999, 1, 8, 1, 1), ).setIndexNames((0, "IPS-AUTH-MIB", "ipsAuthInstIndex"), (0, "IPS-AUTH-MIB", "ipsAuthIdentIndex"), (0, "IPS-AUTH-MIB", "ipsAuthCredIndex"))
if mibBuilder.loadTexts: ipsAuthCredSrpAttributesEntry.setStatus('current')
ipsAuthCredSrpUserName = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 8, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredSrpUserName.setStatus('current')
ipsAuthCredSrpPassword = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 8, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredSrpPassword.setStatus('current')
ipsAuthCredSrpRowStatus = MibTableColumn((1, 3, 6, 1, 3, 99999, 1, 8, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipsAuthCredSrpRowStatus.setStatus('current')
ipsAuthGroups = MibIdentifier((1, 3, 6, 1, 3, 99999, 3, 1))
ipsAuthInstanceAttributesGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 1)).setObjects(("IPS-AUTH-MIB", "ipsAuthInstDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthInstanceAttributesGroup = ipsAuthInstanceAttributesGroup.setStatus('current')
ipsAuthIdentAttributesGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 2)).setObjects(("IPS-AUTH-MIB", "ipsAuthIdentDescription"), ("IPS-AUTH-MIB", "ipsAuthIdentRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthIdentAttributesGroup = ipsAuthIdentAttributesGroup.setStatus('current')
ipsAuthIdentNameAttributesGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 3)).setObjects(("IPS-AUTH-MIB", "ipsAuthIdentName"), ("IPS-AUTH-MIB", "ipsAuthIdentNameRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthIdentNameAttributesGroup = ipsAuthIdentNameAttributesGroup.setStatus('current')
ipsAuthIdentAddrAttributesGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 4)).setObjects(("IPS-AUTH-MIB", "ipsAuthIdentAddrType"), ("IPS-AUTH-MIB", "ipsAuthIdentAddrStart"), ("IPS-AUTH-MIB", "ipsAuthIdentAddrEnd"), ("IPS-AUTH-MIB", "ipsAuthIdentAddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthIdentAddrAttributesGroup = ipsAuthIdentAddrAttributesGroup.setStatus('current')
ipsAuthIdentCredAttributesGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 5)).setObjects(("IPS-AUTH-MIB", "ipsAuthCredAuthMethod"), ("IPS-AUTH-MIB", "ipsAuthCredRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthIdentCredAttributesGroup = ipsAuthIdentCredAttributesGroup.setStatus('current')
ipsAuthIdentChapAttrGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 6)).setObjects(("IPS-AUTH-MIB", "ipsAuthCredChapUserName"), ("IPS-AUTH-MIB", "ipsAuthCredChapPassword"), ("IPS-AUTH-MIB", "ipsAuthCredChapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthIdentChapAttrGroup = ipsAuthIdentChapAttrGroup.setStatus('current')
ipsAuthIdentSrpAttrGroup = ObjectGroup((1, 3, 6, 1, 3, 99999, 3, 1, 7)).setObjects(("IPS-AUTH-MIB", "ipsAuthCredSrpUserName"), ("IPS-AUTH-MIB", "ipsAuthCredSrpPassword"), ("IPS-AUTH-MIB", "ipsAuthCredSrpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthIdentSrpAttrGroup = ipsAuthIdentSrpAttrGroup.setStatus('current')
ipsAuthCompliances = MibIdentifier((1, 3, 6, 1, 3, 99999, 3, 2))
ipsAuthComplianceV1 = ModuleCompliance((1, 3, 6, 1, 3, 99999, 3, 2, 1)).setObjects(("IPS-AUTH-MIB", "ipsAuthInstanceAttributesGroup"), ("IPS-AUTH-MIB", "ipsAuthIdentAttributesGroup"), ("IPS-AUTH-MIB", "ipsAuthIdentNameAttributesGroup"), ("IPS-AUTH-MIB", "ipsAuthIdentAddrAttributesGroup"), ("IPS-AUTH-MIB", "ipsAuthIdentCredAttributesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipsAuthComplianceV1 = ipsAuthComplianceV1.setStatus('current')
mibBuilder.exportSymbols("IPS-AUTH-MIB", ipsAuthMethodSrp=ipsAuthMethodSrp, ipsAuthCredSrpRowStatus=ipsAuthCredSrpRowStatus, ipsAuthIdentityName=ipsAuthIdentityName, ipsAuthCredentialAttributesEntry=ipsAuthCredentialAttributesEntry, ipsAuthCredChapRowStatus=ipsAuthCredChapRowStatus, ipsAuthComplianceV1=ipsAuthComplianceV1, ipsAuthCredSrpAttributesTable=ipsAuthCredSrpAttributesTable, ipsAuthCredChapAttributesTable=ipsAuthCredChapAttributesTable, ipsAuthIdentRowStatus=ipsAuthIdentRowStatus, ipsAuthMethodTypes=ipsAuthMethodTypes, ipsAuthConformance=ipsAuthConformance, ipsAuthModule=ipsAuthModule, ipsAuthIdentityAddress=ipsAuthIdentityAddress, ipsAuthInstance=ipsAuthInstance, ipsAuthIdentAttributesTable=ipsAuthIdentAttributesTable, ipsAuthCredSrpPassword=ipsAuthCredSrpPassword, ipsAuthIdentAddrType=ipsAuthIdentAddrType, ipsAuthMethodChap=ipsAuthMethodChap, ipsAuthIdentity=ipsAuthIdentity, ipsAuthCredSrpUserName=ipsAuthCredSrpUserName, ipsAuthInstDescr=ipsAuthInstDescr, ipsAuthIdentAttributesEntry=ipsAuthIdentAttributesEntry, ipsAuthIdentAddrAttributesEntry=ipsAuthIdentAddrAttributesEntry, ipsAuthIdentAttributesGroup=ipsAuthIdentAttributesGroup, ipsAuthCredRowStatus=ipsAuthCredRowStatus, ipsAuthCredentialAttributesTable=ipsAuthCredentialAttributesTable, ipsAuthCredSrp=ipsAuthCredSrp, ipsAuthIdentChapAttrGroup=ipsAuthIdentChapAttrGroup, ipsAuthMethodNone=ipsAuthMethodNone, ipsAuthIdentDescription=ipsAuthIdentDescription, ipsAuthCredSrpAttributesEntry=ipsAuthCredSrpAttributesEntry, ipsAuthIdentAddrRowStatus=ipsAuthIdentAddrRowStatus, ipsAuthIdentSrpAttrGroup=ipsAuthIdentSrpAttrGroup, ipsAuthObjects=ipsAuthObjects, ipsAuthIdentName=ipsAuthIdentName, ipsAuthCompliances=ipsAuthCompliances, ipsAuthIdentAddrIndex=ipsAuthIdentAddrIndex, ipsAuthGroups=ipsAuthGroups, ipsAuthCredChap=ipsAuthCredChap, ipsAuthInstanceAttributesTable=ipsAuthInstanceAttributesTable, ipsAuthIdentNameRowStatus=ipsAuthIdentNameRowStatus, ipsAuthIdentNameAttributesTable=ipsAuthIdentNameAttributesTable, ipsAuthCredIndex=ipsAuthCredIndex, ipsAuthInstIndex=ipsAuthInstIndex, ipsAuthInstanceAttributesGroup=ipsAuthInstanceAttributesGroup, ipsAuthIdentAddrAttributesGroup=ipsAuthIdentAddrAttributesGroup, ipsAuthIdentNameIndex=ipsAuthIdentNameIndex, ipsAuthCredAuthMethod=ipsAuthCredAuthMethod, ipsAuthIdentNameAttributesGroup=ipsAuthIdentNameAttributesGroup, ipsAuthIdentAddrAttributesTable=ipsAuthIdentAddrAttributesTable, ipsAuthIdentCredAttributesGroup=ipsAuthIdentCredAttributesGroup, IpsAuthAddress=IpsAuthAddress, ipsAuthNotifications=ipsAuthNotifications, ipsAuthIdentAddrStart=ipsAuthIdentAddrStart, ipsAuthInstanceAttributesEntry=ipsAuthInstanceAttributesEntry, ipsAuthCredChapUserName=ipsAuthCredChapUserName, ipsAuthCredChapPassword=ipsAuthCredChapPassword, ipsAuthDescriptors=ipsAuthDescriptors, ipsAuthIdentIndex=ipsAuthIdentIndex, ipsAuthCredChapAttributesEntry=ipsAuthCredChapAttributesEntry, PYSNMP_MODULE_ID=ipsAuthModule, ipsAuthCredential=ipsAuthCredential, ipsAuthIdentNameAttributesEntry=ipsAuthIdentNameAttributesEntry, ipsAuthIdentAddrEnd=ipsAuthIdentAddrEnd)
