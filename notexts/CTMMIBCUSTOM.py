#
# PySNMP MIB module CTMMIBCUSTOM (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ctm/CTMMIBCUSTOM
# Produced by pysmi-1.1.10 at Fri Oct 27 06:59:36 2023
# On host fv-az550-936 platform Linux version 6.2.0-1015-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Gauge32, NotificationType, Unsigned32, IpAddress, NotificationType, Counter64, Integer32, ModuleIdentity, MibIdentifier, enterprises, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "NotificationType", "Unsigned32", "IpAddress", "NotificationType", "Counter64", "Integer32", "ModuleIdentity", "MibIdentifier", "enterprises", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lastmilegear = MibIdentifier((1, 3, 6, 1, 4, 1, 25868))
mibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25868, 1))
version = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('mandatory')
site = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: site.setStatus('mandatory')
lastIP = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastIP.setStatus('mandatory')
lastTime = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lastTime.setStatus('mandatory')
nSats = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nSats.setStatus('mandatory')
pwrP = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwrP.setStatus('mandatory')
pwrS = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwrS.setStatus('mandatory')
cbTrip = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbTrip.setStatus('mandatory')
tempC = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempC.setStatus('mandatory')
voltsM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltsM1.setStatus('mandatory')
voltsM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltsM2.setStatus('mandatory')
portOnM = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOnM.setStatus('mandatory')
portSyncM = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSyncM.setStatus('mandatory')
portPwrM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM1.setStatus('mandatory')
portPwrM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM2.setStatus('mandatory')
portPwrM3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM3.setStatus('mandatory')
portPwrM4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM4.setStatus('mandatory')
portPwrM5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM5.setStatus('mandatory')
portPwrM6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM6.setStatus('mandatory')
portPwrM7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM7.setStatus('mandatory')
portPwrM8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrM8.setStatus('mandatory')
pwrSP = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwrSP.setStatus('mandatory')
pwrSS = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pwrSS.setStatus('mandatory')
voltsS1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltsS1.setStatus('mandatory')
voltsS2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltsS2.setStatus('mandatory')
portOnS = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 29), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portOnS.setStatus('mandatory')
portSyncS = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSyncS.setStatus('mandatory')
portPwrS1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS1.setStatus('mandatory')
portPwrS2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS2.setStatus('mandatory')
portPwrS3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS3.setStatus('mandatory')
portPwrS4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS4.setStatus('mandatory')
portPwrS5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS5.setStatus('mandatory')
portPwrS6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS6.setStatus('mandatory')
portPwrS7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS7.setStatus('mandatory')
portPwrS8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portPwrS8.setStatus('mandatory')
modeReqM = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modeReqM.setStatus('mandatory')
trpCntGM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM1.setStatus('mandatory')
trpCntGM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM2.setStatus('mandatory')
trpCntGM3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM3.setStatus('mandatory')
trpCntGM4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM4.setStatus('mandatory')
trpCntGM5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM5.setStatus('mandatory')
trpCntGM6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM6.setStatus('mandatory')
trpCntGM7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM7.setStatus('mandatory')
trpCntGM8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntGM8.setStatus('mandatory')
trpCntBM1 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM1.setStatus('mandatory')
trpCntBM2 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM2.setStatus('mandatory')
trpCntBM3 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM3.setStatus('mandatory')
trpCntBM4 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM4.setStatus('mandatory')
trpCntBM5 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM5.setStatus('mandatory')
trpCntBM6 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM6.setStatus('mandatory')
trpCntBM7 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM7.setStatus('mandatory')
trpCntBM8 = MibScalar((1, 3, 6, 1, 4, 1, 25868, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpCntBM8.setStatus('mandatory')
lostEthernetConnection = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,0))
masterPrimayPowerLost = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,1))
masterSecondaryPowerLost = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,2))
gpsSignalLost = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,3))
masterTempatureError = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,4))
masterCircuitBreakerTripCode = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,5))
loginFailedAttempt = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,6))
settingsChanged = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,7))
masterPrimaryPowerOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,10))
masterSecondaryPowerOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,20))
gpsSignalOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,30))
tempatureOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,40))
circuitBreakersOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,50))
masterAutoRestartCBCompletedOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,52))
loginOK = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,60))
resetComplete = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,80))
ethernetConnectionRestored = NotificationType((1, 3, 6, 1, 4, 1, 25868, 1) + (0,99))
mibBuilder.exportSymbols("CTMMIBCUSTOM", portPwrS8=portPwrS8, portSyncM=portSyncM, tempatureOK=tempatureOK, lastTime=lastTime, masterSecondaryPowerLost=masterSecondaryPowerLost, masterCircuitBreakerTripCode=masterCircuitBreakerTripCode, portPwrM3=portPwrM3, masterPrimayPowerLost=masterPrimayPowerLost, voltsS1=voltsS1, lastIP=lastIP, portPwrM8=portPwrM8, trpCntGM4=trpCntGM4, masterAutoRestartCBCompletedOK=masterAutoRestartCBCompletedOK, portPwrM6=portPwrM6, nSats=nSats, portSyncS=portSyncS, trpCntBM5=trpCntBM5, site=site, mibObjects=mibObjects, version=version, voltsS2=voltsS2, lostEthernetConnection=lostEthernetConnection, pwrS=pwrS, settingsChanged=settingsChanged, gpsSignalLost=gpsSignalLost, trpCntGM7=trpCntGM7, ethernetConnectionRestored=ethernetConnectionRestored, tempC=tempC, trpCntBM4=trpCntBM4, loginFailedAttempt=loginFailedAttempt, portPwrM4=portPwrM4, portPwrS3=portPwrS3, portPwrS5=portPwrS5, lastmilegear=lastmilegear, portPwrS7=portPwrS7, trpCntGM2=trpCntGM2, trpCntGM6=trpCntGM6, trpCntGM8=trpCntGM8, masterTempatureError=masterTempatureError, cbTrip=cbTrip, modeReqM=modeReqM, portPwrS2=portPwrS2, portOnS=portOnS, masterPrimaryPowerOK=masterPrimaryPowerOK, circuitBreakersOK=circuitBreakersOK, portPwrM5=portPwrM5, portPwrM1=portPwrM1, portPwrS1=portPwrS1, portOnM=portOnM, gpsSignalOK=gpsSignalOK, masterSecondaryPowerOK=masterSecondaryPowerOK, portPwrS6=portPwrS6, portPwrM2=portPwrM2, pwrP=pwrP, trpCntBM3=trpCntBM3, loginOK=loginOK, trpCntGM1=trpCntGM1, pwrSP=pwrSP, pwrSS=pwrSS, trpCntBM2=trpCntBM2, trpCntGM5=trpCntGM5, resetComplete=resetComplete, trpCntBM8=trpCntBM8, trpCntBM1=trpCntBM1, trpCntBM6=trpCntBM6, trpCntBM7=trpCntBM7, voltsM1=voltsM1, voltsM2=voltsM2, trpCntGM3=trpCntGM3, portPwrM7=portPwrM7, portPwrS4=portPwrS4)
