#
# PySNMP MIB module MDS-SERIAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/gemds/MDS-SERIAL-MIB
# Produced by pysmi-1.1.8 at Fri Dec  2 15:53:29 2022
# On host fv-az267-189 platform Linux version 5.15.0-1023-azure by user runner
# Using Python version 3.10.8 (main, Oct 18 2022, 06:44:51) [GCC 11.2.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
mdsServices, = mibBuilder.importSymbols("MDS-ORBIT-SMI-MIB", "mdsServices")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Unsigned32, Counter32, Integer32, ObjectIdentity, NotificationType, IpAddress, Gauge32, TimeTicks, MibIdentifier, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Counter32", "Integer32", "ObjectIdentity", "NotificationType", "IpAddress", "Gauge32", "TimeTicks", "MibIdentifier", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
mdsSerialMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2))
mdsSerialMIB.setRevisions(('2018-05-16 00:00', '2014-05-12 00:00',))
if mibBuilder.loadTexts: mdsSerialMIB.setLastUpdated('201805160000Z')
if mibBuilder.loadTexts: mdsSerialMIB.setOrganization('GE MDS LLC http://www.gemds.com')
mSerMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1))
mSerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 1))
mSerStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2))
mSerTermServerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1), )
if mibBuilder.loadTexts: mSerTermServerStatusTable.setStatus('current')
mSerTermServerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1), ).setIndexNames((0, "MDS-SERIAL-MIB", "mSerTermServerSerialPort"))
if mibBuilder.loadTexts: mSerTermServerStatusEntry.setStatus('current')
mSerTermServerSerialPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerSerialPort.setStatus('current')
mSerTermServerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerDescription.setStatus('current')
mSerTermServerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerEnabled.setStatus('current')
mSerTermServerIpTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerIpTxPackets.setStatus('current')
mSerTermServerIpTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerIpTxBytes.setStatus('current')
mSerTermServerIpRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerIpRxPackets.setStatus('current')
mSerTermServerIpRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerIpRxBytes.setStatus('current')
mSerTermServerSerialTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerSerialTxPackets.setStatus('current')
mSerTermServerSerialTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerSerialTxBytes.setStatus('current')
mSerTermServerSerialRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerSerialRxPackets.setStatus('current')
mSerTermServerSerialRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 1, 2, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mSerTermServerSerialRxBytes.setStatus('current')
mdsSerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 3))
mdsSerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 3, 1))
mdsSerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 3, 2))
mSerCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 3, 1, 1)).setObjects(("MDS-SERIAL-MIB", "mSerStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mSerCompliance = mSerCompliance.setStatus('current')
mSerStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4130, 10, 3, 2, 3, 2, 1)).setObjects(("MDS-SERIAL-MIB", "mSerTermServerSerialPort"), ("MDS-SERIAL-MIB", "mSerTermServerDescription"), ("MDS-SERIAL-MIB", "mSerTermServerEnabled"), ("MDS-SERIAL-MIB", "mSerTermServerIpTxPackets"), ("MDS-SERIAL-MIB", "mSerTermServerIpTxBytes"), ("MDS-SERIAL-MIB", "mSerTermServerIpRxPackets"), ("MDS-SERIAL-MIB", "mSerTermServerIpRxBytes"), ("MDS-SERIAL-MIB", "mSerTermServerSerialTxPackets"), ("MDS-SERIAL-MIB", "mSerTermServerSerialTxBytes"), ("MDS-SERIAL-MIB", "mSerTermServerSerialRxPackets"), ("MDS-SERIAL-MIB", "mSerTermServerSerialRxBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mSerStatusGroup = mSerStatusGroup.setStatus('current')
mibBuilder.exportSymbols("MDS-SERIAL-MIB", mSerMIBObjects=mSerMIBObjects, mSerConfig=mSerConfig, mSerTermServerIpRxPackets=mSerTermServerIpRxPackets, mSerTermServerDescription=mSerTermServerDescription, mSerTermServerSerialPort=mSerTermServerSerialPort, mdsSerialMIB=mdsSerialMIB, mSerTermServerEnabled=mSerTermServerEnabled, mdsSerMIBGroups=mdsSerMIBGroups, PYSNMP_MODULE_ID=mdsSerialMIB, mSerTermServerSerialRxBytes=mSerTermServerSerialRxBytes, mdsSerMIBCompliances=mdsSerMIBCompliances, mSerTermServerIpTxBytes=mSerTermServerIpTxBytes, mSerCompliance=mSerCompliance, mdsSerMIBConformance=mdsSerMIBConformance, mSerTermServerIpRxBytes=mSerTermServerIpRxBytes, mSerTermServerSerialTxPackets=mSerTermServerSerialTxPackets, mSerTermServerStatusEntry=mSerTermServerStatusEntry, mSerTermServerSerialTxBytes=mSerTermServerSerialTxBytes, mSerTermServerStatusTable=mSerTermServerStatusTable, mSerTermServerIpTxPackets=mSerTermServerIpTxPackets, mSerStatusGroup=mSerStatusGroup, mSerTermServerSerialRxPackets=mSerTermServerSerialRxPackets, mSerStatus=mSerStatus)
