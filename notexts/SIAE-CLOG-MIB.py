#
# PySNMP MIB module SIAE-CLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/siae/SIAE-CLOG-MIB
# Produced by pysmi-1.1.8 at Mon Jan  9 10:23:18 2023
# On host fv-az412-551 platform Linux version 5.15.0-1024-azure by user runner
# Using Python version 3.10.9 (main, Dec  7 2022, 08:16:13) [GCC 11.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
alarmTrap, = mibBuilder.importSymbols("SIAE-ALARM-MIB", "alarmTrap")
equipIpSnmpAgentAddress, = mibBuilder.importSymbols("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress")
siaeMib, = mibBuilder.importSymbols("SIAE-TREE-MIB", "siaeMib")
accessControlLoginIpAddress, = mibBuilder.importSymbols("SIAE-USER-MIB", "accessControlLoginIpAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Unsigned32, NotificationType, Bits, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, IpAddress, MibIdentifier, Integer32, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "NotificationType", "Bits", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "IpAddress", "MibIdentifier", "Integer32", "Gauge32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
commandLog = ModuleIdentity((1, 3, 6, 1, 4, 1, 3373, 1103, 40))
commandLog.setRevisions(('2015-03-23 00:00', '2014-06-23 00:00', '2014-02-03 00:00', '2013-12-18 00:00',))
if mibBuilder.loadTexts: commandLog.setLastUpdated('201503230000Z')
if mibBuilder.loadTexts: commandLog.setOrganization('SIAE MICROELETTRONICA spa')
commandLogMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogMibVersion.setStatus('current')
commandLogActionRequest = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notActive", 0), ("delete", 1), ("read", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogActionRequest.setStatus('current')
commandLogFtpFile = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogFtpFile.setStatus('current')
commandLogMgmtInterfaceFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 4), Bits().clone(namedValues=NamedValues(("cli", 0), ("web", 1), ("snmp", 2), ("remoteCli", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogMgmtInterfaceFilter.setStatus('current')
commandLogStartTimeFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogStartTimeFilter.setStatus('current')
commandLogEndTimeFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogEndTimeFilter.setStatus('current')
commandLogUserNameFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogUserNameFilter.setStatus('current')
commandLogSourceAddressFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogSourceAddressFilter.setStatus('current')
commandLogFtpStatus = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("transferring", 1), ("completed", 2), ("interrupted", 3), ("empty", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogFtpStatus.setStatus('current')
commandLogFtpStatusTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2), ("trapEnableWithACK", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogFtpStatusTrapNotification.setStatus('current')
commandLogLastCommandTime = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogLastCommandTime.setStatus('current')
commandLogLastCommandUser = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogLastCommandUser.setStatus('current')
commandLogFtpStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 3373, 1103, 0, 4001)).setObjects(("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress"), ("SIAE-CLOG-MIB", "commandLogFtpStatus"), ("SIAE-USER-MIB", "accessControlLoginIpAddress"))
if mibBuilder.loadTexts: commandLogFtpStatusTrap.setStatus('current')
mibBuilder.exportSymbols("SIAE-CLOG-MIB", commandLogUserNameFilter=commandLogUserNameFilter, commandLogLastCommandTime=commandLogLastCommandTime, commandLogEndTimeFilter=commandLogEndTimeFilter, PYSNMP_MODULE_ID=commandLog, commandLogMgmtInterfaceFilter=commandLogMgmtInterfaceFilter, commandLogStartTimeFilter=commandLogStartTimeFilter, commandLogFtpStatusTrapNotification=commandLogFtpStatusTrapNotification, commandLogFtpFile=commandLogFtpFile, commandLogFtpStatusTrap=commandLogFtpStatusTrap, commandLogFtpStatus=commandLogFtpStatus, commandLogActionRequest=commandLogActionRequest, commandLogSourceAddressFilter=commandLogSourceAddressFilter, commandLogLastCommandUser=commandLogLastCommandUser, commandLog=commandLog, commandLogMibVersion=commandLogMibVersion)
