#
# PySNMP MIB module SIAE-CLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/siae/SIAE-CLOG-MIB
# Produced by pysmi-1.1.8 at Tue Jul 26 15:34:11 2022
# On host fv-az196-550 platform Linux version 5.15.0-1014-azure by user runner
# Using Python version 3.10.5 (main, Jul 11 2022, 14:35:34) [GCC 9.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
alarmTrap, = mibBuilder.importSymbols("SIAE-ALARM-MIB", "alarmTrap")
equipIpSnmpAgentAddress, = mibBuilder.importSymbols("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress")
siaeMib, = mibBuilder.importSymbols("SIAE-TREE-MIB", "siaeMib")
accessControlLoginIpAddress, = mibBuilder.importSymbols("SIAE-USER-MIB", "accessControlLoginIpAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibIdentifier, iso, Counter64, NotificationType, TimeTicks, Unsigned32, Gauge32, Bits, IpAddress, ObjectIdentity, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "iso", "Counter64", "NotificationType", "TimeTicks", "Unsigned32", "Gauge32", "Bits", "IpAddress", "ObjectIdentity", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
commandLog = ModuleIdentity((1, 3, 6, 1, 4, 1, 3373, 1103, 40))
commandLog.setRevisions(('2015-03-23 00:00', '2014-06-23 00:00', '2014-02-03 00:00', '2013-12-18 00:00',))
if mibBuilder.loadTexts: commandLog.setLastUpdated('201503230000Z')
if mibBuilder.loadTexts: commandLog.setOrganization('SIAE MICROELETTRONICA spa')
commandLogMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogMibVersion.setStatus('current')
commandLogActionRequest = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notActive", 0), ("delete", 1), ("read", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogActionRequest.setStatus('current')
commandLogFtpFile = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogFtpFile.setStatus('current')
commandLogMgmtInterfaceFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 4), Bits().clone(namedValues=NamedValues(("cli", 0), ("web", 1), ("snmp", 2), ("remoteCli", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogMgmtInterfaceFilter.setStatus('current')
commandLogStartTimeFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogStartTimeFilter.setStatus('current')
commandLogEndTimeFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogEndTimeFilter.setStatus('current')
commandLogUserNameFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogUserNameFilter.setStatus('current')
commandLogSourceAddressFilter = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogSourceAddressFilter.setStatus('current')
commandLogFtpStatus = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("transferring", 1), ("completed", 2), ("interrupted", 3), ("empty", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogFtpStatus.setStatus('current')
commandLogFtpStatusTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2), ("trapEnableWithACK", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: commandLogFtpStatusTrapNotification.setStatus('current')
commandLogLastCommandTime = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogLastCommandTime.setStatus('current')
commandLogLastCommandUser = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 40, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: commandLogLastCommandUser.setStatus('current')
commandLogFtpStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 3373, 1103, 0, 4001)).setObjects(("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress"), ("SIAE-CLOG-MIB", "commandLogFtpStatus"), ("SIAE-USER-MIB", "accessControlLoginIpAddress"))
if mibBuilder.loadTexts: commandLogFtpStatusTrap.setStatus('current')
mibBuilder.exportSymbols("SIAE-CLOG-MIB", commandLogSourceAddressFilter=commandLogSourceAddressFilter, commandLogUserNameFilter=commandLogUserNameFilter, PYSNMP_MODULE_ID=commandLog, commandLogFtpStatusTrapNotification=commandLogFtpStatusTrapNotification, commandLogMibVersion=commandLogMibVersion, commandLogMgmtInterfaceFilter=commandLogMgmtInterfaceFilter, commandLogEndTimeFilter=commandLogEndTimeFilter, commandLogFtpStatus=commandLogFtpStatus, commandLog=commandLog, commandLogActionRequest=commandLogActionRequest, commandLogLastCommandUser=commandLogLastCommandUser, commandLogFtpStatusTrap=commandLogFtpStatusTrap, commandLogLastCommandTime=commandLogLastCommandTime, commandLogStartTimeFilter=commandLogStartTimeFilter, commandLogFtpFile=commandLogFtpFile)
