#
# PySNMP MIB module ALTEON-CHEETAH-LAYER7-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/alteonos/ALTEON-CHEETAH-LAYER7-MIB
# Produced by pysmi-1.1.8 at Tue Aug  9 16:03:28 2022
# On host fv-az208-754 platform Linux version 5.15.0-1014-azure by user runner
# Using Python version 3.10.6 (main, Aug  2 2022, 15:19:40) [GCC 9.4.0]
#
aws_switch, = mibBuilder.importSymbols("ALTEON-ROOT-MIB", "aws-switch")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, iso, ModuleIdentity, Bits, IpAddress, NotificationType, Unsigned32, Gauge32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "iso", "ModuleIdentity", "Bits", "IpAddress", "NotificationType", "Unsigned32", "Gauge32", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
layer7 = ModuleIdentity((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5))
layer7.setRevisions(('2004-09-01 00:00',))
if mibBuilder.loadTexts: layer7.setLastUpdated('200409010000Z')
if mibBuilder.loadTexts: layer7.setOrganization('Nortel Networks')
layer7Configs = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1))
layer7Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2))
layer7Info = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 3))
layer7Oper = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 4))
urlCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1))
layer7GeneralCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 2))
sdpCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3))
slbUrlRedir = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1))
slbUrlBalance = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2))
slbUrlHttpMethods = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3))
urlStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1))
connPoolingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 2))
slbParsing = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 3, 1))
slbCurCfgUrlRedirNonGetOrigSrv = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlRedirNonGetOrigSrv.setStatus('current')
slbNewCfgUrlRedirNonGetOrigSrv = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlRedirNonGetOrigSrv.setStatus('current')
slbCurCfgUrlRedirCookieOrigSrv = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlRedirCookieOrigSrv.setStatus('current')
slbNewCfgUrlRedirCookieOrigSrv = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlRedirCookieOrigSrv.setStatus('current')
slbCurCfgUrlRedirNoCacheOrigSrv = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlRedirNoCacheOrigSrv.setStatus('current')
slbNewCfgUrlRedirNoCacheOrigSrv = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlRedirNoCacheOrigSrv.setStatus('current')
slbCurCfgUrlRedirUriHashLength = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlRedirUriHashLength.setStatus('current')
slbNewCfgUrlRedirUriHashLength = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlRedirUriHashLength.setStatus('current')
slbCurCfgUrlRedirHeader = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlRedirHeader.setStatus('current')
slbNewCfgUrlRedirHeader = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlRedirHeader.setStatus('current')
slbCurCfgUrlRedirHeaderName = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlRedirHeaderName.setStatus('current')
slbNewCfgUrlRedirHeaderName = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlRedirHeaderName.setStatus('current')
slbUrlLbPathTableMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbUrlLbPathTableMaxSize.setStatus('current')
slbCurCfgUrlLbPathTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2), )
if mibBuilder.loadTexts: slbCurCfgUrlLbPathTable.setStatus('current')
slbCurCfgUrlLbPathTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "slbCurCfgUrlLbPathIndex"))
if mibBuilder.loadTexts: slbCurCfgUrlLbPathTableEntry.setStatus('current')
slbCurCfgUrlLbPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathIndex.setStatus('current')
slbCurCfgUrlLbPathString = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathString.setStatus('current')
slbCurCfgUrlLbBwmContract = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbBwmContract.setStatus('current')
slbCurCfgUrlLbPathHTTPHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathHTTPHeader.setStatus('current')
slbCurCfgUrlLbPathHTTPHeaderValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathHTTPHeaderValue.setStatus('current')
slbCurCfgUrlLbPathPatternStringType = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ascii", 1), ("binary", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathPatternStringType.setStatus('current')
slbCurCfgUrlLbPathOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathOffset.setStatus('current')
slbCurCfgUrlLbPathDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathDepth.setStatus('current')
slbCurCfgUrlLbPathOper = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eq", 1), ("gt", 2), ("lt", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbPathOper.setStatus('current')
slbNewCfgUrlLbPathTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3), )
if mibBuilder.loadTexts: slbNewCfgUrlLbPathTable.setStatus('current')
slbNewCfgUrlLbPathTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "slbNewCfgUrlLbPathIndex"))
if mibBuilder.loadTexts: slbNewCfgUrlLbPathTableEntry.setStatus('current')
slbNewCfgUrlLbPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathIndex.setStatus('current')
slbNewCfgUrlLbPathString = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathString.setStatus('current')
slbNewCfgUrlLbBwmContract = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbBwmContract.setStatus('current')
slbNewCfgUrlLbPathHTTPHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathHTTPHeader.setStatus('current')
slbNewCfgUrlLbPathHTTPHeaderValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathHTTPHeaderValue.setStatus('current')
slbNewCfgUrlLbPathPatternStringType = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ascii", 1), ("binary", 2), ("none", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathPatternStringType.setStatus('current')
slbNewCfgUrlLbPathOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathOffset.setStatus('current')
slbNewCfgUrlLbPathDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1500))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathDepth.setStatus('current')
slbNewCfgUrlLbPathOper = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("eq", 1), ("gt", 2), ("lt", 3), ("none", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathOper.setStatus('current')
slbNewCfgUrlLbPathDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlLbPathDelete.setStatus('current')
slbCurCfgUrlLbErrorMsg = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbErrorMsg.setStatus('current')
slbNewCfgUrlLbErrorMsg = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlLbErrorMsg.setStatus('current')
slbCurCfgUrlLbCaseSensitiveStrMatch = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlLbCaseSensitiveStrMatch.setStatus('current')
slbNewCfgUrlLbCaseSensitiveStrMatch = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbNewCfgUrlLbCaseSensitiveStrMatch.setStatus('current')
slbUrlHttpMethodsTableMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbUrlHttpMethodsTableMaxSize.setStatus('current')
slbCurCfgUrlHttpMethodsTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 2), )
if mibBuilder.loadTexts: slbCurCfgUrlHttpMethodsTable.setStatus('current')
slbCurCfgUrlHttpMethodsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "slbCurCfgUrlHttpMethodIndex"))
if mibBuilder.loadTexts: slbCurCfgUrlHttpMethodsTableEntry.setStatus('current')
slbCurCfgUrlHttpMethodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlHttpMethodIndex.setStatus('current')
slbCurCfgUrlHttpMethodString = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgUrlHttpMethodString.setStatus('current')
slbNewCfgUrlHttpMethodsTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 3), )
if mibBuilder.loadTexts: slbNewCfgUrlHttpMethodsTable.setStatus('current')
slbNewCfgUrlHttpMethodsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "slbNewCfgUrlHttpMethodIndex"))
if mibBuilder.loadTexts: slbNewCfgUrlHttpMethodsTableEntry.setStatus('current')
slbNewCfgUrlHttpMethodIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbNewCfgUrlHttpMethodIndex.setStatus('current')
slbNewCfgUrlHttpMethodString = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlHttpMethodString.setStatus('current')
slbNewCfgUrlHttpMethodDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgUrlHttpMethodDelete.setStatus('current')
layer7CurCfgDbindTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: layer7CurCfgDbindTimeout.setStatus('current')
layer7NewCfgDbindTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: layer7NewCfgDbindTimeout.setStatus('current')
slbSdpTableMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbSdpTableMaxSize.setStatus('current')
slbCurCfgSdpTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 2), )
if mibBuilder.loadTexts: slbCurCfgSdpTable.setStatus('current')
slbCurCfgSdpTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 2, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "slbCurCfgSdpIndex"))
if mibBuilder.loadTexts: slbCurCfgSdpTableEntry.setStatus('current')
slbCurCfgSdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgSdpIndex.setStatus('current')
slbCurCfgSdpPrivAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgSdpPrivAddr.setStatus('current')
slbCurCfgSdpPublicAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbCurCfgSdpPublicAddr.setStatus('current')
slbNewCfgSdpTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 3), )
if mibBuilder.loadTexts: slbNewCfgSdpTable.setStatus('current')
slbNewCfgSdpTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 3, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "slbCurCfgSdpIndex"))
if mibBuilder.loadTexts: slbNewCfgSdpTableEntry.setStatus('current')
slbNewCfgSdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbNewCfgSdpIndex.setStatus('current')
slbNewCfgSdpPrivAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgSdpPrivAddr.setStatus('current')
slbNewCfgSdpPublicAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgSdpPublicAddr.setStatus('current')
slbNewCfgSdpDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("delete", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slbNewCfgSdpDelete.setStatus('current')
urlRedirStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1))
urlStatRedRedirs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedRedirs.setStatus('current')
urlStatRedOrigSrvs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedOrigSrvs.setStatus('current')
urlStatRedNonGets = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedNonGets.setStatus('current')
urlStatRedCookie = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedCookie.setStatus('current')
urlStatRedNoCache = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedNoCache.setStatus('current')
urlStatRedStraightOrigSrvs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedStraightOrigSrvs.setStatus('current')
urlStatRedRtspCacheSrvs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedRtspCacheSrvs.setStatus('current')
urlStatRedRtspOrigSrvs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatRedRtspOrigSrvs.setStatus('current')
urlSlbStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 2))
urlStatSlbPathTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 2, 1), )
if mibBuilder.loadTexts: urlStatSlbPathTable.setStatus('current')
urlStatSlbPathTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 2, 1, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "urlStatSlbPathIndex"))
if mibBuilder.loadTexts: urlStatSlbPathTableEntry.setStatus('current')
urlStatSlbPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatSlbPathIndex.setStatus('current')
urlStatSlbPathHits = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlStatSlbPathHits.setStatus('current')
urlMaintStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3))
urlMaintStatClientReset = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatClientReset.setStatus('current')
urlMaintStatServerReset = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatServerReset.setStatus('current')
urlMaintStatConnSplicing = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatConnSplicing.setStatus('current')
urlMaintStatHalfOpens = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatHalfOpens.setStatus('current')
urlMaintStatSwitchRetries = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatSwitchRetries.setStatus('current')
urlMaintStatRandomEarlyDrops = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatRandomEarlyDrops.setStatus('current')
urlMaintStatReqTooLong = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatReqTooLong.setStatus('current')
urlMaintStatInvalidHandshakes = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatInvalidHandshakes.setStatus('current')
urlMaintStatCurSPMemUnits = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatCurSPMemUnits.setStatus('current')
urlMaintStatCurSEQBufEntries = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatCurSEQBufEntries.setStatus('current')
urlMaintStatHighestSEQBufEntries = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatHighestSEQBufEntries.setStatus('current')
urlMaintStatCurDataBufUse = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatCurDataBufUse.setStatus('current')
urlMaintStatHighestDataBufUse = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatHighestDataBufUse.setStatus('current')
urlMaintStatCurSPBufEntries = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatCurSPBufEntries.setStatus('current')
urlMaintStatHighestSPBufEntries = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatHighestSPBufEntries.setStatus('current')
urlMaintStatTotalNonZeroSEQAlloc = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatTotalNonZeroSEQAlloc.setStatus('current')
urlMaintStatTotalSEQBufAllocs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatTotalSEQBufAllocs.setStatus('current')
urlMaintStatTotalSEQBufFrees = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatTotalSEQBufFrees.setStatus('current')
urlMaintStatTotalDataBufAllocs = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatTotalDataBufAllocs.setStatus('current')
urlMaintStatTotalDataBufFrees = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatTotalDataBufFrees.setStatus('current')
urlMaintStatSeqBufAllocFails = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatSeqBufAllocFails.setStatus('current')
urlMaintStatUBufAllocFails = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatUBufAllocFails.setStatus('current')
urlMaintStatMaxSessPerBucket = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatMaxSessPerBucket.setStatus('current')
urlMaintStatMaxFramesPerSess = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatMaxFramesPerSess.setStatus('current')
urlMaintStatMaxBytesBuffered = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatMaxBytesBuffered.setStatus('current')
urlMaintStatInvalidMethods = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatInvalidMethods.setStatus('current')
urlMaintStatAgedSessions = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatAgedSessions.setStatus('current')
urlMaintStatLowestSPMemUnits = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 3, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlMaintStatLowestSPMemUnits.setStatus('current')
urlSpMaintStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 4), )
if mibBuilder.loadTexts: urlSpMaintStatsTable.setStatus('current')
urlSpMaintStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 4, 1), ).setIndexNames((0, "ALTEON-CHEETAH-LAYER7-MIB", "urlSpMaintStatsSpIndex"))
if mibBuilder.loadTexts: urlSpMaintStatsTableEntry.setStatus('current')
urlSpMaintStatsSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlSpMaintStatsSpIndex.setStatus('current')
urlSpMaintStatsCurMemUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlSpMaintStatsCurMemUnits.setStatus('current')
urlSpMaintStatsLowestMemUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: urlSpMaintStatsLowestMemUnits.setStatus('current')
currOpenedServerConns = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currOpenedServerConns.setStatus('current')
activeServerConns = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: activeServerConns.setStatus('current')
availServerConns = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: availServerConns.setStatus('current')
agedOutClientConns = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agedOutClientConns.setStatus('current')
agedOutServerConns = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agedOutServerConns.setStatus('current')
slbParsingString = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slbParsingString.setStatus('current')
slbParsingVip = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbParsingVip.setStatus('current')
slbParsingRip = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbParsingRip.setStatus('current')
slbParsingRport = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slbParsingRport.setStatus('current')
mibBuilder.exportSymbols("ALTEON-CHEETAH-LAYER7-MIB", urlMaintStatCurDataBufUse=urlMaintStatCurDataBufUse, slbCurCfgUrlLbPathPatternStringType=slbCurCfgUrlLbPathPatternStringType, slbNewCfgUrlLbPathIndex=slbNewCfgUrlLbPathIndex, slbNewCfgUrlHttpMethodIndex=slbNewCfgUrlHttpMethodIndex, slbCurCfgSdpTableEntry=slbCurCfgSdpTableEntry, layer7Info=layer7Info, layer7Oper=layer7Oper, slbCurCfgSdpIndex=slbCurCfgSdpIndex, slbCurCfgUrlLbErrorMsg=slbCurCfgUrlLbErrorMsg, slbCurCfgSdpPrivAddr=slbCurCfgSdpPrivAddr, urlStatRedNonGets=urlStatRedNonGets, layer7GeneralCfg=layer7GeneralCfg, slbCurCfgUrlHttpMethodIndex=slbCurCfgUrlHttpMethodIndex, slbNewCfgUrlLbPathString=slbNewCfgUrlLbPathString, PYSNMP_MODULE_ID=layer7, urlStatRedOrigSrvs=urlStatRedOrigSrvs, slbNewCfgUrlLbPathOper=slbNewCfgUrlLbPathOper, slbCurCfgUrlHttpMethodsTableEntry=slbCurCfgUrlHttpMethodsTableEntry, slbNewCfgUrlLbPathTable=slbNewCfgUrlLbPathTable, urlMaintStatTotalNonZeroSEQAlloc=urlMaintStatTotalNonZeroSEQAlloc, slbCurCfgUrlRedirHeader=slbCurCfgUrlRedirHeader, urlSpMaintStatsTableEntry=urlSpMaintStatsTableEntry, slbUrlBalance=slbUrlBalance, urlMaintStatHighestSPBufEntries=urlMaintStatHighestSPBufEntries, slbNewCfgUrlLbPathOffset=slbNewCfgUrlLbPathOffset, slbNewCfgUrlHttpMethodDelete=slbNewCfgUrlHttpMethodDelete, slbParsingVip=slbParsingVip, agedOutClientConns=agedOutClientConns, connPoolingStats=connPoolingStats, urlMaintStatHighestDataBufUse=urlMaintStatHighestDataBufUse, urlMaintStatCurSPBufEntries=urlMaintStatCurSPBufEntries, currOpenedServerConns=currOpenedServerConns, slbNewCfgSdpTable=slbNewCfgSdpTable, slbNewCfgSdpPrivAddr=slbNewCfgSdpPrivAddr, urlMaintStatTotalSEQBufFrees=urlMaintStatTotalSEQBufFrees, slbNewCfgUrlRedirNonGetOrigSrv=slbNewCfgUrlRedirNonGetOrigSrv, slbParsingString=slbParsingString, urlMaintStatHalfOpens=urlMaintStatHalfOpens, slbNewCfgSdpDelete=slbNewCfgSdpDelete, urlStatRedRtspCacheSrvs=urlStatRedRtspCacheSrvs, urlSlbStats=urlSlbStats, urlMaintStatUBufAllocFails=urlMaintStatUBufAllocFails, slbCurCfgUrlHttpMethodsTable=slbCurCfgUrlHttpMethodsTable, slbNewCfgSdpPublicAddr=slbNewCfgSdpPublicAddr, slbNewCfgUrlHttpMethodsTableEntry=slbNewCfgUrlHttpMethodsTableEntry, slbCurCfgUrlLbPathOper=slbCurCfgUrlLbPathOper, slbNewCfgUrlHttpMethodString=slbNewCfgUrlHttpMethodString, urlStatRedNoCache=urlStatRedNoCache, slbNewCfgUrlRedirNoCacheOrigSrv=slbNewCfgUrlRedirNoCacheOrigSrv, slbNewCfgUrlRedirUriHashLength=slbNewCfgUrlRedirUriHashLength, urlMaintStatSeqBufAllocFails=urlMaintStatSeqBufAllocFails, urlStatSlbPathTable=urlStatSlbPathTable, urlMaintStatSwitchRetries=urlMaintStatSwitchRetries, slbNewCfgUrlLbPathHTTPHeader=slbNewCfgUrlLbPathHTTPHeader, slbNewCfgUrlLbPathHTTPHeaderValue=slbNewCfgUrlLbPathHTTPHeaderValue, urlMaintStatRandomEarlyDrops=urlMaintStatRandomEarlyDrops, urlSpMaintStatsCurMemUnits=urlSpMaintStatsCurMemUnits, urlStatSlbPathIndex=urlStatSlbPathIndex, slbCurCfgSdpTable=slbCurCfgSdpTable, urlMaintStatInvalidHandshakes=urlMaintStatInvalidHandshakes, slbCurCfgUrlRedirHeaderName=slbCurCfgUrlRedirHeaderName, slbCurCfgUrlLbPathString=slbCurCfgUrlLbPathString, urlStatSlbPathHits=urlStatSlbPathHits, urlStatRedCookie=urlStatRedCookie, slbNewCfgUrlRedirCookieOrigSrv=slbNewCfgUrlRedirCookieOrigSrv, urlStatRedStraightOrigSrvs=urlStatRedStraightOrigSrvs, slbUrlHttpMethods=slbUrlHttpMethods, slbCurCfgUrlRedirNoCacheOrigSrv=slbCurCfgUrlRedirNoCacheOrigSrv, layer7CurCfgDbindTimeout=layer7CurCfgDbindTimeout, slbCurCfgUrlLbPathHTTPHeaderValue=slbCurCfgUrlLbPathHTTPHeaderValue, urlMaintStatCurSPMemUnits=urlMaintStatCurSPMemUnits, urlMaintStatReqTooLong=urlMaintStatReqTooLong, urlMaintStatTotalSEQBufAllocs=urlMaintStatTotalSEQBufAllocs, urlStatRedRtspOrigSrvs=urlStatRedRtspOrigSrvs, urlSpMaintStatsTable=urlSpMaintStatsTable, slbCurCfgSdpPublicAddr=slbCurCfgSdpPublicAddr, slbNewCfgUrlLbPathDelete=slbNewCfgUrlLbPathDelete, slbParsingRip=slbParsingRip, urlSpMaintStatsSpIndex=urlSpMaintStatsSpIndex, slbNewCfgUrlLbErrorMsg=slbNewCfgUrlLbErrorMsg, slbNewCfgSdpIndex=slbNewCfgSdpIndex, agedOutServerConns=agedOutServerConns, urlMaintStatMaxBytesBuffered=urlMaintStatMaxBytesBuffered, urlMaintStatServerReset=urlMaintStatServerReset, slbCurCfgUrlLbPathOffset=slbCurCfgUrlLbPathOffset, slbCurCfgUrlLbPathDepth=slbCurCfgUrlLbPathDepth, urlMaintStatTotalDataBufFrees=urlMaintStatTotalDataBufFrees, slbSdpTableMaxSize=slbSdpTableMaxSize, slbCurCfgUrlRedirCookieOrigSrv=slbCurCfgUrlRedirCookieOrigSrv, sdpCfg=sdpCfg, urlStats=urlStats, slbNewCfgUrlLbBwmContract=slbNewCfgUrlLbBwmContract, slbNewCfgUrlHttpMethodsTable=slbNewCfgUrlHttpMethodsTable, slbUrlHttpMethodsTableMaxSize=slbUrlHttpMethodsTableMaxSize, slbCurCfgUrlRedirNonGetOrigSrv=slbCurCfgUrlRedirNonGetOrigSrv, slbCurCfgUrlLbPathIndex=slbCurCfgUrlLbPathIndex, slbNewCfgUrlLbPathTableEntry=slbNewCfgUrlLbPathTableEntry, layer7Stats=layer7Stats, slbCurCfgUrlLbBwmContract=slbCurCfgUrlLbBwmContract, urlMaintStatClientReset=urlMaintStatClientReset, slbNewCfgUrlLbPathDepth=slbNewCfgUrlLbPathDepth, urlMaintStatInvalidMethods=urlMaintStatInvalidMethods, urlSpMaintStatsLowestMemUnits=urlSpMaintStatsLowestMemUnits, urlMaintStatMaxSessPerBucket=urlMaintStatMaxSessPerBucket, slbCurCfgUrlLbPathTable=slbCurCfgUrlLbPathTable, layer7Configs=layer7Configs, slbNewCfgSdpTableEntry=slbNewCfgSdpTableEntry, slbCurCfgUrlLbCaseSensitiveStrMatch=slbCurCfgUrlLbCaseSensitiveStrMatch, urlMaintStatMaxFramesPerSess=urlMaintStatMaxFramesPerSess, urlMaintStatCurSEQBufEntries=urlMaintStatCurSEQBufEntries, layer7=layer7, slbNewCfgUrlLbPathPatternStringType=slbNewCfgUrlLbPathPatternStringType, urlRedirStats=urlRedirStats, slbParsing=slbParsing, urlMaintStatConnSplicing=urlMaintStatConnSplicing, slbCurCfgUrlRedirUriHashLength=slbCurCfgUrlRedirUriHashLength, activeServerConns=activeServerConns, urlMaintStatTotalDataBufAllocs=urlMaintStatTotalDataBufAllocs, slbParsingRport=slbParsingRport, slbUrlRedir=slbUrlRedir, slbNewCfgUrlLbCaseSensitiveStrMatch=slbNewCfgUrlLbCaseSensitiveStrMatch, slbCurCfgUrlLbPathHTTPHeader=slbCurCfgUrlLbPathHTTPHeader, availServerConns=availServerConns, urlMaintStatHighestSEQBufEntries=urlMaintStatHighestSEQBufEntries, slbNewCfgUrlRedirHeaderName=slbNewCfgUrlRedirHeaderName, urlStatSlbPathTableEntry=urlStatSlbPathTableEntry, urlMaintStatAgedSessions=urlMaintStatAgedSessions, layer7NewCfgDbindTimeout=layer7NewCfgDbindTimeout, urlStatRedRedirs=urlStatRedRedirs, slbCurCfgUrlLbPathTableEntry=slbCurCfgUrlLbPathTableEntry, slbUrlLbPathTableMaxSize=slbUrlLbPathTableMaxSize, urlMaintStats=urlMaintStats, urlMaintStatLowestSPMemUnits=urlMaintStatLowestSPMemUnits, slbNewCfgUrlRedirHeader=slbNewCfgUrlRedirHeader, slbCurCfgUrlHttpMethodString=slbCurCfgUrlHttpMethodString, urlCfg=urlCfg)
