#
# PySNMP MIB module NOTES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/domino/NOTES-MIB
# Produced by pysmi-1.1.8 at Tue Jul 26 15:26:53 2022
# On host fv-az196-550 platform Linux version 5.15.0-1014-azure by user runner
# Using Python version 3.10.5 (main, Jul 11 2022, 14:35:34) [GCC 9.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Bits, MibIdentifier, TimeTicks, iso, Counter32, enterprises, ModuleIdentity, NotificationType, Gauge32, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Bits", "MibIdentifier", "TimeTicks", "iso", "Counter32", "enterprises", "ModuleIdentity", "NotificationType", "Gauge32", "Counter64", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lotus = MibIdentifier((1, 3, 6, 1, 4, 1, 334))
notes = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72))
notesPump = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 73))
lnInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1))
lnControl = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 2))
lnInterceptor = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 3))
lnUnix = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 4))
mpaInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 100))
lnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1))
lnMail = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4))
lnReplica = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5))
lnServer = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6))
lnComm = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7))
lnDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8))
lnMem = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9))
lnDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10))
lnAgentMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11))
lnMTA = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12))
lnWeb = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13))
lnObject = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14))
lnDomino = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15))
lnCalendar = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16))
lnCollector = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 17))
lnFT = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18))
lnICM = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19))
lnIMAP = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20))
lnLDAP = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21))
lnMailByDest = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22))
lnMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23))
lnNNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24))
lnPOP3 = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25))
lnQOS = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26))
lnReporter = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 27))
lnSem = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 28))
lnSMTP = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29))
lnSMTPMTA = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 30))
lnSpin = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31))
lnServerTask = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1))
lnServerInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2))
lnServerStats = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3))
lnCluster = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4))
lnOpenRedirects = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8))
lnOpenRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 9))
lnClusterTrans = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10))
lnReplicaCluster = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6))
lnDominoInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1))
lnDominoCmdInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2))
lnDominoConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3))
lnMainProxyAgentVersion = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 100, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMainProxyAgentVersion.setStatus('mandatory')
lnAllStatsTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 1), )
if mibBuilder.loadTexts: lnAllStatsTable.setStatus('mandatory')
lnAllStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 1, 1), ).setIndexNames((0, "NOTES-MIB", "lnStatisticIndex"))
if mibBuilder.loadTexts: lnAllStatsEntry.setStatus('mandatory')
lnStatisticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnStatisticIndex.setStatus('mandatory')
lnStatisticString = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnStatisticString.setStatus('mandatory')
lnStatsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnStatsStartTime.setStatus('optional')
lnStatsCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnStatsCurrentTime.setStatus('optional')
lnDeadMail = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDeadMail.setStatus('optional')
lnDeliveredMail = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDeliveredMail.setStatus('optional')
lnTotalMailFailures = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTotalMailFailures.setStatus('optional')
lnTotalRoutedMail = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTotalRoutedMail.setStatus('optional')
lnTransferredMail = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTransferredMail.setStatus('optional')
lnWaitingMail = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWaitingMail.setStatus('optional')
lnNumWaitingRecipients = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNumWaitingRecipients.setStatus('optional')
lnMailDomain = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailDomain.setStatus('optional')
lnAverageMailDeliverTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAverageMailDeliverTime.setStatus('optional')
lnAverageMailServerHops = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAverageMailServerHops.setStatus('optional')
lnAverageMailSizeDelivered = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAverageMailSizeDelivered.setStatus('optional')
lnMaximumMailDeliverTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMaximumMailDeliverTime.setStatus('optional')
lnMaximumMailServerHops = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMaximumMailServerHops.setStatus('optional')
lnMaximumMailSizeDelivered = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMaximumMailSizeDelivered.setStatus('optional')
lnMinimumMailDeliverTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMinimumMailDeliverTime.setStatus('optional')
lnMinimumMailServerHops = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMinimumMailServerHops.setStatus('optional')
lnMinimumMailSizeDelivered = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMinimumMailSizeDelivered.setStatus('optional')
lnTotalKBTransferred = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTotalKBTransferred.setStatus('optional')
lnMailTransferFailures = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailTransferFailures.setStatus('optional')
lnMailDeliveries = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailDeliveries.setStatus('optional')
lnMailHold = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailHold.setStatus('optional')
lnMailIMAPCacheMsgInsertAttempts = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailIMAPCacheMsgInsertAttempts.setStatus('optional')
lnMailIMAPFindCacheAttempted = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailIMAPFindCacheAttempted.setStatus('optional')
lnMailIMAPNumCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailIMAPNumCacheHits.setStatus('optional')
lnMailIMAPNumMsgInsertedInCache = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailIMAPNumMsgInsertedInCache.setStatus('optional')
lnMailPeakByteTransferRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailPeakByteTransferRate.setStatus('optional')
lnMailPeakMessagesTransferred = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailPeakMessagesTransferred.setStatus('optional')
lnMailPeakMessageTranferRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailPeakMessageTranferRate.setStatus('optional')
lnMailPeakMessageTranferRateTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailPeakMessageTranferRateTime.setStatus('optional')
lnMailPeakTotalBytesTransferred = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailPeakTotalBytesTransferred.setStatus('optional')
lnMailTotalPending = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailTotalPending.setStatus('optional')
lnMailTotalRoutedSMTP = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailTotalRoutedSMTP.setStatus('optional')
lnMailTotalRouterNRPC = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailTotalRouterNRPC.setStatus('optional')
lnMailWaitingforDNS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 4, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailWaitingforDNS.setStatus('optional')
lnRepDocsAdded = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepDocsAdded.setStatus('optional')
lnRepDocsDeleted = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepDocsDeleted.setStatus('optional')
lnRepDocsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepDocsUpdated.setStatus('optional')
lnRepFailed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepFailed.setStatus('optional')
lnRepSuccessful = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepSuccessful.setStatus('optional')
lnRepClusterDocsAdded = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterDocsAdded.setStatus('optional')
lnRepClusterDocsDeleted = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterDocsDeleted.setStatus('optional')
lnRepClusterDocsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterDocsUpdated.setStatus('optional')
lnRepClusterFailed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterFailed.setStatus('optional')
lnRepClusterFilesLocal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterFilesLocal.setStatus('optional')
lnRepClusterFilesRemote = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterFilesRemote.setStatus('optional')
lnRepClusterRetrySkipped = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterRetrySkipped.setStatus('optional')
lnRepClusterRetryWaiting = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterRetryWaiting.setStatus('optional')
lnRepClusterSecondsOnQueue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterSecondsOnQueue.setStatus('optional')
lnRepClusterSecondsOnQueueAvg = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterSecondsOnQueueAvg.setStatus('optional')
lnRepClusterSecondsOnQueueMax = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterSecondsOnQueueMax.setStatus('optional')
lnRepClusterServers = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterServers.setStatus('optional')
lnRepClusterSessionBytesIn = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterSessionBytesIn.setStatus('optional')
lnRepClusterSessionBytesOut = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterSessionBytesOut.setStatus('optional')
lnRepClusterSuccessful = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterSuccessful.setStatus('optional')
lnRepClusterWorkQueueDepth = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterWorkQueueDepth.setStatus('optional')
lnRepClusterWorkQueueDepthAvg = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterWorkQueueDepthAvg.setStatus('optional')
lnRepClusterWorkQueueDepthMax = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRepClusterWorkQueueDepthMax.setStatus('optional')
lnReplicaClusterCachedHandles = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 5, 6, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnReplicaClusterCachedHandles.setStatus('optional')
lnTaskCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTaskCount.setStatus('optional')
lnTaskTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 2), )
if mibBuilder.loadTexts: lnTaskTable.setStatus('optional')
lnTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 2, 1), ).setIndexNames((0, "NOTES-MIB", "lnTaskIndex"))
if mibBuilder.loadTexts: lnTaskEntry.setStatus('optional')
lnTaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTaskIndex.setStatus('optional')
lnTaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40))).clone(namedValues=NamedValues(("databaseServer", 1), ("event", 2), ("reporter", 3), ("replicator", 4), ("indexer", 5), ("router", 6), ("eventInterceptor", 7), ("querySetHandler", 8), ("reflectorAgent", 9), ("webRetriever", 10), ("calendarConnector", 11), ("scheduleManager", 12), ("unknownAddin", 13), ("adminProcess", 14), ("httpWebServer", 15), ("chronos", 16), ("collector", 17), ("inotes", 18), ("billing", 19), ("clusterReplicator", 20), ("clusterDbDirMgr", 21), ("clusterAdmin", 22), ("agentManager", 23), ("cataloger", 24), ("databaseCompactor", 25), ("designer", 26), ("objectStoreMgr", 27), ("pop3Server", 28), ("statistics", 29), ("stats", 30), ("databaseFixup", 31), ("inNews", 32), ("webPublisher", 33), ("ccMailMTA", 34), ("smtpMTA", 35), ("x400MTA", 36), ("ldapServer", 37), ("nntpServer", 38), ("imapServer", 39), ("imap4Server", 40)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTaskType.setStatus('optional')
lnTaskData = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTaskData.setStatus('optional')
lnTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTaskName.setStatus('optional')
lnReplicatorStatus = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnReplicatorStatus.setStatus('optional')
lnRouterStatus = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnRouterStatus.setStatus('optional')
lnEventStatus = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEventStatus.setStatus('optional')
lnServerName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerName.setStatus('optional')
lnServerTitle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTitle.setStatus('optional')
lnServerAdministrators = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerAdministrators.setStatus('optional')
lnServerNotesVersion = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerNotesVersion.setStatus('optional')
lnServerSystemVersion = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerSystemVersion.setStatus('optional')
lnServerBootID = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerBootID.setStatus('optional')
lnServerDataPath = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerDataPath.setStatus('optional')
lnServerSwapPath = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerSwapPath.setStatus('optional')
lnServerRS232Ports = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerRS232Ports.setStatus('optional')
lnServerCoprocessor = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerCoprocessor.setStatus('optional')
lnServerOS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("os2", 1), ("netWare", 2), ("windowsNT", 3), ("unix", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerOS.setStatus('mandatory')
lnServerCPUCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerCPUCount.setStatus('optional')
lnServerCPUType = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerCPUType.setStatus('optional')
lnServerUsersTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 14), )
if mibBuilder.loadTexts: lnServerUsersTable.setStatus('obsolete')
lnServerPorts = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerPorts.setStatus('optional')
lnServerPoweredBy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerPoweredBy.setStatus('optional')
lnServerDescription = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerDescription.setStatus('optional')
lnServerLocation = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerLocation.setStatus('optional')
lnServerUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 14, 1), ).setIndexNames((0, "NOTES-MIB", "lnServerUsersIndex"))
if mibBuilder.loadTexts: lnServerUsersEntry.setStatus('obsolete')
lnServerUsersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsersIndex.setStatus('obsolete')
lnServerUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUserName.setStatus('obsolete')
lnServerUserSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 14, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUserSessionID.setStatus('obsolete')
lnServerUserAccessedDBs = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUserAccessedDBs.setStatus('obsolete')
lnServerDroppedSessions = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerDroppedSessions.setStatus('optional')
lnServerTransPerMin = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTransPerMin.setStatus('optional')
lnServerTransPerMinPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTransPerMinPeak.setStatus('optional')
lnServerTransPerMinPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTransPerMinPeakTime.setStatus('optional')
lnServerTransTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTransTotal.setStatus('optional')
lnServerUsers = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsers.setStatus('optional')
lnServerUsers1MinPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsers1MinPeak.setStatus('optional')
lnServerUsers1MinPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsers1MinPeakTime.setStatus('optional')
lnServerUsers5MinPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsers5MinPeak.setStatus('optional')
lnServerUsers5MinPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsers5MinPeakTime.setStatus('optional')
lnServerUsersPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsersPeak.setStatus('optional')
lnServerUsersPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerUsersPeakTime.setStatus('optional')
lnServerOpenReqMaxUsers = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerOpenReqMaxUsers.setStatus('optional')
lnServerOpenReqPreV4Client = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerOpenReqPreV4Client.setStatus('optional')
lnServerOpenReqRestricted = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerOpenReqRestricted.setStatus('optional')
lnServerOpenReqV4Client = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerOpenReqV4Client.setStatus('optional')
lnServerBusyTimeQueryReceivedCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerBusyTimeQueryReceivedCount.setStatus('optional')
lnServerBusyTimeQueryRetObjSched = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerBusyTimeQueryRetObjSched.setStatus('optional')
lnServerAvailabilityIndex = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerAvailabilityIndex.setStatus('optional')
lnServerAvailabilityThreshold = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerAvailabilityThreshold.setStatus('optional')
lnServerMinIdleDisconnect = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerMinIdleDisconnect.setStatus('optional')
lnServerMinIdleDisconnectTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerMinIdleDisconnectTime.setStatus('optional')
lnServerMonitorStart = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerMonitorStart.setStatus('optional')
lnServerTimeStart = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTimeStart.setStatus('optional')
lnServerWorkThreads = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 3, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerWorkThreads.setStatus('optional')
lnNumClosedOldSessions = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNumClosedOldSessions.setStatus('optional')
lnNetbiosTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2), )
if mibBuilder.loadTexts: lnNetbiosTable.setStatus('optional')
lnNetbiosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1), ).setIndexNames((0, "NOTES-MIB", "lnNBIndex"))
if mibBuilder.loadTexts: lnNetbiosEntry.setStatus('optional')
lnNBIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBIndex.setStatus('optional')
lnNBPort = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBPort.setStatus('optional')
lnNBUnitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBUnitNumber.setStatus('optional')
lnNBMajVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBMajVersion.setStatus('optional')
lnNMMinVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNMMinVersion.setStatus('optional')
lnNBReportPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBReportPeriod.setStatus('optional')
lnNBInUseSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBInUseSessions.setStatus('optional')
lnNBMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBMaxSessions.setStatus('optional')
lnNBAvailCmdBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBAvailCmdBlocks.setStatus('optional')
lnNBTotalCmdBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBTotalCmdBlocks.setStatus('optional')
lnNBPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBPacketSize.setStatus('optional')
lnNBReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBReceivedPackets.setStatus('optional')
lnNBSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBSentPackets.setStatus('optional')
lnNBAbortedTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBAbortedTransmissions.setStatus('optional')
lnNBRetriedTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBRetriedTransmissions.setStatus('optional')
lnNBAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBAlignmentErrors.setStatus('optional')
lnNBCollisionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBCollisionErrors.setStatus('optional')
lnNBCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBCRCErrors.setStatus('optional')
lnNBReceiverResourcesExhausted = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNBReceiverResourcesExhausted.setStatus('optional')
lnXPCTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3), )
if mibBuilder.loadTexts: lnXPCTable.setStatus('optional')
lnXPCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1), ).setIndexNames((0, "NOTES-MIB", "lnXPCIndex"))
if mibBuilder.loadTexts: lnXPCEntry.setStatus('optional')
lnXPCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCIndex.setStatus('optional')
lnXPCPort = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCPort.setStatus('optional')
lnXPCStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCStatus.setStatus('optional')
lnXPCCarrierSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCCarrierSpeed.setStatus('optional')
lnXPCPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCPortSpeed.setStatus('optional')
lnXPCActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCActiveSessions.setStatus('optional')
lnXPCKiloBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCKiloBytesReceived.setStatus('optional')
lnXPCKiloBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCKiloBytesSent.setStatus('optional')
lnXPCMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCMsgsReceived.setStatus('optional')
lnXPCMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCMsgsSent.setStatus('optional')
lnXPCCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCCRCErrors.setStatus('optional')
lnXPCPortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCPortErrors.setStatus('optional')
lnXPCRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnXPCRetransmissions.setStatus('optional')
lnAppleTalkStatsLogged = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAppleTalkStatsLogged.setStatus('optional')
lnNetWareSPXIIStatsLogged = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetWareSPXIIStatsLogged.setStatus('optional')
lnNetPortTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6), )
if mibBuilder.loadTexts: lnNetPortTable.setStatus('optional')
lnNetPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1), ).setIndexNames((0, "NOTES-MIB", "lnNetPortIndex"))
if mibBuilder.loadTexts: lnNetPortEntry.setStatus('optional')
lnNetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortIndex.setStatus('optional')
lnNetPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortName.setStatus('optional')
lnNetPortKBytesRec = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortKBytesRec.setStatus('optional')
lnNetPortKBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortKBytesSent.setStatus('optional')
lnNetPortSessEstIn = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessEstIn.setStatus('optional')
lnNetPortSessEstOut = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessEstOut.setStatus('optional')
lnNetPortSessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessLimit.setStatus('optional')
lnNetPortSessLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessLimitMax.setStatus('optional')
lnNetPortSessLimitMin = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessLimitMin.setStatus('optional')
lnNetPortSessPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessPeak.setStatus('optional')
lnNetPortSessRecycled = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessRecycled.setStatus('optional')
lnNetPortSessRecycling = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetPortSessRecycling.setStatus('optional')
lnSNARemoteLU = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNARemoteLU.setStatus('optional')
lnSNALocalLU = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNALocalLU.setStatus('optional')
lnSNALNCVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNALNCVersion.setStatus('optional')
lnSNAVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAVersion.setStatus('optional')
lnSNAMaxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAMaxSessions.setStatus('optional')
lnSNAActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAActiveSessions.setStatus('optional')
lnSNATPType = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNATPType.setStatus('optional')
lnSNATPState = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNATPState.setStatus('optional')
lnSNAConversationId = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAConversationId.setStatus('optional')
lnSNAMaxSendRUSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAMaxSendRUSize.setStatus('optional')
lnSNAMaxRcvRUSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAMaxRcvRUSize.setStatus('optional')
lnSNASendPacingSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNASendPacingSize.setStatus('optional')
lnSNARcvPacingSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNARcvPacingSize.setStatus('optional')
lnSNAPacingType = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSNAPacingType.setStatus('optional')
lnX25LocalResets = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25LocalResets.setStatus('optional')
lnX25RemoteResets = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25RemoteResets.setStatus('optional')
lnX25WindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25WindowSize.setStatus('optional')
lnX25FrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25FrameSize.setStatus('optional')
lnX25PktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25PktSize.setStatus('optional')
lnX25UnderRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25UnderRuns.setStatus('optional')
lnX25OverRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25OverRuns.setStatus('optional')
lnX25REJTran = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25REJTran.setStatus('optional')
lnX25REJRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25REJRcv.setStatus('optional')
lnX25VCCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25VCCfg.setStatus('optional')
lnX25VCInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25VCInUse.setStatus('optional')
lnX25CRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25CRCErrors.setStatus('optional')
lnX25LocalDTEAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 6, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnX25LocalDTEAddress.setStatus('optional')
lnNetLogTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 7), )
if mibBuilder.loadTexts: lnNetLogTable.setStatus('optional')
lnNetLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 7, 1), ).setIndexNames((0, "NOTES-MIB", "lnNetLogIndex"))
if mibBuilder.loadTexts: lnNetLogEntry.setStatus('optional')
lnNetLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetLogIndex.setStatus('optional')
lnNetLogName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNetLogName.setStatus('optional')
lnNETLogUnwrittenEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 7, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNETLogUnwrittenEntries.setStatus('optional')
lnDiskFixed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDiskFixed.setStatus('optional')
lnDiskFreeSwap = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDiskFreeSwap.setStatus('optional')
lnDriveTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 3), )
if mibBuilder.loadTexts: lnDriveTable.setStatus('optional')
lnDiskRemote = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDiskRemote.setStatus('optional')
lnDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 3, 1), ).setIndexNames((0, "NOTES-MIB", "lnDriveIndex"))
if mibBuilder.loadTexts: lnDriveEntry.setStatus('optional')
lnDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDriveIndex.setStatus('optional')
lnDriveLetter = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDriveLetter.setStatus('optional')
lnDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDriveSize.setStatus('optional')
lnDriveFree = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDriveFree.setStatus('optional')
lnMemAllocTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemAllocTotal.setStatus('optional')
lnMemAllocProcess = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemAllocProcess.setStatus('optional')
lnMemAllocShared = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemAllocShared.setStatus('optional')
lnMemAvailability = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemAvailability.setStatus('optional')
lnMemFree = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemFree.setStatus('optional')
lnMemSwapSize = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemSwapSize.setStatus('optional')
lnMemPhysicalRAM = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemPhysicalRAM.setStatus('optional')
lnMemFTVDKMaxBufferSizeUsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemFTVDKMaxBufferSizeUsed.setStatus('optional')
lnMemQuota = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemQuota.setStatus('optional')
lnMemTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 9, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMemTimeouts.setStatus('optional')
lnDBBufferControlPoolSize = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferControlPoolSize.setStatus('optional')
lnDBBufferControlPoolUsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferControlPoolUsed.setStatus('optional')
lnDBBufferPoolAllocated = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolAllocated.setStatus('optional')
lnDBBufferPoolMaximum = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolMaximum.setStatus('optional')
lnDBBufferPoolUsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolUsed.setStatus('optional')
lnDBNSFPoolSize = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNSFPoolSize.setStatus('optional')
lnDBNSFPoolUsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNSFPoolUsed.setStatus('optional')
lnDBBufferPoolPercentReadsInBuffer = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolPercentReadsInBuffer.setStatus('optional')
lnDBBufferPoolReads = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolReads.setStatus('optional')
lnDBBufferPoolWrites = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolWrites.setStatus('optional')
lnDBNIFPoolSize = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNIFPoolSize.setStatus('optional')
lnDBNIFPoolUsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNIFPoolUsed.setStatus('optional')
lnDBNIFPoolPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNIFPoolPeak.setStatus('optional')
lnDBNSFPoolPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNSFPoolPeak.setStatus('optional')
lnDBCacheCurrentEntries = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheCurrentEntries.setStatus('optional')
lnDBCacheHighWaterMark = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheHighWaterMark.setStatus('optional')
lnDBCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheHits.setStatus('optional')
lnDBCacheInitialDbOpens = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheInitialDbOpens.setStatus('optional')
lnDBCacheLookups = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheLookups.setStatus('optional')
lnDBCacheMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheMaxEntries.setStatus('optional')
lnDBCacheOvercrowdingRejections = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBCacheOvercrowdingRejections.setStatus('optional')
lnDBBufferControlPoolPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferControlPoolPeak.setStatus('optional')
lnDBBufferPoolPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBBufferPoolPeak.setStatus('optional')
lnDBExtMgrPoolPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBExtMgrPoolPeak.setStatus('optional')
lnDBExtMgrPoolUsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBExtMgrPoolUsed.setStatus('optional')
lnDBNSFFreeHandleStackHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNSFFreeHandleStackHits.setStatus('optional')
lnDBNSFFreeHandleStackAllocations = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNSFFreeHandleStackAllocations.setStatus('optional')
lnDBNSFFreeHandleStackMissRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 10, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDBNSFFreeHandleStackMissRate.setStatus('optional')
lnDailyAccessDenials = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDailyAccessDenials.setStatus('optional')
lnDailyScheduledRuns = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDailyScheduledRuns.setStatus('optional')
lnDailyTriggeredRuns = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDailyTriggeredRuns.setStatus('optional')
lnDailyUnsuccessfulRuns = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDailyUnsuccessfulRuns.setStatus('optional')
lnDailyUsedRunTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDailyUsedRunTime.setStatus('optional')
lnHourlyAccessDenials = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnHourlyAccessDenials.setStatus('optional')
lnHourlyScheduledRuns = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnHourlyScheduledRuns.setStatus('optional')
lnHourlyTriggeredRuns = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnHourlyTriggeredRuns.setStatus('optional')
lnHourlyUnsuccessfulRuns = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnHourlyUnsuccessfulRuns.setStatus('optional')
lnHourlyUsedRunTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 11, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnHourlyUsedRunTime.setStatus('optional')
lnMTATable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1), )
if mibBuilder.loadTexts: lnMTATable.setStatus('optional')
lnMTAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1), ).setIndexNames((0, "NOTES-MIB", "lnMTAIndex"))
if mibBuilder.loadTexts: lnMTAEntry.setStatus('optional')
lnMTAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTAIndex.setStatus('optional')
lnMTAName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTAName.setStatus('optional')
lnMTADeadMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTADeadMsgs.setStatus('optional')
lnMTAWaitingRecp = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTAWaitingRecp.setStatus('optional')
lnMTAWaitingMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTAWaitingMsgs.setStatus('optional')
lnMTATransferFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTATransferFailures.setStatus('optional')
lnMTATotalKBTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTATotalKBTransferred.setStatus('optional')
lnMTATransferredMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTATransferredMsgs.setStatus('optional')
lnMTATotalRouted = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMTATotalRouted.setStatus('optional')
lnWebAccessFtp = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebAccessFtp.setStatus('optional')
lnWebAccessGopher = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebAccessGopher.setStatus('optional')
lnWebAccessHttp = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebAccessHttp.setStatus('optional')
lnWebKBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebKBytesReceived.setStatus('optional')
lnWebKBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebKBytesSent.setStatus('optional')
lnWebImageCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebImageCacheHits.setStatus('optional')
lnWebImageCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebImageCacheMisses.setStatus('optional')
lnWebLogMessages = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebLogMessages.setStatus('optional')
lnWebActiveProcesses = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebActiveProcesses.setStatus('optional')
lnWebBusyProcesses = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebBusyProcesses.setStatus('optional')
lnWebIdleProcesses = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebIdleProcesses.setStatus('optional')
lnWebMaxProcesses = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebMaxProcesses.setStatus('optional')
lnWebProcessState = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcessState.setStatus('optional')
lnWebTimeCurrent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebTimeCurrent.setStatus('optional')
lnWebTimeDuration = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebTimeDuration.setStatus('optional')
lnWebTimeStart = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebTimeStart.setStatus('optional')
lnWebUrlFail = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebUrlFail.setStatus('optional')
lnWebUrlRequested = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebUrlRequested.setStatus('optional')
lnWebUrlSucceeded = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebUrlSucceeded.setStatus('optional')
lnWebRetrieverVersion = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverVersion.setStatus('optional')
lnWebVpoolMaxBuf = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebVpoolMaxBuf.setStatus('optional')
lnWebVpoolMaxElement = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebVpoolMaxElement.setStatus('optional')
lnWebVpoolMaxMarker = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebVpoolMaxMarker.setStatus('optional')
lnWebVpoolMaxText = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebVpoolMaxText.setStatus('optional')
lnWebVpoolMaxUrl = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebVpoolMaxUrl.setStatus('optional')
lnWebProcTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26), )
if mibBuilder.loadTexts: lnWebProcTable.setStatus('optional')
lnWebRetrieverLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverLogLevel.setStatus('optional')
lnWebRetrieverProcessAccessFTP = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessAccessFTP.setStatus('optional')
lnWebRetrieverProcessAccessGopher = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessAccessGopher.setStatus('optional')
lnWebRetrieverProcessAccessHTTP = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessAccessHTTP.setStatus('optional')
lnWebRetrieverProcessBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessBytesReceived.setStatus('optional')
lnWebRetrieverProcessBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessBytesSent.setStatus('optional')
lnWebRetrieverProcessProcessID = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessProcessID.setStatus('optional')
lnWebRetrieverProcessURLsFailed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessURLsFailed.setStatus('optional')
lnWebRetrieverProcessURLsRequested = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessURLsRequested.setStatus('optional')
lnWebRetrieverProcessURLsSucceeded = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebRetrieverProcessURLsSucceeded.setStatus('optional')
lnWebProcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1), ).setIndexNames((0, "NOTES-MIB", "lnWebProcIndex"))
if mibBuilder.loadTexts: lnWebProcEntry.setStatus('optional')
lnWebProcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcIndex.setStatus('optional')
lnWebProcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcNumber.setStatus('optional')
lnWebProcAccFtp = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcAccFtp.setStatus('optional')
lnWebProcAccGopher = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcAccGopher.setStatus('optional')
lnWebProcAccHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcAccHttp.setStatus('optional')
lnWebProcKBytesRec = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcKBytesRec.setStatus('optional')
lnWebProcKBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcKBytesSent.setStatus('optional')
lnWebProcCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcCacheHits.setStatus('optional')
lnWebProcCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcCacheMisses.setStatus('optional')
lnWebProcPid = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcPid.setStatus('optional')
lnWebProcUrlFail = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcUrlFail.setStatus('optional')
lnWebProcUrlReq = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcUrlReq.setStatus('optional')
lnWebProcUrlSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcUrlSucc.setStatus('optional')
lnWebProcVpoolCurBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolCurBuf.setStatus('optional')
lnWebProcVpoolCurElement = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolCurElement.setStatus('optional')
lnWebProcVpoolCurMarker = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolCurMarker.setStatus('optional')
lnWebProcVpoolCurText = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolCurText.setStatus('optional')
lnWebProcVpoolCurUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolCurUrl.setStatus('optional')
lnWebProcVpoolMaxBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolMaxBuf.setStatus('optional')
lnWebProcVpoolMaxElement = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolMaxElement.setStatus('optional')
lnWebProcVpoolMaxMarker = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolMaxMarker.setStatus('optional')
lnWebProcVpoolMaxText = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolMaxText.setStatus('optional')
lnWebProcVpoolMaxUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 13, 26, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnWebProcVpoolMaxUrl.setStatus('optional')
lnObjectFileName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectFileName.setStatus('optional')
lnObjectTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2), )
if mibBuilder.loadTexts: lnObjectTable.setStatus('optional')
lnObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1), ).setIndexNames((0, "NOTES-MIB", "lnObjectIndex"))
if mibBuilder.loadTexts: lnObjectEntry.setStatus('optional')
lnObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectIndex.setStatus('optional')
lnObjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectName.setStatus('optional')
lnObjectSharedBy01 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy01.setStatus('optional')
lnObjectSharedBy02 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy02.setStatus('optional')
lnObjectSharedBy03 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy03.setStatus('optional')
lnObjectSharedBy04 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy04.setStatus('optional')
lnObjectSharedBy05 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy05.setStatus('optional')
lnObjectSharedBy06 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy06.setStatus('optional')
lnObjectSharedBy07 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy07.setStatus('optional')
lnObjectSharedBy08 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy08.setStatus('optional')
lnObjectSharedBy09 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy09.setStatus('optional')
lnObjectSharedBy10 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy10.setStatus('optional')
lnObjectSharedBy11 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy11.setStatus('optional')
lnObjectSharedBy12 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy12.setStatus('optional')
lnObjectSharedBy13 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy13.setStatus('optional')
lnObjectSharedBy14 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy14.setStatus('optional')
lnObjectSharedBy15 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy15.setStatus('optional')
lnObjectSharedBy16 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy16.setStatus('optional')
lnObjectSharedBy17 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy17.setStatus('optional')
lnObjectSharedBy18 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy18.setStatus('optional')
lnObjectSharedBy19 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy19.setStatus('optional')
lnObjectSharedBy20 = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedBy20.setStatus('optional')
lnObjectSharedByGreater = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedByGreater.setStatus('optional')
lnObjectSharedByTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 14, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnObjectSharedByTotal.setStatus('optional')
lnDominoBuildName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoBuildName.setStatus('optional')
lnDominoBuildNumber = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoBuildNumber.setStatus('optional')
lnDominoBuildPlatform = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoBuildPlatform.setStatus('optional')
lnDominoBuildVersion = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoBuildVersion.setStatus('optional')
lnDominoThreadsActivePeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoThreadsActivePeak.setStatus('optional')
lnDominoThreadsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoThreadsTotal.setStatus('optional')
lnDominoThreadsPeakTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoThreadsPeakTotal.setStatus('optional')
lnDominoThreadsPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoThreadsPeakTime.setStatus('optional')
lnDominoStartTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoStartTime.setStatus('optional')
lnDominoReqPerMinTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerMinTotal.setStatus('optional')
lnDominoReqPerMinPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerMinPeak.setStatus('optional')
lnDominoReqPerMinPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerMinPeakTime.setStatus('optional')
lnDominoReqPer5MinsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPer5MinsTotal.setStatus('optional')
lnDominoReqPer5MinsPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPer5MinsPeak.setStatus('optional')
lnDominoReqPer5MinsPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPer5MinsPeakTime.setStatus('optional')
lnDominoReqPerHourTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerHourTotal.setStatus('optional')
lnDominoReqPerHourPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerHourPeak.setStatus('optional')
lnDominoReqPerHourPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerHourPeakTime.setStatus('optional')
lnDominoReqPerDayTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerDayTotal.setStatus('optional')
lnDominoReqPerDayPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerDayPeak.setStatus('optional')
lnDominoReqPerDayPeakTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoReqPerDayPeakTime.setStatus('optional')
lnDominoRequestsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoRequestsTotal.setStatus('optional')
lnDominoCacheCommandDisplaceRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCacheCommandDisplaceRate.setStatus('optional')
lnDominoCacheCommandHitRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCacheCommandHitRate.setStatus('optional')
lnDominoCacheDatabaseDisplaceRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCacheDatabaseDisplaceRate.setStatus('optional')
lnDominoCacheDatabaseHitRate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCacheDatabaseHitRate.setStatus('optional')
lnDominoCmdInfoEditDocument = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoEditDocument.setStatus('optional')
lnDominoCmdInfoOpenServer = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenServer.setStatus('optional')
lnDominoCmdInfoOpenDatabase = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenDatabase.setStatus('optional')
lnDominoCmdInfoOpenView = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenView.setStatus('optional')
lnDominoCmdInfoOpenDocument = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenDocument.setStatus('optional')
lnDominoCmdInfoOpenElement = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenElement.setStatus('optional')
lnDominoCmdInfoOpenIcon = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenIcon.setStatus('optional')
lnDominoCmdInfoOpenForm = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenForm.setStatus('optional')
lnDominoCmdInfoOpenAgent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenAgent.setStatus('optional')
lnDominoCmdInfoOpenNavigator = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenNavigator.setStatus('optional')
lnDominoCmdInfoOpenAbout = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenAbout.setStatus('optional')
lnDominoCmdInfoOpenHelp = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoOpenHelp.setStatus('optional')
lnDominoCmdInfoCreateDocument = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoCreateDocument.setStatus('optional')
lnDominoCmdInfoSaveDocument = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoSaveDocument.setStatus('optional')
lnDominoCmdInfoDeleteDocument = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoDeleteDocument.setStatus('optional')
lnDominoCmdInfoSearchSite = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoSearchSite.setStatus('optional')
lnDominoCmdInfoSearchView = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoSearchView.setStatus('optional')
lnDominoCmdInfoUnknown = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoUnknown.setStatus('optional')
lnDominoCmdInfoLogin = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoLogin.setStatus('optional')
lnDominoCmdInfoNavigate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoNavigate.setStatus('optional')
lnDominoCmdInfoReadForm = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoReadForm.setStatus('optional')
lnDominoCmdInfoTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCmdInfoTotal.setStatus('optional')
lnDominoCfgPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgPortNumber.setStatus('optional')
lnDominoCfgPortStatus = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgPortStatus.setStatus('optional')
lnDominoCfgHostName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgHostName.setStatus('optional')
lnDominoCfgDNSLookup = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgDNSLookup.setStatus('optional')
lnDominoCfgHomeURL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgHomeURL.setStatus('optional')
lnDominoCfgWelcomePage = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgWelcomePage.setStatus('optional')
lnDominoCfgActiveThreadsMax = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgActiveThreadsMax.setStatus('optional')
lnDominoCfgActiveThreadsMin = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgActiveThreadsMin.setStatus('optional')
lnDominoCfgSSLPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgSSLPortNumber.setStatus('optional')
lnDominoCfgSSLStatus = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgSSLStatus.setStatus('optional')
lnDominoCfgSSLKeyFile = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgSSLKeyFile.setStatus('optional')
lnDominoCfgCacheDirectory = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgCacheDirectory.setStatus('optional')
lnDominoCfgCacheSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgCacheSizeMax.setStatus('optional')
lnDominoCfgCacheDelete = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgCacheDelete.setStatus('optional')
lnDominoCfgGarbageCollectionStatus = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgGarbageCollectionStatus.setStatus('optional')
lnDominoCfgGarbageCollectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgGarbageCollectionInterval.setStatus('optional')
lnDominoCfgImageFormat = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgImageFormat.setStatus('optional')
lnDominoCfgImageInterlaced = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgImageInterlaced.setStatus('optional')
lnDominoCfgViewLines = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgViewLines.setStatus('optional')
lnDominoCfgDirectoryHTML = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgDirectoryHTML.setStatus('optional')
lnDominoCfgDirectoryURLPathCGI = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgDirectoryURLPathCGI.setStatus('optional')
lnDominoCfgDirectoryCGI = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgDirectoryCGI.setStatus('optional')
lnDominoCfgDirectoryURLPathIcons = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgDirectoryURLPathIcons.setStatus('optional')
lnDominoCfgDirectoryIcons = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgDirectoryIcons.setStatus('optional')
lnDominoCfgLogAccess = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgLogAccess.setStatus('optional')
lnDominoCfgLogError = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgLogError.setStatus('optional')
lnDominoCfgLogTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgLogTimeStamp.setStatus('optional')
lnDominoCfgLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgLogFilter.setStatus('optional')
lnDominoCfgTimeoutIdleThread = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgTimeoutIdleThread.setStatus('optional')
lnDominoCfgTimeoutInput = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgTimeoutInput.setStatus('optional')
lnDominoCfgTimeoutOutput = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgTimeoutOutput.setStatus('optional')
lnDominoCfgTimeoutCGI = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 15, 3, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnDominoCfgTimeoutCGI.setStatus('optional')
lnCalTotalAllApptsResources = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCalTotalAllApptsResources.setStatus('optional')
lnCalTotalAllUsersResources = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCalTotalAllUsersResources.setStatus('optional')
lnCalTotalAppointments = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCalTotalAppointments.setStatus('optional')
lnCalTotalReservations = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCalTotalReservations.setStatus('optional')
lnCalTotalResources = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCalTotalResources.setStatus('optional')
lnCalTotalUsers = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 16, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCalTotalUsers.setStatus('optional')
lnCollectorTimeCollected = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 17, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCollectorTimeCollected.setStatus('optional')
lnCollectorTimeElapsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 17, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnCollectorTimeElapsed.setStatus('optional')
lnClusterName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterName.setStatus('optional')
lnClusterAvailIndex = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterAvailIndex.setStatus('optional')
lnClusterAvailThreshold = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterAvailThreshold.setStatus('optional')
lnClusterPortName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterPortName.setStatus('optional')
lnClusterProbeCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterProbeCount.setStatus('optional')
lnClusterProbeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterProbeTimeout.setStatus('optional')
lnClusterTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 7), )
if mibBuilder.loadTexts: lnClusterTable.setStatus('optional')
lnClusterProbeError = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterProbeError.setStatus('optional')
lnClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 7, 1), ).setIndexNames((0, "NOTES-MIB", "lnClusterTableIndex"))
if mibBuilder.loadTexts: lnClusterEntry.setStatus('optional')
lnClusterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTableIndex.setStatus('optional')
lnClusterMemberName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterMemberName.setStatus('optional')
lnClusterMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterMemberIndex.setStatus('optional')
lnClusterFailoverByPathSucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterFailoverByPathSucc.setStatus('optional')
lnClusterFailoverByPathUnsucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterFailoverByPathUnsucc.setStatus('optional')
lnClusterFailoverSucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterFailoverSucc.setStatus('optional')
lnClusterFailoverUnsucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterFailoverUnsucc.setStatus('optional')
lnClusterLoadBalByPathSucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterLoadBalByPathSucc.setStatus('optional')
lnClusterLoadBalByPathUnsucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterLoadBalByPathUnsucc.setStatus('optional')
lnClusterLoadBalSucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterLoadBalSucc.setStatus('optional')
lnClusterLoadBalUnsucc = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 8, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterLoadBalUnsucc.setStatus('optional')
lnClusterOpenReqClustBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterOpenReqClustBusy.setStatus('optional')
lnClusterOpenReqDBOutofServ = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterOpenReqDBOutofServ.setStatus('optional')
lnClusterOpenReqLoadBalanced = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterOpenReqLoadBalanced.setStatus('optional')
lnClusterTransIntAvgTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransIntAvgTime.setStatus('optional')
lnClusterTransIntInSec = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransIntInSec.setStatus('optional')
lnClusterTransIntUsedInAvg = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransIntUsedInAvg.setStatus('optional')
lnClusterTransLastIntAvgTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransLastIntAvgTime.setStatus('optional')
lnClusterTransNormValue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransNormValue.setStatus('optional')
lnClusterTransIntervalInMinutes = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransIntervalInMinutes.setStatus('optional')
lnClusterTransRunningAvgTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransRunningAvgTime.setStatus('optional')
lnClusterTransRunningCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransRunningCount.setStatus('optional')
lnClusterTransRunningTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 6, 4, 10, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnClusterTransRunningTime.setStatus('optional')
lnFTDomainIndexBytesPerHour = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainIndexBytesPerHour.setStatus('optional')
lnFTDomainIndexCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainIndexCount.setStatus('optional')
lnFTDomainIndexDocumentsAdded = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainIndexDocumentsAdded.setStatus('optional')
lnFTDomainIndexDocumentsDeleted = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainIndexDocumentsDeleted.setStatus('optional')
lnFTDomainIndexTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainIndexTotalBytes.setStatus('optional')
lnFTDomainIndexTotalTimeMS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainIndexTotalTimeMS.setStatus('optional')
lnFTDomainSearchAverageTimeMS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainSearchAverageTimeMS.setStatus('optional')
lnFTDomainSearchCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainSearchCount.setStatus('optional')
lnFTDomainSearchMaxActualHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainSearchMaxActualHits.setStatus('optional')
lnFTDomainSearchTotalActualHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainSearchTotalActualHits.setStatus('optional')
lnFTDomainSearchTotalResults = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainSearchTotalResults.setStatus('optional')
lnFTDomainSearchTotalTimeMS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTDomainSearchTotalTimeMS.setStatus('optional')
lnFTIndexBytesPerHour = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTIndexBytesPerHour.setStatus('optional')
lnFTIndexCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTIndexCount.setStatus('optional')
lnFTIndexDocumentsAdded = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTIndexDocumentsAdded.setStatus('optional')
lnFTIndexDocumentsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTIndexDocumentsUpdated.setStatus('optional')
lnFTIndexTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTIndexTotalBytes.setStatus('optional')
lnFTIndexTotalTimeMS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTIndexTotalTimeMS.setStatus('optional')
lnFTSearchAverageTimeMS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchAverageTimeMS.setStatus('optional')
lnFTSearchCount = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchCount.setStatus('optional')
lnFTSearchMaxActualHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchMaxActualHits.setStatus('optional')
lnFTSearchMaxResults = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchMaxResults.setStatus('optional')
lnFTSearchTotalActualHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchTotalActualHits.setStatus('optional')
lnFTSearchTotalResults = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchTotalResults.setStatus('optional')
lnFTSearchTotalTimeMS = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 18, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnFTSearchTotalTimeMS.setStatus('optional')
lnICMCommandRedirectsClusterBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMCommandRedirectsClusterBusy.setStatus('optional')
lnICMCommandRedirectsSuccessful = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMCommandRedirectsSuccessful.setStatus('optional')
lnICMCommandRedirectsUnsuccessful = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMCommandRedirectsUnsuccessful.setStatus('optional')
lnICMCommandTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMCommandTotal.setStatus('optional')
lnICMCommandUnknown = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMCommandUnknown.setStatus('optional')
lnICMReceiveError = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMReceiveError.setStatus('optional')
lnICMRequestsPer1HourTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMRequestsPer1HourTotal.setStatus('optional')
lnICMRequestsPer1MinuteTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMRequestsPer1MinuteTotal.setStatus('optional')
lnICMRequestsPer5MinutesTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMRequestsPer5MinutesTotal.setStatus('optional')
lnICMSessionsThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMSessionsThreadsBusy.setStatus('optional')
lnICMSessionsThreadsIdle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMSessionsThreadsIdle.setStatus('optional')
lnICMSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 19, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnICMSessionsTotal.setStatus('optional')
lnIMAPSessionsAcceptQueue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsAcceptQueue.setStatus('optional')
lnIMAPSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsActive.setStatus('optional')
lnIMAPSessionsInboundBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsInboundBytesReceived.setStatus('optional')
lnIMAPSessionsInboundBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsInboundBytesSent.setStatus('optional')
lnIMAPSessionsInboundNonSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsInboundNonSSL.setStatus('optional')
lnIMAPSessionsInboundSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsInboundSSL.setStatus('optional')
lnIMAPSessionsInboundSSLBadHandshake = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsInboundSSLBadHandshake.setStatus('optional')
lnIMAPSessionsInboundTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsInboundTotal.setStatus('optional')
lnIMAPSessionsPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsPeak.setStatus('optional')
lnIMAPSessionsThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsThreadsBusy.setStatus('optional')
lnIMAPSessionsThreadsIdle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsThreadsIdle.setStatus('optional')
lnIMAPSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 20, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnIMAPSessionsTotal.setStatus('optional')
lnLDAPSessionsAcceptQueue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsAcceptQueue.setStatus('optional')
lnLDAPSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsActive.setStatus('optional')
lnLDAPSessionsInboundBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsInboundBytesReceived.setStatus('optional')
lnLDAPSessionsInboundBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsInboundBytesSent.setStatus('optional')
lnLDAPSessionsInboundNonSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsInboundNonSSL.setStatus('optional')
lnLDAPSessionsInboundSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsInboundSSL.setStatus('optional')
lnLDAPSessionsInboundSSLBadHandshake = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsInboundSSLBadHandshake.setStatus('optional')
lnLDAPSessionsInboundTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsInboundTotal.setStatus('optional')
lnLDAPSessionsPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsPeak.setStatus('optional')
lnLDAPSessionsThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsThreadsBusy.setStatus('optional')
lnLDAPSessionsThreadsIdle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsThreadsIdle.setStatus('optional')
lnLDAPSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 21, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLDAPSessionsTotal.setStatus('optional')
lnMailByDestTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1), )
if mibBuilder.loadTexts: lnMailByDestTable.setStatus('optional')
lnMailByDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1, 1), ).setIndexNames((0, "NOTES-MIB", "lnMailByDestIndex"))
if mibBuilder.loadTexts: lnMailByDestEntry.setStatus('optional')
lnMailByDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailByDestIndex.setStatus('optional')
lnMailByDestName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailByDestName.setStatus('optional')
lnMailByDestDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailByDestDelivered.setStatus('optional')
lnMailByDestTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailByDestTotalFailures.setStatus('optional')
lnMailByDestTotalRouted = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMailByDestTotalRouted.setStatus('optional')
lnMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1), )
if mibBuilder.loadTexts: lnMonitorTable.setStatus('optional')
lnMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1), ).setIndexNames((0, "NOTES-MIB", "lnMonitorIndex"))
if mibBuilder.loadTexts: lnMonitorEntry.setStatus('optional')
lnMonitorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMonitorIndex.setStatus('optional')
lnMonitorName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMonitorName.setStatus('optional')
lnMonitorFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMonitorFailure.setStatus('optional')
lnMonitorFatal = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMonitorFatal.setStatus('optional')
lnMonitorHeartbeat = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMonitorHeartbeat.setStatus('optional')
lnMonitorWarningHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 23, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMonitorWarningHigh.setStatus('optional')
lnNNTPArticlesPosted = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPArticlesPosted.setStatus('optional')
lnNNTPArticlesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPArticlesSent.setStatus('optional')
lnNNTPBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPBytesReceived.setStatus('optional')
lnNNTPBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPBytesSent.setStatus('optional')
lnNNTPPullArticlesFailed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPullArticlesFailed.setStatus('optional')
lnNNTPPullArticlesOffered = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPullArticlesOffered.setStatus('optional')
lnNNTPPullArticlesRequested = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPullArticlesRequested.setStatus('optional')
lnNNTPPullArticlesTransferred = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPullArticlesTransferred.setStatus('optional')
lnNNTPPushArticlesFailed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPushArticlesFailed.setStatus('optional')
lnNNTPPushArticlesOffered = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPushArticlesOffered.setStatus('optional')
lnNNTPPushArticlesRequested = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPushArticlesRequested.setStatus('optional')
lnNNTPPushArticlesTransferred = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPPushArticlesTransferred.setStatus('optional')
lnNNTPSessionsAcceptQueue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsAcceptQueue.setStatus('optional')
lnNNTPSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsActive.setStatus('optional')
lnNNTPSessionsInboundBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsInboundBytesReceived.setStatus('optional')
lnNNTPSessionsInboundBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsInboundBytesSent.setStatus('optional')
lnNNTPSessionsInboundNonSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsInboundNonSSL.setStatus('optional')
lnNNTPSessionsInboundSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsInboundSSL.setStatus('optional')
lnNNTPSessionsInboundSSLBadHandshake = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsInboundSSLBadHandshake.setStatus('optional')
lnNNTPSessionsInboundTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsInboundTotal.setStatus('optional')
lnNNTPSessionsOutgoingnonSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsOutgoingnonSSL.setStatus('optional')
lnNNTPSessionsOutgoingSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsOutgoingSSL.setStatus('optional')
lnNNTPSessionsPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsPeak.setStatus('optional')
lnNNTPSessionsThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsThreadsBusy.setStatus('optional')
lnNNTPSessionsThreadsIdle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsThreadsIdle.setStatus('optional')
lnNNTPSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPSessionsTotal.setStatus('optional')
lnNNTPServerTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27), )
if mibBuilder.loadTexts: lnNNTPServerTable.setStatus('optional')
lnNNTPServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1), ).setIndexNames((0, "NOTES-MIB", "lnNNTPServerIndex"))
if mibBuilder.loadTexts: lnNNTPServerEntry.setStatus('optional')
lnNNTPServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerIndex.setStatus('optional')
lnNNTPServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerName.setStatus('optional')
lnNNTPServerArticlesPosted = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerArticlesPosted.setStatus('optional')
lnNNTPServerArticlesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerArticlesSent.setStatus('optional')
lnNNTPServerBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerBytesReceived.setStatus('optional')
lnNNTPServerBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerBytesSent.setStatus('optional')
lnNNTPServerPullArticlesFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPullArticlesFailed.setStatus('optional')
lnNNTPServerPullArticlesOffered = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPullArticlesOffered.setStatus('optional')
lnNNTPServerPullArticlesRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPullArticlesRequested.setStatus('optional')
lnNNTPServerPullArticlesTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPullArticlesTransferred.setStatus('optional')
lnNNTPServerPushArticlesFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPushArticlesFailed.setStatus('optional')
lnNNTPServerPushArticlesOffered = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPushArticlesOffered.setStatus('optional')
lnNNTPServerPushArticlesRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPushArticlesRequested.setStatus('optional')
lnNNTPServerPushArticlesTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 24, 27, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNNTPServerPushArticlesTransferred.setStatus('optional')
lnPOP3SessionsAcceptQueue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsAcceptQueue.setStatus('optional')
lnPOP3SessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsActive.setStatus('optional')
lnPOP3SessionsInboundBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsInboundBytesReceived.setStatus('optional')
lnPOP3SessionsInboundBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsInboundBytesSent.setStatus('optional')
lnPOP3SessionsInboundNonSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsInboundNonSSL.setStatus('optional')
lnPOP3SessionsInboundSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsInboundSSL.setStatus('optional')
lnPOP3SessionsInboundSSLBadHandshake = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsInboundSSLBadHandshake.setStatus('optional')
lnPOP3SessionsInboundTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsInboundTotal.setStatus('optional')
lnPOP3SessionsPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsPeak.setStatus('optional')
lnPOP3SessionsThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsThreadsBusy.setStatus('optional')
lnPOP3SessionsThreadsIdle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsThreadsIdle.setStatus('optional')
lnPOP3SessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3SessionsTotal.setStatus('optional')
lnPOP3UserCacheAttempts = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheAttempts.setStatus('optional')
lnPOP3UserCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheHits.setStatus('optional')
lnPOP3UserCacheInserts = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheInserts.setStatus('optional')
lnPOP3UserCacheLookups = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheLookups.setStatus('optional')
lnPOP3UserCacheOpenReasonCacheFull = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheOpenReasonCacheFull.setStatus('optional')
lnPOP3UserCacheOpenReasonDBChanged = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheOpenReasonDBChanged.setStatus('optional')
lnPOP3UserCacheOpenReasonNewEntry = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 25, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnPOP3UserCacheOpenReasonNewEntry.setStatus('optional')
lnQOSMailISpyProbeError = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnQOSMailISpyProbeError.setStatus('optional')
lnQOSMailProbeTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26, 2), )
if mibBuilder.loadTexts: lnQOSMailProbeTable.setStatus('optional')
lnQOSMailProbeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26, 2, 1), ).setIndexNames((0, "NOTES-MIB", "lnQOSMailProbeIndex"))
if mibBuilder.loadTexts: lnQOSMailProbeEntry.setStatus('optional')
lnQOSMailProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnQOSMailProbeIndex.setStatus('optional')
lnQOSMailProbeName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnQOSMailProbeName.setStatus('optional')
lnQOSMailISpyResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 26, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnQOSMailISpyResponseTime.setStatus('optional')
lnReporterTimeAnalysis = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 27, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnReporterTimeAnalysis.setStatus('optional')
lnReporterTimeCollected = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 27, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnReporterTimeCollected.setStatus('optional')
lnReporterTimeElapsed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 27, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnReporterTimeElapsed.setStatus('optional')
lnSEMTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 28, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSEMTimeouts.setStatus('optional')
lnSMTPMessagesProcessed = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPMessagesProcessed.setStatus('optional')
lnSMTPSessionsAcceptQueue = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsAcceptQueue.setStatus('optional')
lnSMTPSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsActive.setStatus('optional')
lnSMTPSessionsInboundBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsInboundBytesReceived.setStatus('optional')
lnSMTPSessionsInboundBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsInboundBytesSent.setStatus('optional')
lnSMTPSessionsInboundNonSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsInboundNonSSL.setStatus('optional')
lnSMTPSessionsInboundSSL = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsInboundSSL.setStatus('optional')
lnSMTPSessionsInboundSSLBadHandshake = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsInboundSSLBadHandshake.setStatus('optional')
lnSMTPSessionsInboundTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsInboundTotal.setStatus('optional')
lnSMTPSessionsPeak = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsPeak.setStatus('optional')
lnSMTPSessionsThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsThreadsBusy.setStatus('optional')
lnSMTPSessionsThreadsIdle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsThreadsIdle.setStatus('optional')
lnSMTPSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPSessionsTotal.setStatus('optional')
lnSMTPStatTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14), )
if mibBuilder.loadTexts: lnSMTPStatTable.setStatus('optional')
lnSMTPStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1), ).setIndexNames((0, "NOTES-MIB", "lnSMTPStatIndex"))
if mibBuilder.loadTexts: lnSMTPStatEntry.setStatus('optional')
lnSMTPStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPStatIndex.setStatus('optional')
lnSMTPStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPStatName.setStatus('optional')
lnSMTPAve = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPAve.setStatus('optional')
lnSMTPCount = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPCount.setStatus('optional')
lnSMTPMax = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPMax.setStatus('optional')
lnSMTPMin = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPMin.setStatus('optional')
lnSMTPTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 29, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSMTPTotal.setStatus('optional')
lnSpinAvtIterToHit = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinAvtIterToHit.setStatus('optional')
lnSpinDelays = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinDelays.setStatus('optional')
lnSpinDelaysMsecs = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinDelaysMsecs.setStatus('optional')
lnSpinFRWSemGetReadExt = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinFRWSemGetReadExt.setStatus('optional')
lnSpinFRWSemPutReadExt = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinFRWSemPutReadExt.setStatus('optional')
lnSpinHits = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinHits.setStatus('optional')
lnSpinMaxDelayMask = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinMaxDelayMask.setStatus('optional')
lnSpinMaxDelayMsecs = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 1, 31, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSpinMaxDelayMsecs.setStatus('optional')
lnMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMIBVersion.setStatus('mandatory')
lnQSBuildNumber = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnQSBuildNumber.setStatus('mandatory')
lnNotesServerSetState = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lnNotesServerSetState.setStatus('mandatory')
lnNotesServerState = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("not-responding", 3), ("crashed", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnNotesServerState.setStatus('mandatory')
lnLastTrapSeq = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnLastTrapSeq.setStatus('mandatory')
lnRecentTrapsTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 2, 4), )
if mibBuilder.loadTexts: lnRecentTrapsTable.setStatus('mandatory')
lnRecentTrapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 2, 4, 1), ).setIndexNames((0, "NOTES-MIB", "lnTrapSeq"))
if mibBuilder.loadTexts: lnRecentTrapsEntry.setStatus('mandatory')
lnTrapSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTrapSeq.setStatus('mandatory')
lnTrapInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTrapInfo.setStatus('mandatory')
lnRemoteReboot = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lnRemoteReboot.setStatus('mandatory')
lnServerTable = MibTable((1, 3, 6, 1, 4, 1, 334, 72, 2, 6), )
if mibBuilder.loadTexts: lnServerTable.setStatus('optional')
lnTotalPartitions = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnTotalPartitions.setStatus('mandatory')
lnMPAIniFileLocation = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 2, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnMPAIniFileLocation.setStatus('mandatory')
lnServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1), ).setIndexNames((0, "NOTES-MIB", "lnServerTblIndex"))
if mibBuilder.loadTexts: lnServerEntry.setStatus('optional')
lnServerTblIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTblIndex.setStatus('optional')
lnServerTblName = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTblName.setStatus('optional')
lnServerTblNotesPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTblNotesPartition.setStatus('optional')
lnServerTblDataDir = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTblDataDir.setStatus('optional')
lnServerTblDataDirValid = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTblDataDirValid.setStatus('optional')
lnServerTblState = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerTblState.setStatus('optional')
lnServerIdentifiedItself = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnServerIdentifiedItself.setStatus('optional')
lnServerTblSetState = MibTableColumn((1, 3, 6, 1, 4, 1, 334, 72, 2, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lnServerTblSetState.setStatus('optional')
lnEvtServer = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEvtServer.setStatus('mandatory')
lnEvtType = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("communications", 1), ("security", 2), ("mail", 3), ("replication", 4), ("resource", 5), ("miscellaneous", 6), ("server", 7), ("alarm", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEvtType.setStatus('mandatory')
lnEvtSeverity = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("fatal", 1), ("failure", 2), ("warning1", 3), ("warning2", 4), ("normal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEvtSeverity.setStatus('mandatory')
lnEvtWhen = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEvtWhen.setStatus('mandatory')
lnEvtData = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEvtData.setStatus('mandatory')
lnEvtSeq = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnEvtSeq.setStatus('mandatory')
lnAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 4, 1))
lnSignal = MibIdentifier((1, 3, 6, 1, 4, 1, 334, 72, 4, 2))
lnAlarmServerHandle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmServerHandle.setStatus('optional')
lnAlarmTargetHandle = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmTargetHandle.setStatus('optional')
lnAlarmDate = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmDate.setStatus('optional')
lnAlarmTime = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmTime.setStatus('optional')
lnAlarmSeverity = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("normal", 0), ("informational", 1), ("disabled", 2), ("unmanaged", 3), ("unknown", 4), ("marginal", 5), ("warning", 6), ("minor", 7), ("major", 8), ("critical", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmSeverity.setStatus('optional')
lnAlarmIntArg = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmIntArg.setStatus('optional')
lnAlarmLongArg = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmLongArg.setStatus('optional')
lnAlarmDoubleArg = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmDoubleArg.setStatus('optional')
lnAlarmTextArg1 = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmTextArg1.setStatus('optional')
lnAlarmTextArg2 = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmTextArg2.setStatus('optional')
lnAlarmSeverityStr = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmSeverityStr.setStatus('optional')
lnAlarmTypeStr = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmTypeStr.setStatus('optional')
lnAlarmMessage = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmMessage.setStatus('optional')
lnAlarmMessageExt = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmMessageExt.setStatus('optional')
lnAlarmServerName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnAlarmServerName.setStatus('optional')
lnSignalServerId = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSignalServerId.setStatus('optional')
lnSignalOldServerType = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSignalOldServerType.setStatus('optional')
lnSignalNewServerType = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSignalNewServerType.setStatus('optional')
lnSignalWhatHasChanged = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSignalWhatHasChanged.setStatus('optional')
lnSignalServerName = MibScalar((1, 3, 6, 1, 4, 1, 334, 72, 4, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lnSignalServerName.setStatus('optional')
lnUnknownEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,0)).setObjects(("NOTES-MIB", "lnEvtServer"), ("NOTES-MIB", "lnEvtType"), ("NOTES-MIB", "lnEvtSeverity"), ("NOTES-MIB", "lnEvtWhen"), ("NOTES-MIB", "lnEvtData"), ("NOTES-MIB", "lnEvtSeq"))
lnFatalEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,1)).setObjects(("NOTES-MIB", "lnEvtServer"), ("NOTES-MIB", "lnEvtType"), ("NOTES-MIB", "lnEvtSeverity"), ("NOTES-MIB", "lnEvtWhen"), ("NOTES-MIB", "lnEvtData"), ("NOTES-MIB", "lnEvtSeq"))
lnFailureEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,2)).setObjects(("NOTES-MIB", "lnEvtServer"), ("NOTES-MIB", "lnEvtType"), ("NOTES-MIB", "lnEvtSeverity"), ("NOTES-MIB", "lnEvtWhen"), ("NOTES-MIB", "lnEvtData"), ("NOTES-MIB", "lnEvtSeq"))
lnWarning1EventTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,3)).setObjects(("NOTES-MIB", "lnEvtServer"), ("NOTES-MIB", "lnEvtType"), ("NOTES-MIB", "lnEvtSeverity"), ("NOTES-MIB", "lnEvtWhen"), ("NOTES-MIB", "lnEvtData"), ("NOTES-MIB", "lnEvtSeq"))
lnWarning2EventTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,4)).setObjects(("NOTES-MIB", "lnEvtServer"), ("NOTES-MIB", "lnEvtType"), ("NOTES-MIB", "lnEvtSeverity"), ("NOTES-MIB", "lnEvtWhen"), ("NOTES-MIB", "lnEvtData"), ("NOTES-MIB", "lnEvtSeq"))
lnNormalEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,5)).setObjects(("NOTES-MIB", "lnEvtServer"), ("NOTES-MIB", "lnEvtType"), ("NOTES-MIB", "lnEvtSeverity"), ("NOTES-MIB", "lnEvtWhen"), ("NOTES-MIB", "lnEvtData"), ("NOTES-MIB", "lnEvtSeq"))
lnServerUpTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,11)).setObjects(("NOTES-MIB", "lnEvtServer"))
lnServerDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,12)).setObjects(("NOTES-MIB", "lnEvtServer"))
lnServerPulseFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,13)).setObjects(("NOTES-MIB", "lnEvtServer"))
lnServerPulseRestoredTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,14)).setObjects(("NOTES-MIB", "lnEvtServer"))
lnSystemRebootingTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,15))
lnServerNotRespondingTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,16)).setObjects(("NOTES-MIB", "lnEvtServer"))
lnServerNowRespondingTrap = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,17)).setObjects(("NOTES-MIB", "lnEvtServer"))
lnAlarmStatisticThreshold = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,30)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmServerStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,31)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmPortStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,32)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmTaskStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,33)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmNVStatClear = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,34)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmAutoDiscovery = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,35)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmServerNotesEvent = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,36)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmServerCfgChangeEvent = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,37)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmMailProbeEvent = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,38)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmNSFRemoteConsoleEvent = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,40)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmMailBoxEvent = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,41)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmServerSNMPEvent = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,39)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"), ("NOTES-MIB", "lnAlarmTargetHandle"), ("NOTES-MIB", "lnAlarmDate"), ("NOTES-MIB", "lnAlarmTime"), ("NOTES-MIB", "lnAlarmSeverity"), ("NOTES-MIB", "lnAlarmIntArg"), ("NOTES-MIB", "lnAlarmLongArg"), ("NOTES-MIB", "lnAlarmDoubleArg"), ("NOTES-MIB", "lnAlarmTextArg1"), ("NOTES-MIB", "lnAlarmTextArg2"))
lnAlarmClearAll = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,50))
lnAlarmClearServers = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,51)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"))
lnSignalAutodiscoveryStart = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,52))
lnSignalAutodiscoveryFinished = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,53))
lnSignalServerConfigChg = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,54)).setObjects(("NOTES-MIB", "lnSignalServerId"), ("NOTES-MIB", "lnSignalOldServerType"), ("NOTES-MIB", "lnSignalNewServerType"), ("NOTES-MIB", "lnSignalWhatHasChanged"))
lnTrapRequestMostSevereStatus = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,55)).setObjects(("NOTES-MIB", "lnAlarmServerHandle"))
lnTrapDisplayAlarmClearServers = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,60)).setObjects(("NOTES-MIB", "lnSignalServerId"), ("NOTES-MIB", "lnSignalServerName"))
lnTrapDisplayClearedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,70)).setObjects(("NOTES-MIB", "lnAlarmSeverityStr"), ("NOTES-MIB", "lnAlarmTypeStr"), ("NOTES-MIB", "lnAlarmMessage"), ("NOTES-MIB", "lnAlarmMessageExt"))
lnTrapDisplayIndeterminateAlarm = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,71)).setObjects(("NOTES-MIB", "lnAlarmSeverityStr"), ("NOTES-MIB", "lnAlarmTypeStr"), ("NOTES-MIB", "lnAlarmMessage"), ("NOTES-MIB", "lnAlarmMessageExt"))
lnTrapDisplayWarningAlarm = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,72)).setObjects(("NOTES-MIB", "lnAlarmSeverityStr"), ("NOTES-MIB", "lnAlarmTypeStr"), ("NOTES-MIB", "lnAlarmMessage"), ("NOTES-MIB", "lnAlarmMessageExt"))
lnTrapDisplayMinorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,73)).setObjects(("NOTES-MIB", "lnAlarmSeverityStr"), ("NOTES-MIB", "lnAlarmTypeStr"), ("NOTES-MIB", "lnAlarmMessage"), ("NOTES-MIB", "lnAlarmMessageExt"))
lnTrapDisplayCriticalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,74)).setObjects(("NOTES-MIB", "lnAlarmSeverityStr"), ("NOTES-MIB", "lnAlarmTypeStr"), ("NOTES-MIB", "lnAlarmMessage"), ("NOTES-MIB", "lnAlarmMessageExt"))
lnTrapDisplayMajorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 334, 72) + (0,75)).setObjects(("NOTES-MIB", "lnAlarmSeverityStr"), ("NOTES-MIB", "lnAlarmTypeStr"), ("NOTES-MIB", "lnAlarmMessage"), ("NOTES-MIB", "lnAlarmMessageExt"))
mibBuilder.exportSymbols("NOTES-MIB", lnMailDeliveries=lnMailDeliveries, lnClusterTable=lnClusterTable, lnDominoConfig=lnDominoConfig, lnObjectName=lnObjectName, lnDominoCfgHomeURL=lnDominoCfgHomeURL, lnMailIMAPCacheMsgInsertAttempts=lnMailIMAPCacheMsgInsertAttempts, lnNNTPServerArticlesPosted=lnNNTPServerArticlesPosted, lnX25VCInUse=lnX25VCInUse, lnServerUsersEntry=lnServerUsersEntry, lnMTAWaitingMsgs=lnMTAWaitingMsgs, lnDailyAccessDenials=lnDailyAccessDenials, lnWebMaxProcesses=lnWebMaxProcesses, lnAlarmTargetHandle=lnAlarmTargetHandle, lnDiskRemote=lnDiskRemote, lnLDAPSessionsInboundSSLBadHandshake=lnLDAPSessionsInboundSSLBadHandshake, lnServerDataPath=lnServerDataPath, lnMailByDestEntry=lnMailByDestEntry, lnLDAPSessionsInboundTotal=lnLDAPSessionsInboundTotal, lnQSBuildNumber=lnQSBuildNumber, lnDominoCfgSSLPortNumber=lnDominoCfgSSLPortNumber, lnObjectSharedBy07=lnObjectSharedBy07, lnDominoCfgActiveThreadsMin=lnDominoCfgActiveThreadsMin, lnIMAPSessionsTotal=lnIMAPSessionsTotal, lnObjectSharedByGreater=lnObjectSharedByGreater, lnServerUsers5MinPeak=lnServerUsers5MinPeak, lnNNTPSessionsInboundTotal=lnNNTPSessionsInboundTotal, lnServerTask=lnServerTask, lnPOP3SessionsTotal=lnPOP3SessionsTotal, lnWarning2EventTrap=lnWarning2EventTrap, lnDominoThreadsTotal=lnDominoThreadsTotal, lnFTSearchTotalResults=lnFTSearchTotalResults, lnServerName=lnServerName, lnReporterTimeElapsed=lnReporterTimeElapsed, lnNETLogUnwrittenEntries=lnNETLogUnwrittenEntries, lnMaximumMailDeliverTime=lnMaximumMailDeliverTime, lnObjectSharedBy06=lnObjectSharedBy06, lnAgentMgr=lnAgentMgr, lnNetLogEntry=lnNetLogEntry, lnUnknownEventTrap=lnUnknownEventTrap, lnClusterFailoverByPathSucc=lnClusterFailoverByPathSucc, lnCalTotalAllUsersResources=lnCalTotalAllUsersResources, lnServerTable=lnServerTable, lnDominoCfgDirectoryHTML=lnDominoCfgDirectoryHTML, lnRepClusterFilesRemote=lnRepClusterFilesRemote, lnWebRetrieverProcessBytesSent=lnWebRetrieverProcessBytesSent, lnSMTPCount=lnSMTPCount, lnWebProcUrlFail=lnWebProcUrlFail, lnMemAllocTotal=lnMemAllocTotal, lnClusterTableIndex=lnClusterTableIndex, lnServerUsersPeak=lnServerUsersPeak, lnNetPortSessRecycling=lnNetPortSessRecycling, lnXPCMsgsReceived=lnXPCMsgsReceived, lnServerBootID=lnServerBootID, lnDominoCfgLogError=lnDominoCfgLogError, lnWebIdleProcesses=lnWebIdleProcesses, lnFTSearchTotalTimeMS=lnFTSearchTotalTimeMS, lnDominoCacheCommandHitRate=lnDominoCacheCommandHitRate, lnDominoCfgActiveThreadsMax=lnDominoCfgActiveThreadsMax, lnSpinMaxDelayMask=lnSpinMaxDelayMask, lnDominoCmdInfoOpenServer=lnDominoCmdInfoOpenServer, lnWebKBytesSent=lnWebKBytesSent, lnDominoReqPerDayTotal=lnDominoReqPerDayTotal, lnNNTPServerTable=lnNNTPServerTable, lnStatisticString=lnStatisticString, lnDBNIFPoolPeak=lnDBNIFPoolPeak, lnWebRetrieverProcessAccessHTTP=lnWebRetrieverProcessAccessHTTP, lnMailByDestDelivered=lnMailByDestDelivered, lnXPCIndex=lnXPCIndex, lnX25REJRcv=lnX25REJRcv, lnFTSearchCount=lnFTSearchCount, lnWebProcCacheHits=lnWebProcCacheHits, lnServerNowRespondingTrap=lnServerNowRespondingTrap, lnRepClusterSecondsOnQueue=lnRepClusterSecondsOnQueue, lnWebRetrieverVersion=lnWebRetrieverVersion, lnSMTPMax=lnSMTPMax, lnTrapRequestMostSevereStatus=lnTrapRequestMostSevereStatus, lnTaskIndex=lnTaskIndex, lnWebUrlFail=lnWebUrlFail, lnDailyTriggeredRuns=lnDailyTriggeredRuns, lnNNTPSessionsOutgoingSSL=lnNNTPSessionsOutgoingSSL, lnFTDomainIndexTotalTimeMS=lnFTDomainIndexTotalTimeMS, lnNNTPSessionsOutgoingnonSSL=lnNNTPSessionsOutgoingnonSSL, lnNBMajVersion=lnNBMajVersion, lnNetPortKBytesSent=lnNetPortKBytesSent, lnObjectSharedBy04=lnObjectSharedBy04, lnMailIMAPFindCacheAttempted=lnMailIMAPFindCacheAttempted, lnXPCCarrierSpeed=lnXPCCarrierSpeed, lnQOSMailProbeEntry=lnQOSMailProbeEntry, lnServerNotesVersion=lnServerNotesVersion, lnIMAP=lnIMAP, lnNNTPSessionsInboundNonSSL=lnNNTPSessionsInboundNonSSL, lnPOP3SessionsActive=lnPOP3SessionsActive, lnLDAPSessionsActive=lnLDAPSessionsActive, lnTransferredMail=lnTransferredMail, lnNetPortSessRecycled=lnNetPortSessRecycled, lnReporter=lnReporter, lnICMCommandRedirectsSuccessful=lnICMCommandRedirectsSuccessful, lnMaximumMailSizeDelivered=lnMaximumMailSizeDelivered, lnDBCacheHighWaterMark=lnDBCacheHighWaterMark, lnMailIMAPNumMsgInsertedInCache=lnMailIMAPNumMsgInsertedInCache, lnNBMaxSessions=lnNBMaxSessions, lnWebAccessFtp=lnWebAccessFtp, lnClusterProbeError=lnClusterProbeError, lnDominoCmdInfoLogin=lnDominoCmdInfoLogin, lnRepClusterFailed=lnRepClusterFailed, lnTotalPartitions=lnTotalPartitions, lnTotalRoutedMail=lnTotalRoutedMail, lnSMTPSessionsInboundBytesSent=lnSMTPSessionsInboundBytesSent, lnCalTotalAllApptsResources=lnCalTotalAllApptsResources, lnXPCPort=lnXPCPort, lnReplicaCluster=lnReplicaCluster, lnWebActiveProcesses=lnWebActiveProcesses, notes=notes, lnDriveLetter=lnDriveLetter, lnSNAActiveSessions=lnSNAActiveSessions, lnServerTblState=lnServerTblState, lnWebVpoolMaxUrl=lnWebVpoolMaxUrl, lnDominoCmdInfoCreateDocument=lnDominoCmdInfoCreateDocument, lnDatabase=lnDatabase, lnDominoCfgHostName=lnDominoCfgHostName, lnClusterLoadBalSucc=lnClusterLoadBalSucc, lnXPCEntry=lnXPCEntry, lnServerUserSessionID=lnServerUserSessionID, lnDBBufferPoolPercentReadsInBuffer=lnDBBufferPoolPercentReadsInBuffer, lnWebProcVpoolMaxBuf=lnWebProcVpoolMaxBuf, lnMemAllocShared=lnMemAllocShared, lnLDAPSessionsInboundSSL=lnLDAPSessionsInboundSSL, lnNetPortName=lnNetPortName, lnSMTPSessionsTotal=lnSMTPSessionsTotal, lnX25OverRuns=lnX25OverRuns, lnWebImageCacheHits=lnWebImageCacheHits, lnMemPhysicalRAM=lnMemPhysicalRAM, lnFTSearchMaxActualHits=lnFTSearchMaxActualHits, lnMailTotalRoutedSMTP=lnMailTotalRoutedSMTP, lnEvtType=lnEvtType, lnIMAPSessionsThreadsBusy=lnIMAPSessionsThreadsBusy, lnLDAPSessionsThreadsIdle=lnLDAPSessionsThreadsIdle, lnServerUsers=lnServerUsers, lnPOP3UserCacheOpenReasonNewEntry=lnPOP3UserCacheOpenReasonNewEntry, lnServerTblName=lnServerTblName, lnSignalOldServerType=lnSignalOldServerType, lnDominoThreadsPeakTotal=lnDominoThreadsPeakTotal, lnRepClusterSecondsOnQueueAvg=lnRepClusterSecondsOnQueueAvg, lnDominoCmdInfoOpenNavigator=lnDominoCmdInfoOpenNavigator, lnMailTransferFailures=lnMailTransferFailures, lnNumClosedOldSessions=lnNumClosedOldSessions, lnSNAMaxSessions=lnSNAMaxSessions, lnDominoCfgDirectoryCGI=lnDominoCfgDirectoryCGI, lnXPCActiveSessions=lnXPCActiveSessions, lnDominoCfgTimeoutInput=lnDominoCfgTimeoutInput, lnMTATotalKBTransferred=lnMTATotalKBTransferred, lnOpenRequest=lnOpenRequest, lnRepFailed=lnRepFailed, lnNNTPSessionsThreadsIdle=lnNNTPSessionsThreadsIdle, lnRepClusterWorkQueueDepthAvg=lnRepClusterWorkQueueDepthAvg, lnX25UnderRuns=lnX25UnderRuns, lnWebProcVpoolMaxText=lnWebProcVpoolMaxText, lnNBAlignmentErrors=lnNBAlignmentErrors, lnIMAPSessionsPeak=lnIMAPSessionsPeak, lnNNTPServerPushArticlesFailed=lnNNTPServerPushArticlesFailed, lnWebVpoolMaxElement=lnWebVpoolMaxElement, lnMonitorWarningHigh=lnMonitorWarningHigh, lnPOP3SessionsInboundSSLBadHandshake=lnPOP3SessionsInboundSSLBadHandshake, lnServerTblDataDir=lnServerTblDataDir, lnObjectSharedBy08=lnObjectSharedBy08, lnSystemRebootingTrap=lnSystemRebootingTrap, lnTrapInfo=lnTrapInfo, lnAverageMailServerHops=lnAverageMailServerHops, lnDailyUsedRunTime=lnDailyUsedRunTime, lnMailByDestIndex=lnMailByDestIndex, lnRepClusterSecondsOnQueueMax=lnRepClusterSecondsOnQueueMax, lnServerLocation=lnServerLocation, lnClusterTransIntInSec=lnClusterTransIntInSec, lnFTDomainIndexDocumentsDeleted=lnFTDomainIndexDocumentsDeleted, lnPOP3SessionsInboundBytesReceived=lnPOP3SessionsInboundBytesReceived, lnDominoReqPerMinTotal=lnDominoReqPerMinTotal, lnObjectSharedBy13=lnObjectSharedBy13, lnSpinFRWSemPutReadExt=lnSpinFRWSemPutReadExt, lnClusterFailoverByPathUnsucc=lnClusterFailoverByPathUnsucc, lnServerCPUType=lnServerCPUType, lnWebProcVpoolCurText=lnWebProcVpoolCurText, lnDominoCfgGarbageCollectionStatus=lnDominoCfgGarbageCollectionStatus, lnSMTPSessionsInboundTotal=lnSMTPSessionsInboundTotal, lnWebProcUrlReq=lnWebProcUrlReq, lnDeliveredMail=lnDeliveredMail, lnClusterTransNormValue=lnClusterTransNormValue, lnClusterTransLastIntAvgTime=lnClusterTransLastIntAvgTime, lnDominoCfgSSLKeyFile=lnDominoCfgSSLKeyFile, lnClusterProbeCount=lnClusterProbeCount, lnDominoCfgTimeoutIdleThread=lnDominoCfgTimeoutIdleThread, lnEvtSeq=lnEvtSeq, lnQOSMailProbeIndex=lnQOSMailProbeIndex, lnRouterStatus=lnRouterStatus, lnServerCoprocessor=lnServerCoprocessor, lnDominoCfgPortStatus=lnDominoCfgPortStatus, lnNNTPServerPullArticlesOffered=lnNNTPServerPullArticlesOffered, lnNNTPServerPullArticlesFailed=lnNNTPServerPullArticlesFailed, lnICMCommandRedirectsUnsuccessful=lnICMCommandRedirectsUnsuccessful, lnHourlyTriggeredRuns=lnHourlyTriggeredRuns, lnClusterTransIntUsedInAvg=lnClusterTransIntUsedInAvg, lnDominoCmdInfoReadForm=lnDominoCmdInfoReadForm, lnClusterName=lnClusterName, lnDominoCmdInfoNavigate=lnDominoCmdInfoNavigate, lnFT=lnFT, lnDominoCfgTimeoutCGI=lnDominoCfgTimeoutCGI, lnDominoCfgDirectoryIcons=lnDominoCfgDirectoryIcons, lnObjectSharedBy01=lnObjectSharedBy01, lnDBBufferPoolMaximum=lnDBBufferPoolMaximum, lnSNASendPacingSize=lnSNASendPacingSize, lnServer=lnServer, lnWebProcVpoolMaxUrl=lnWebProcVpoolMaxUrl, lnIMAPSessionsInboundNonSSL=lnIMAPSessionsInboundNonSSL, lnNetPortSessLimitMax=lnNetPortSessLimitMax, lnFTIndexBytesPerHour=lnFTIndexBytesPerHour, lnSignal=lnSignal, lnNNTPServerPullArticlesRequested=lnNNTPServerPullArticlesRequested, lnWebRetrieverProcessURLsFailed=lnWebRetrieverProcessURLsFailed, lnDominoRequestsTotal=lnDominoRequestsTotal, lnServerBusyTimeQueryReceivedCount=lnServerBusyTimeQueryReceivedCount, lnDominoReqPer5MinsPeak=lnDominoReqPer5MinsPeak, lnNetPortIndex=lnNetPortIndex, lnDriveEntry=lnDriveEntry, lnWebRetrieverProcessProcessID=lnWebRetrieverProcessProcessID, lnAlarmIntArg=lnAlarmIntArg, lnNBAvailCmdBlocks=lnNBAvailCmdBlocks, lnMemSwapSize=lnMemSwapSize, lnServerOpenReqV4Client=lnServerOpenReqV4Client, lnObjectSharedBy05=lnObjectSharedBy05, lnSMTPSessionsThreadsBusy=lnSMTPSessionsThreadsBusy, lnEvtWhen=lnEvtWhen, lnFatalEventTrap=lnFatalEventTrap, lnRepClusterRetryWaiting=lnRepClusterRetryWaiting, lnNBTotalCmdBlocks=lnNBTotalCmdBlocks, lnLDAPSessionsPeak=lnLDAPSessionsPeak, lnStatisticIndex=lnStatisticIndex, lnObjectSharedBy19=lnObjectSharedBy19, lnAlarmPortStatusChange=lnAlarmPortStatusChange, lnServerOS=lnServerOS, lnSMTPSessionsInboundNonSSL=lnSMTPSessionsInboundNonSSL, lnNNTPSessionsPeak=lnNNTPSessionsPeak, lnPOP3SessionsInboundNonSSL=lnPOP3SessionsInboundNonSSL, lnNNTPPullArticlesOffered=lnNNTPPullArticlesOffered, lnStats=lnStats, lnRepDocsDeleted=lnRepDocsDeleted, lnNetbiosTable=lnNetbiosTable, lnDominoBuildNumber=lnDominoBuildNumber, lnPOP3SessionsPeak=lnPOP3SessionsPeak, lnRecentTrapsTable=lnRecentTrapsTable, lnTrapDisplayWarningAlarm=lnTrapDisplayWarningAlarm, lnDominoBuildName=lnDominoBuildName, lnAlarmTime=lnAlarmTime, lnMPAIniFileLocation=lnMPAIniFileLocation, lnMailPeakByteTransferRate=lnMailPeakByteTransferRate, lnNNTPBytesReceived=lnNNTPBytesReceived)
mibBuilder.exportSymbols("NOTES-MIB", lnDominoReqPerMinPeak=lnDominoReqPerMinPeak, lnFTSearchAverageTimeMS=lnFTSearchAverageTimeMS, lnFTDomainSearchMaxActualHits=lnFTDomainSearchMaxActualHits, lnServerTimeStart=lnServerTimeStart, lnServerPulseFailedTrap=lnServerPulseFailedTrap, lnWebLogMessages=lnWebLogMessages, lnNNTPServerArticlesSent=lnNNTPServerArticlesSent, lnServerNotRespondingTrap=lnServerNotRespondingTrap, lnXPCCRCErrors=lnXPCCRCErrors, lnWebTimeStart=lnWebTimeStart, lnMTAIndex=lnMTAIndex, lnDeadMail=lnDeadMail, lnWebAccessGopher=lnWebAccessGopher, lnSMTPStatTable=lnSMTPStatTable, lnServerTransTotal=lnServerTransTotal, lnClusterLoadBalByPathUnsucc=lnClusterLoadBalByPathUnsucc, lnPOP3UserCacheHits=lnPOP3UserCacheHits, lnNBPacketSize=lnNBPacketSize, lnSNAVersion=lnSNAVersion, lnDominoStartTime=lnDominoStartTime, lnServerStats=lnServerStats, lnDominoCacheCommandDisplaceRate=lnDominoCacheCommandDisplaceRate, lnFTIndexCount=lnFTIndexCount, lnDominoCfgGarbageCollectionInterval=lnDominoCfgGarbageCollectionInterval, lnServerUpTrap=lnServerUpTrap, lnServerCPUCount=lnServerCPUCount, lnXPCPortSpeed=lnXPCPortSpeed, lnWebRetrieverProcessAccessFTP=lnWebRetrieverProcessAccessFTP, lnObject=lnObject, lnClusterLoadBalByPathSucc=lnClusterLoadBalByPathSucc, lnWebVpoolMaxText=lnWebVpoolMaxText, lnMinimumMailSizeDelivered=lnMinimumMailSizeDelivered, lnMailWaitingforDNS=lnMailWaitingforDNS, lnRepClusterFilesLocal=lnRepClusterFilesLocal, lnMailPeakMessageTranferRateTime=lnMailPeakMessageTranferRateTime, lnDominoCfgDirectoryURLPathIcons=lnDominoCfgDirectoryURLPathIcons, lnDominoCfgDirectoryURLPathCGI=lnDominoCfgDirectoryURLPathCGI, lnMailDomain=lnMailDomain, lnNetPortSessLimit=lnNetPortSessLimit, lnEvtServer=lnEvtServer, lnWebTimeDuration=lnWebTimeDuration, lnAlarmDoubleArg=lnAlarmDoubleArg, lnCalTotalAppointments=lnCalTotalAppointments, lnAlarmMessageExt=lnAlarmMessageExt, lnDBCacheLookups=lnDBCacheLookups, lnSignalWhatHasChanged=lnSignalWhatHasChanged, lnCollectorTimeCollected=lnCollectorTimeCollected, lnServerUsersPeakTime=lnServerUsersPeakTime, lnDBBufferControlPoolUsed=lnDBBufferControlPoolUsed, lnServerIdentifiedItself=lnServerIdentifiedItself, lnXPCRetransmissions=lnXPCRetransmissions, lnWebRetrieverProcessURLsRequested=lnWebRetrieverProcessURLsRequested, lnNBUnitNumber=lnNBUnitNumber, lnServerTblSetState=lnServerTblSetState, lnWebUrlRequested=lnWebUrlRequested, lnNetPortSessLimitMin=lnNetPortSessLimitMin, lnDominoCmdInfoOpenForm=lnDominoCmdInfoOpenForm, lnMonitorHeartbeat=lnMonitorHeartbeat, lnServerUsers1MinPeakTime=lnServerUsers1MinPeakTime, lnWebAccessHttp=lnWebAccessHttp, lnSignalNewServerType=lnSignalNewServerType, lnServerRS232Ports=lnServerRS232Ports, lnClusterOpenReqLoadBalanced=lnClusterOpenReqLoadBalanced, lnReplicatorStatus=lnReplicatorStatus, lnDominoReqPerHourPeak=lnDominoReqPerHourPeak, lnFTDomainIndexTotalBytes=lnFTDomainIndexTotalBytes, lnPOP3UserCacheLookups=lnPOP3UserCacheLookups, lnSpinMaxDelayMsecs=lnSpinMaxDelayMsecs, lnX25PktSize=lnX25PktSize, lnMonitorTable=lnMonitorTable, lnObjectSharedBy20=lnObjectSharedBy20, lnNNTPServerBytesSent=lnNNTPServerBytesSent, lnNNTPSessionsInboundBytesReceived=lnNNTPSessionsInboundBytesReceived, lnObjectSharedBy14=lnObjectSharedBy14, lnQOSMailProbeName=lnQOSMailProbeName, lnWebProcVpoolCurUrl=lnWebProcVpoolCurUrl, lnDominoReqPer5MinsTotal=lnDominoReqPer5MinsTotal, lnRepClusterSuccessful=lnRepClusterSuccessful, lnNMMinVersion=lnNMMinVersion, lnICMCommandRedirectsClusterBusy=lnICMCommandRedirectsClusterBusy, lnNumWaitingRecipients=lnNumWaitingRecipients, lnNBIndex=lnNBIndex, lnStatsCurrentTime=lnStatsCurrentTime, lnObjectEntry=lnObjectEntry, lnObjectSharedBy03=lnObjectSharedBy03, lnDominoBuildVersion=lnDominoBuildVersion, lnNNTPServerName=lnNNTPServerName, lnDailyUnsuccessfulRuns=lnDailyUnsuccessfulRuns, lnDominoCfgLogFilter=lnDominoCfgLogFilter, lnNNTPServerPushArticlesRequested=lnNNTPServerPushArticlesRequested, lnDBCacheInitialDbOpens=lnDBCacheInitialDbOpens, lnFTDomainSearchCount=lnFTDomainSearchCount, lnNNTPPullArticlesFailed=lnNNTPPullArticlesFailed, lnSNATPType=lnSNATPType, lnAlarmClearServers=lnAlarmClearServers, lnFTIndexTotalBytes=lnFTIndexTotalBytes, lnDailyScheduledRuns=lnDailyScheduledRuns, lnDominoCmdInfoSaveDocument=lnDominoCmdInfoSaveDocument, lnNBSentPackets=lnNBSentPackets, lnTotalKBTransferred=lnTotalKBTransferred, lnMemFree=lnMemFree, lnSpinDelays=lnSpinDelays, lnNNTPSessionsInboundSSL=lnNNTPSessionsInboundSSL, lnClusterTransIntervalInMinutes=lnClusterTransIntervalInMinutes, lnDominoCmdInfoEditDocument=lnDominoCmdInfoEditDocument, lnDominoCfgCacheDelete=lnDominoCfgCacheDelete, lnNotesServerSetState=lnNotesServerSetState, lnDominoCfgSSLStatus=lnDominoCfgSSLStatus, lnPOP3SessionsThreadsIdle=lnPOP3SessionsThreadsIdle, lnDBBufferControlPoolPeak=lnDBBufferControlPoolPeak, lnIMAPSessionsInboundSSL=lnIMAPSessionsInboundSSL, lnNNTPSessionsActive=lnNNTPSessionsActive, lnClusterTransIntAvgTime=lnClusterTransIntAvgTime, lnDBBufferPoolUsed=lnDBBufferPoolUsed, lnServerAdministrators=lnServerAdministrators, lnNBReceivedPackets=lnNBReceivedPackets, lnX25CRCErrors=lnX25CRCErrors, lnFTIndexTotalTimeMS=lnFTIndexTotalTimeMS, lnDominoReqPerHourTotal=lnDominoReqPerHourTotal, lnNBCRCErrors=lnNBCRCErrors, lnX25WindowSize=lnX25WindowSize, lnServerTblNotesPartition=lnServerTblNotesPartition, lnAlarm=lnAlarm, lnXPCStatus=lnXPCStatus, lnServerPoweredBy=lnServerPoweredBy, lnDriveIndex=lnDriveIndex, lnReplica=lnReplica, lnServerUsers1MinPeak=lnServerUsers1MinPeak, lnWebProcPid=lnWebProcPid, lnDBCacheHits=lnDBCacheHits, lnMTADeadMsgs=lnMTADeadMsgs, lnAlarmNVStatClear=lnAlarmNVStatClear, lnClusterAvailIndex=lnClusterAvailIndex, lnDominoCfgImageInterlaced=lnDominoCfgImageInterlaced, lnRepClusterRetrySkipped=lnRepClusterRetrySkipped, lnClusterTrans=lnClusterTrans, lnMTATransferFailures=lnMTATransferFailures, lnWarning1EventTrap=lnWarning1EventTrap, lnPOP3SessionsInboundBytesSent=lnPOP3SessionsInboundBytesSent, lnSNALocalLU=lnSNALocalLU, lnRepSuccessful=lnRepSuccessful, lnMailByDest=lnMailByDest, lnSNAMaxRcvRUSize=lnSNAMaxRcvRUSize, lnDBBufferPoolAllocated=lnDBBufferPoolAllocated, lnDBExtMgrPoolUsed=lnDBExtMgrPoolUsed, lnDominoCmdInfoDeleteDocument=lnDominoCmdInfoDeleteDocument, lnDominoCmdInfoSearchView=lnDominoCmdInfoSearchView, lnXPCPortErrors=lnXPCPortErrors, lnNetLogIndex=lnNetLogIndex, lnWebUrlSucceeded=lnWebUrlSucceeded, lnWeb=lnWeb, lnRepClusterSessionBytesOut=lnRepClusterSessionBytesOut, lnObjectSharedBy02=lnObjectSharedBy02, lnNNTPPushArticlesOffered=lnNNTPPushArticlesOffered, lnFTIndexDocumentsAdded=lnFTIndexDocumentsAdded, lnDBNSFPoolSize=lnDBNSFPoolSize, lnWebVpoolMaxBuf=lnWebVpoolMaxBuf, lnWebProcKBytesSent=lnWebProcKBytesSent, lnDominoThreadsPeakTime=lnDominoThreadsPeakTime, lnPOP3SessionsAcceptQueue=lnPOP3SessionsAcceptQueue, lnDBBufferPoolReads=lnDBBufferPoolReads, lnMonitorFatal=lnMonitorFatal, lnSpinFRWSemGetReadExt=lnSpinFRWSemGetReadExt, lnLastTrapSeq=lnLastTrapSeq, lnIMAPSessionsActive=lnIMAPSessionsActive, lnWebRetrieverProcessBytesReceived=lnWebRetrieverProcessBytesReceived, lnRepDocsUpdated=lnRepDocsUpdated, lnServerUsersIndex=lnServerUsersIndex, lnClusterProbeTimeout=lnClusterProbeTimeout, lnFTSearchTotalActualHits=lnFTSearchTotalActualHits, lnXPCTable=lnXPCTable, lnICMRequestsPer5MinutesTotal=lnICMRequestsPer5MinutesTotal, lnX25RemoteResets=lnX25RemoteResets, lnQOS=lnQOS, lnClusterLoadBalUnsucc=lnClusterLoadBalUnsucc, lnNNTPServerEntry=lnNNTPServerEntry, lnMailByDestTotalRouted=lnMailByDestTotalRouted, lnDBNIFPoolSize=lnDBNIFPoolSize, lnAlarmServerCfgChangeEvent=lnAlarmServerCfgChangeEvent, lnAlarmTypeStr=lnAlarmTypeStr, lnICMReceiveError=lnICMReceiveError, lnSMTPMessagesProcessed=lnSMTPMessagesProcessed, lnSpinHits=lnSpinHits, lnQOSMailISpyProbeError=lnQOSMailISpyProbeError, lnWebProcVpoolCurElement=lnWebProcVpoolCurElement, lnWebProcUrlSucc=lnWebProcUrlSucc, lnAverageMailDeliverTime=lnAverageMailDeliverTime, notesPump=notesPump, lnServerOpenReqPreV4Client=lnServerOpenReqPreV4Client, lnRemoteReboot=lnRemoteReboot, lnWebProcAccHttp=lnWebProcAccHttp, lnNNTPPullArticlesRequested=lnNNTPPullArticlesRequested, lnMailTotalRouterNRPC=lnMailTotalRouterNRPC, lnServerTransPerMin=lnServerTransPerMin, lnLDAPSessionsTotal=lnLDAPSessionsTotal, lnNBReportPeriod=lnNBReportPeriod, lnQOSMailProbeTable=lnQOSMailProbeTable, lnSMTPStatIndex=lnSMTPStatIndex, lnAlarmServerStatusChange=lnAlarmServerStatusChange, lnDiskFixed=lnDiskFixed, lnClusterFailoverSucc=lnClusterFailoverSucc, lnIMAPSessionsInboundBytesReceived=lnIMAPSessionsInboundBytesReceived, lnDominoCfgImageFormat=lnDominoCfgImageFormat, lnNetLogTable=lnNetLogTable, lnDBBufferPoolWrites=lnDBBufferPoolWrites, lnWaitingMail=lnWaitingMail, lnTaskData=lnTaskData, lnMonitorFailure=lnMonitorFailure, lnAlarmServerSNMPEvent=lnAlarmServerSNMPEvent, lnPOP3UserCacheOpenReasonDBChanged=lnPOP3UserCacheOpenReasonDBChanged, lnSMTPSessionsAcceptQueue=lnSMTPSessionsAcceptQueue, lnSMTPSessionsInboundSSLBadHandshake=lnSMTPSessionsInboundSSLBadHandshake, lnNetbiosEntry=lnNetbiosEntry, lnWebRetrieverProcessAccessGopher=lnWebRetrieverProcessAccessGopher, lnX25VCCfg=lnX25VCCfg, lnDBCacheCurrentEntries=lnDBCacheCurrentEntries, lnMIBVersion=lnMIBVersion, lnObjectIndex=lnObjectIndex, lnNNTPSessionsInboundSSLBadHandshake=lnNNTPSessionsInboundSSLBadHandshake, lnNNTPServerPullArticlesTransferred=lnNNTPServerPullArticlesTransferred, lnObjectTable=lnObjectTable, lnNotesServerState=lnNotesServerState, lnWebProcIndex=lnWebProcIndex, lnRepClusterWorkQueueDepth=lnRepClusterWorkQueueDepth, lnServerOpenReqMaxUsers=lnServerOpenReqMaxUsers, lnDisk=lnDisk, lnSNARcvPacingSize=lnSNARcvPacingSize, lnServerWorkThreads=lnServerWorkThreads, lnSignalServerConfigChg=lnSignalServerConfigChg, lnMailPeakMessagesTransferred=lnMailPeakMessagesTransferred, lnSMTPSessionsPeak=lnSMTPSessionsPeak, lnSpin=lnSpin, lnSNARemoteLU=lnSNARemoteLU, lnICMSessionsThreadsBusy=lnICMSessionsThreadsBusy, lnSem=lnSem, lnHourlyScheduledRuns=lnHourlyScheduledRuns, lnWebTimeCurrent=lnWebTimeCurrent, lnDominoCacheDatabaseDisplaceRate=lnDominoCacheDatabaseDisplaceRate, lnNNTPSessionsThreadsBusy=lnNNTPSessionsThreadsBusy, lnWebProcEntry=lnWebProcEntry, lnSNAMaxSendRUSize=lnSNAMaxSendRUSize, lnDBBufferPoolPeak=lnDBBufferPoolPeak, lnIMAPSessionsInboundBytesSent=lnIMAPSessionsInboundBytesSent, lnICMRequestsPer1MinuteTotal=lnICMRequestsPer1MinuteTotal, lnWebProcVpoolMaxElement=lnWebProcVpoolMaxElement, lnIMAPSessionsAcceptQueue=lnIMAPSessionsAcceptQueue, lnCalendar=lnCalendar, lnSMTPAve=lnSMTPAve, lnReporterTimeAnalysis=lnReporterTimeAnalysis, lnNNTPSessionsInboundBytesSent=lnNNTPSessionsInboundBytesSent, lnWebProcessState=lnWebProcessState, lnDominoReqPerHourPeakTime=lnDominoReqPerHourPeakTime, lnIMAPSessionsThreadsIdle=lnIMAPSessionsThreadsIdle, lnAlarmMessage=lnAlarmMessage)
mibBuilder.exportSymbols("NOTES-MIB", lnDominoCfgDNSLookup=lnDominoCfgDNSLookup, lnMailTotalPending=lnMailTotalPending, lnSMTPStatName=lnSMTPStatName, lnTrapDisplayMajorAlarm=lnTrapDisplayMajorAlarm, lnLDAPSessionsInboundBytesReceived=lnLDAPSessionsInboundBytesReceived, lnNNTPSessionsAcceptQueue=lnNNTPSessionsAcceptQueue, lnNBPort=lnNBPort, lnTaskTable=lnTaskTable, lnDominoCmdInfoOpenDatabase=lnDominoCmdInfoOpenDatabase, lnDBNSFPoolPeak=lnDBNSFPoolPeak, lnPOP3=lnPOP3, lotus=lotus, lnAlarmAutoDiscovery=lnAlarmAutoDiscovery, lnComm=lnComm, lnCalTotalUsers=lnCalTotalUsers, lnNNTPPushArticlesFailed=lnNNTPPushArticlesFailed, lnMailIMAPNumCacheHits=lnMailIMAPNumCacheHits, lnMaximumMailServerHops=lnMaximumMailServerHops, lnNNTPServerIndex=lnNNTPServerIndex, lnObjectSharedBy10=lnObjectSharedBy10, mpaInfo=mpaInfo, lnLDAPSessionsInboundBytesSent=lnLDAPSessionsInboundBytesSent, lnAlarmNSFRemoteConsoleEvent=lnAlarmNSFRemoteConsoleEvent, lnObjectFileName=lnObjectFileName, lnRepClusterSessionBytesIn=lnRepClusterSessionBytesIn, lnLDAPSessionsAcceptQueue=lnLDAPSessionsAcceptQueue, lnICM=lnICM, lnServerMonitorStart=lnServerMonitorStart, lnPOP3UserCacheOpenReasonCacheFull=lnPOP3UserCacheOpenReasonCacheFull, lnNBInUseSessions=lnNBInUseSessions, lnWebRetrieverLogLevel=lnWebRetrieverLogLevel, lnAlarmServerHandle=lnAlarmServerHandle, lnMailPeakTotalBytesTransferred=lnMailPeakTotalBytesTransferred, lnAlarmServerName=lnAlarmServerName, lnICMRequestsPer1HourTotal=lnICMRequestsPer1HourTotal, lnObjectSharedBy11=lnObjectSharedBy11, lnNNTPArticlesPosted=lnNNTPArticlesPosted, lnNNTPPushArticlesRequested=lnNNTPPushArticlesRequested, lnTaskName=lnTaskName, lnDominoReqPerDayPeakTime=lnDominoReqPerDayPeakTime, lnDBNSFFreeHandleStackAllocations=lnDBNSFFreeHandleStackAllocations, lnWebProcKBytesRec=lnWebProcKBytesRec, lnMailByDestName=lnMailByDestName, lnWebProcNumber=lnWebProcNumber, lnLDAPSessionsInboundNonSSL=lnLDAPSessionsInboundNonSSL, lnClusterTransRunningTime=lnClusterTransRunningTime, lnTrapDisplayMinorAlarm=lnTrapDisplayMinorAlarm, lnPOP3UserCacheAttempts=lnPOP3UserCacheAttempts, lnDriveFree=lnDriveFree, lnMTAEntry=lnMTAEntry, lnSEMTimeouts=lnSEMTimeouts, lnAlarmStatisticThreshold=lnAlarmStatisticThreshold, lnTrapSeq=lnTrapSeq, lnDominoCmdInfoTotal=lnDominoCmdInfoTotal, lnClusterTransRunningCount=lnClusterTransRunningCount, lnFailureEventTrap=lnFailureEventTrap, lnICMSessionsTotal=lnICMSessionsTotal, lnNetPortTable=lnNetPortTable, lnSMTPSessionsInboundSSL=lnSMTPSessionsInboundSSL, lnMinimumMailServerHops=lnMinimumMailServerHops, lnRecentTrapsEntry=lnRecentTrapsEntry, lnTaskEntry=lnTaskEntry, lnUnix=lnUnix, lnAlarmTaskStatusChange=lnAlarmTaskStatusChange, lnCalTotalResources=lnCalTotalResources, lnICMSessionsThreadsIdle=lnICMSessionsThreadsIdle, lnServerDescription=lnServerDescription, lnServerBusyTimeQueryRetObjSched=lnServerBusyTimeQueryRetObjSched, lnObjectSharedByTotal=lnObjectSharedByTotal, lnNNTPServerBytesReceived=lnNNTPServerBytesReceived, lnRepClusterDocsAdded=lnRepClusterDocsAdded, lnLDAPSessionsThreadsBusy=lnLDAPSessionsThreadsBusy, lnAppleTalkStatsLogged=lnAppleTalkStatsLogged, lnWebVpoolMaxMarker=lnWebVpoolMaxMarker, lnDominoCfgWelcomePage=lnDominoCfgWelcomePage, lnClusterFailoverUnsucc=lnClusterFailoverUnsucc, lnMTATransferredMsgs=lnMTATransferredMsgs, lnMemTimeouts=lnMemTimeouts, lnWebProcVpoolMaxMarker=lnWebProcVpoolMaxMarker, lnClusterMemberName=lnClusterMemberName, lnPOP3UserCacheInserts=lnPOP3UserCacheInserts, lnFTSearchMaxResults=lnFTSearchMaxResults, lnAlarmLongArg=lnAlarmLongArg, lnSMTP=lnSMTP, lnQOSMailISpyResponseTime=lnQOSMailISpyResponseTime, lnDominoCmdInfoOpenAgent=lnDominoCmdInfoOpenAgent, lnCluster=lnCluster, lnSMTPSessionsThreadsIdle=lnSMTPSessionsThreadsIdle, lnNormalEventTrap=lnNormalEventTrap, lnServerTransPerMinPeak=lnServerTransPerMinPeak, lnDominoCfgPortNumber=lnDominoCfgPortNumber, lnTotalMailFailures=lnTotalMailFailures, lnSNALNCVersion=lnSNALNCVersion, lnMTAName=lnMTAName, lnNetPortSessPeak=lnNetPortSessPeak, lnWebProcAccGopher=lnWebProcAccGopher, lnTrapDisplayAlarmClearServers=lnTrapDisplayAlarmClearServers, lnOpenRedirects=lnOpenRedirects, lnDominoCfgLogAccess=lnDominoCfgLogAccess, lnDominoCfgCacheSizeMax=lnDominoCfgCacheSizeMax, lnLDAP=lnLDAP, lnDominoCmdInfo=lnDominoCmdInfo, lnDominoCmdInfoOpenIcon=lnDominoCmdInfoOpenIcon, lnSMTPTotal=lnSMTPTotal, lnObjectSharedBy16=lnObjectSharedBy16, lnX25LocalResets=lnX25LocalResets, lnDBExtMgrPoolPeak=lnDBExtMgrPoolPeak, lnFTDomainSearchTotalResults=lnFTDomainSearchTotalResults, lnNetWareSPXIIStatsLogged=lnNetWareSPXIIStatsLogged, lnServerUsersTable=lnServerUsersTable, lnMemAllocProcess=lnMemAllocProcess, lnHourlyAccessDenials=lnHourlyAccessDenials, lnDominoCmdInfoOpenElement=lnDominoCmdInfoOpenElement, lnServerSystemVersion=lnServerSystemVersion, lnReporterTimeCollected=lnReporterTimeCollected, lnNNTPBytesSent=lnNNTPBytesSent, lnObjectSharedBy17=lnObjectSharedBy17, lnNetPortSessEstIn=lnNetPortSessEstIn, lnAlarmServerNotesEvent=lnAlarmServerNotesEvent, lnReplicaClusterCachedHandles=lnReplicaClusterCachedHandles, lnStatsStartTime=lnStatsStartTime, lnRepClusterWorkQueueDepthMax=lnRepClusterWorkQueueDepthMax, lnServerEntry=lnServerEntry, lnSpinAvtIterToHit=lnSpinAvtIterToHit, lnXPCMsgsSent=lnXPCMsgsSent, lnControl=lnControl, lnDominoCfgCacheDirectory=lnDominoCfgCacheDirectory, lnClusterMemberIndex=lnClusterMemberIndex, lnAllStatsTable=lnAllStatsTable, lnWebProcAccFtp=lnWebProcAccFtp, lnAlarmTextArg2=lnAlarmTextArg2, lnMonitor=lnMonitor, lnDominoCmdInfoUnknown=lnDominoCmdInfoUnknown, lnNNTPPushArticlesTransferred=lnNNTPPushArticlesTransferred, lnCollector=lnCollector, lnSMTPStatEntry=lnSMTPStatEntry, lnDBBufferControlPoolSize=lnDBBufferControlPoolSize, lnDominoReqPer5MinsPeakTime=lnDominoReqPer5MinsPeakTime, lnICMCommandUnknown=lnICMCommandUnknown, lnSNAPacingType=lnSNAPacingType, lnEventStatus=lnEventStatus, lnNNTPServerPushArticlesTransferred=lnNNTPServerPushArticlesTransferred, lnDiskFreeSwap=lnDiskFreeSwap, lnCollectorTimeElapsed=lnCollectorTimeElapsed, lnServerTitle=lnServerTitle, lnDBNSFPoolUsed=lnDBNSFPoolUsed, lnNetPortKBytesRec=lnNetPortKBytesRec, lnDominoCmdInfoOpenAbout=lnDominoCmdInfoOpenAbout, lnDominoCacheDatabaseHitRate=lnDominoCacheDatabaseHitRate, lnRepClusterServers=lnRepClusterServers, lnMTATotalRouted=lnMTATotalRouted, lnTrapDisplayIndeterminateAlarm=lnTrapDisplayIndeterminateAlarm, lnMailHold=lnMailHold, lnObjectSharedBy12=lnObjectSharedBy12, lnMinimumMailDeliverTime=lnMinimumMailDeliverTime, lnIMAPSessionsInboundTotal=lnIMAPSessionsInboundTotal, lnNetLogName=lnNetLogName, lnServerMinIdleDisconnect=lnServerMinIdleDisconnect, lnX25REJTran=lnX25REJTran, lnWebProcVpoolCurMarker=lnWebProcVpoolCurMarker, lnClusterTransRunningAvgTime=lnClusterTransRunningAvgTime, lnNNTPSessionsTotal=lnNNTPSessionsTotal, lnMonitorName=lnMonitorName, lnNNTPArticlesSent=lnNNTPArticlesSent, lnNNTPPullArticlesTransferred=lnNNTPPullArticlesTransferred, lnPOP3SessionsInboundSSL=lnPOP3SessionsInboundSSL, lnWebProcCacheMisses=lnWebProcCacheMisses, lnNBRetriedTransmissions=lnNBRetriedTransmissions, lnDominoCmdInfoSearchSite=lnDominoCmdInfoSearchSite, lnX25LocalDTEAddress=lnX25LocalDTEAddress, lnAlarmSeverityStr=lnAlarmSeverityStr, lnClusterEntry=lnClusterEntry, lnDominoCfgViewLines=lnDominoCfgViewLines, lnServerPulseRestoredTrap=lnServerPulseRestoredTrap, lnAlarmTextArg1=lnAlarmTextArg1, lnSignalAutodiscoveryStart=lnSignalAutodiscoveryStart, lnNetPortEntry=lnNetPortEntry, lnMemFTVDKMaxBufferSizeUsed=lnMemFTVDKMaxBufferSizeUsed, lnServerDownTrap=lnServerDownTrap, lnDominoInfo=lnDominoInfo, lnMail=lnMail, lnDominoCfgTimeoutOutput=lnDominoCfgTimeoutOutput, lnMemQuota=lnMemQuota, lnAlarmMailProbeEvent=lnAlarmMailProbeEvent, lnNBReceiverResourcesExhausted=lnNBReceiverResourcesExhausted, lnIMAPSessionsInboundSSLBadHandshake=lnIMAPSessionsInboundSSLBadHandshake, lnServerTblIndex=lnServerTblIndex, lnSMTPMTA=lnSMTPMTA, lnNNTPServerPushArticlesOffered=lnNNTPServerPushArticlesOffered, lnTrapDisplayClearedAlarm=lnTrapDisplayClearedAlarm, lnServerOpenReqRestricted=lnServerOpenReqRestricted, lnNBCollisionErrors=lnNBCollisionErrors, lnDBNSFFreeHandleStackHits=lnDBNSFFreeHandleStackHits, lnDominoCmdInfoOpenDocument=lnDominoCmdInfoOpenDocument, lnDominoCfgLogTimeStamp=lnDominoCfgLogTimeStamp, lnDominoReqPerDayPeak=lnDominoReqPerDayPeak, lnAllStatsEntry=lnAllStatsEntry, lnDBCacheMaxEntries=lnDBCacheMaxEntries, lnMonitorIndex=lnMonitorIndex, lnObjectSharedBy15=lnObjectSharedBy15, lnFTIndexDocumentsUpdated=lnFTIndexDocumentsUpdated, lnHourlyUnsuccessfulRuns=lnHourlyUnsuccessfulRuns, lnPOP3SessionsThreadsBusy=lnPOP3SessionsThreadsBusy, lnMainProxyAgentVersion=lnMainProxyAgentVersion, lnNBAbortedTransmissions=lnNBAbortedTransmissions, lnDBCacheOvercrowdingRejections=lnDBCacheOvercrowdingRejections, lnObjectSharedBy18=lnObjectSharedBy18, lnMailByDestTable=lnMailByDestTable, lnSignalServerId=lnSignalServerId, lnNNTP=lnNNTP, lnMem=lnMem, lnWebImageCacheMisses=lnWebImageCacheMisses, lnDriveSize=lnDriveSize, lnEvtData=lnEvtData, lnFTDomainIndexDocumentsAdded=lnFTDomainIndexDocumentsAdded, lnDriveTable=lnDriveTable, lnWebBusyProcesses=lnWebBusyProcesses, lnICMCommandTotal=lnICMCommandTotal, lnClusterPortName=lnClusterPortName, lnFTDomainIndexBytesPerHour=lnFTDomainIndexBytesPerHour, lnFTDomainSearchTotalActualHits=lnFTDomainSearchTotalActualHits, lnWebProcTable=lnWebProcTable, lnAlarmSeverity=lnAlarmSeverity, lnXPCKiloBytesReceived=lnXPCKiloBytesReceived, lnClusterOpenReqDBOutofServ=lnClusterOpenReqDBOutofServ, lnDominoBuildPlatform=lnDominoBuildPlatform, lnEvtSeverity=lnEvtSeverity, lnSNATPState=lnSNATPState, lnMemAvailability=lnMemAvailability, lnWebRetrieverProcessURLsSucceeded=lnWebRetrieverProcessURLsSucceeded, lnRepDocsAdded=lnRepDocsAdded, lnDBNIFPoolUsed=lnDBNIFPoolUsed, lnHourlyUsedRunTime=lnHourlyUsedRunTime, lnSpinDelaysMsecs=lnSpinDelaysMsecs, lnMTATable=lnMTATable, lnPOP3SessionsInboundTotal=lnPOP3SessionsInboundTotal, lnSignalServerName=lnSignalServerName, lnRepClusterDocsUpdated=lnRepClusterDocsUpdated, lnServerUserAccessedDBs=lnServerUserAccessedDBs, lnX25FrameSize=lnX25FrameSize, lnServerDroppedSessions=lnServerDroppedSessions, lnSMTPMin=lnSMTPMin, lnServerAvailabilityIndex=lnServerAvailabilityIndex, lnFTDomainSearchTotalTimeMS=lnFTDomainSearchTotalTimeMS, lnMTAWaitingRecp=lnMTAWaitingRecp, lnTaskType=lnTaskType, lnMTA=lnMTA, lnFTDomainSearchAverageTimeMS=lnFTDomainSearchAverageTimeMS, lnWebProcVpoolCurBuf=lnWebProcVpoolCurBuf, lnObjectSharedBy09=lnObjectSharedBy09, lnAlarmMailBoxEvent=lnAlarmMailBoxEvent, lnServerPorts=lnServerPorts, lnDominoThreadsActivePeak=lnDominoThreadsActivePeak, lnFTDomainIndexCount=lnFTDomainIndexCount)
mibBuilder.exportSymbols("NOTES-MIB", lnClusterOpenReqClustBusy=lnClusterOpenReqClustBusy, lnCalTotalReservations=lnCalTotalReservations, lnDBNSFFreeHandleStackMissRate=lnDBNSFFreeHandleStackMissRate, lnSMTPSessionsInboundBytesReceived=lnSMTPSessionsInboundBytesReceived, lnServerTransPerMinPeakTime=lnServerTransPerMinPeakTime, lnSignalAutodiscoveryFinished=lnSignalAutodiscoveryFinished, lnServerUserName=lnServerUserName, lnXPCKiloBytesSent=lnXPCKiloBytesSent, lnAverageMailSizeDelivered=lnAverageMailSizeDelivered, lnSMTPSessionsActive=lnSMTPSessionsActive, lnRepClusterDocsDeleted=lnRepClusterDocsDeleted, lnServerSwapPath=lnServerSwapPath, lnServerAvailabilityThreshold=lnServerAvailabilityThreshold, lnWebKBytesReceived=lnWebKBytesReceived, lnMonitorEntry=lnMonitorEntry, lnServerTblDataDirValid=lnServerTblDataDirValid, lnMailByDestTotalFailures=lnMailByDestTotalFailures, lnInfo=lnInfo, lnAlarmClearAll=lnAlarmClearAll, lnSNAConversationId=lnSNAConversationId, lnDominoReqPerMinPeakTime=lnDominoReqPerMinPeakTime, lnDominoCmdInfoOpenView=lnDominoCmdInfoOpenView, lnAlarmDate=lnAlarmDate, lnDominoCmdInfoOpenHelp=lnDominoCmdInfoOpenHelp, lnMailPeakMessageTranferRate=lnMailPeakMessageTranferRate, lnDomino=lnDomino, lnServerUsers5MinPeakTime=lnServerUsers5MinPeakTime, lnNetPortSessEstOut=lnNetPortSessEstOut, lnClusterAvailThreshold=lnClusterAvailThreshold, lnInterceptor=lnInterceptor, lnTaskCount=lnTaskCount, lnServerInfo=lnServerInfo, lnServerMinIdleDisconnectTime=lnServerMinIdleDisconnectTime, lnTrapDisplayCriticalAlarm=lnTrapDisplayCriticalAlarm)
