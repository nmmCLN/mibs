#
# PySNMP MIB module CT-CONTAINER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CT-CONTAINER-MIB
# Produced by pysmi-1.1.8 at Fri Jul  8 08:25:54 2022
# On host fv-az130-744 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ctChassis2, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctChassis2")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Gauge32, Integer32, ObjectIdentity, Bits, iso, Counter64, TimeTicks, MibIdentifier, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Integer32", "ObjectIdentity", "Bits", "iso", "Counter64", "TimeTicks", "MibIdentifier", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
contType = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1))
contLogical = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2))
contPhysical = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3))
contResource = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 4))
contCommStr = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 5))
contAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6))
contTypeID = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 7))
contTypeDevice = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeDevice.setStatus('mandatory')
contTypePhysicalEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypePhysicalEntries.setStatus('mandatory')
contTypePhysicalChanges = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypePhysicalChanges.setStatus('mandatory')
contTypeLogicalChanges = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeLogicalChanges.setStatus('mandatory')
contTypeSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeSerialNumber.setStatus('mandatory')
contTypeContainingDevice = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeContainingDevice.setStatus('mandatory')
contTypeContainingPhysicalEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeContainingPhysicalEntries.setStatus('mandatory')
contTypeContainingPhysicalEntryID = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeContainingPhysicalEntryID.setStatus('mandatory')
contTypeContainingSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contTypeContainingSerialNumber.setStatus('mandatory')
contLogicalEntryTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1), )
if mibBuilder.loadTexts: contLogicalEntryTable.setStatus('mandatory')
contLogicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1), ).setIndexNames((0, "CT-CONTAINER-MIB", "contLogicalEntryID"))
if mibBuilder.loadTexts: contLogicalEntry.setStatus('mandatory')
contLogicalEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryID.setStatus('mandatory')
contLogicalEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryType.setStatus('mandatory')
contLogicalEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryName.setStatus('mandatory')
contLogicalEntryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryVersion.setStatus('mandatory')
contLogicalEntryROCommStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryROCommStr.setStatus('mandatory')
contLogicalEntryRWCommStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryRWCommStr.setStatus('mandatory')
contLogicalEntrySUCommStr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntrySUCommStr.setStatus('mandatory')
contLogicalEntryAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 7, 9))).clone(namedValues=NamedValues(("enable", 3), ("disable", 7), ("reset", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contLogicalEntryAdminStatus.setStatus('mandatory')
contLogicalEntryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("invalid", 2), ("enabled", 3), ("testing", 4), ("operational", 5), ("error", 6), ("disabled", 7), ("delete", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryOperStatus.setStatus('mandatory')
contPhysicalEntryTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1), )
if mibBuilder.loadTexts: contPhysicalEntryTable.setStatus('mandatory')
contPhysicalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1), ).setIndexNames((0, "CT-CONTAINER-MIB", "contPhysicalEntryID"))
if mibBuilder.loadTexts: contPhysicalEntry.setStatus('mandatory')
contPhysicalEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntryID.setStatus('mandatory')
contPhysicalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntries.setStatus('mandatory')
contPhysicalEntryClass = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntryClass.setStatus('mandatory')
contPhysicalEntryType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntryType.setStatus('mandatory')
contPhysicalEntryTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntryTimeStamp.setStatus('mandatory')
contPhysicalEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 11))).clone(namedValues=NamedValues(("reset", 1), ("powerOff", 2), ("busy", 3), ("crippled", 4), ("operational", 5), ("error", 6), ("testing", 7), ("booting", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntryStatus.setStatus('mandatory')
contLogicalToPhysicalMapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 2), )
if mibBuilder.loadTexts: contLogicalToPhysicalMapTable.setStatus('mandatory')
contLogicalToPhysicalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 2, 1), ).setIndexNames((0, "CT-CONTAINER-MIB", "contPhysicalEntryID"), (0, "CT-CONTAINER-MIB", "contLogicalEntryID"))
if mibBuilder.loadTexts: contLogicalToPhysicalMapEntry.setStatus('mandatory')
contPhysicalEntryMapID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contPhysicalEntryMapID.setStatus('mandatory')
contLogicalEntryMapID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contLogicalEntryMapID.setStatus('mandatory')
contResourceTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 4, 1), )
if mibBuilder.loadTexts: contResourceTable.setStatus('mandatory')
contResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 4, 1, 1), ).setIndexNames((0, "CT-CONTAINER-MIB", "contResourceID"))
if mibBuilder.loadTexts: contResourceEntry.setStatus('mandatory')
contResourceID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contResourceID.setStatus('mandatory')
contResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 4, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contResourceType.setStatus('mandatory')
contResourceMibPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 4, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contResourceMibPointer.setStatus('mandatory')
contROCommStr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 5, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contROCommStr.setStatus('mandatory')
contRWCommStr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 5, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contRWCommStr.setStatus('mandatory')
contSUCommStr = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 5, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contSUCommStr.setStatus('mandatory')
contNetAddressTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6, 1), )
if mibBuilder.loadTexts: contNetAddressTable.setStatus('mandatory')
contNetAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6, 1, 1), ).setIndexNames((0, "CT-CONTAINER-MIB", "contNetAddressIndex"))
if mibBuilder.loadTexts: contNetAddressEntry.setStatus('mandatory')
contNetAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contNetAddressIndex.setStatus('mandatory')
contNetAddressNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: contNetAddressNetworkType.setStatus('mandatory')
contNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contNetAddress.setStatus('mandatory')
contNetAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 6, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: contNetAddressMask.setStatus('mandatory')
contUnknownTypeID = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 9, 7, 1))
mibBuilder.exportSymbols("CT-CONTAINER-MIB", contResource=contResource, contNetAddressMask=contNetAddressMask, contLogicalEntryName=contLogicalEntryName, contPhysicalEntryTimeStamp=contPhysicalEntryTimeStamp, contTypeDevice=contTypeDevice, contPhysicalEntryStatus=contPhysicalEntryStatus, contLogicalEntryType=contLogicalEntryType, contTypeContainingPhysicalEntries=contTypeContainingPhysicalEntries, contNetAddressIndex=contNetAddressIndex, contPhysicalEntry=contPhysicalEntry, contLogicalEntryMapID=contLogicalEntryMapID, contSUCommStr=contSUCommStr, contNetAddressTable=contNetAddressTable, contPhysicalEntryID=contPhysicalEntryID, contLogicalToPhysicalMapTable=contLogicalToPhysicalMapTable, contROCommStr=contROCommStr, contTypeContainingSerialNumber=contTypeContainingSerialNumber, contLogicalToPhysicalMapEntry=contLogicalToPhysicalMapEntry, contTypeContainingPhysicalEntryID=contTypeContainingPhysicalEntryID, contLogicalEntryOperStatus=contLogicalEntryOperStatus, contLogicalEntry=contLogicalEntry, contNetAddressEntry=contNetAddressEntry, contTypeLogicalChanges=contTypeLogicalChanges, contLogical=contLogical, contLogicalEntryAdminStatus=contLogicalEntryAdminStatus, contLogicalEntrySUCommStr=contLogicalEntrySUCommStr, contResourceTable=contResourceTable, contPhysicalEntryClass=contPhysicalEntryClass, contResourceID=contResourceID, contLogicalEntryTable=contLogicalEntryTable, contPhysicalEntries=contPhysicalEntries, contPhysicalEntryMapID=contPhysicalEntryMapID, contType=contType, contLogicalEntryROCommStr=contLogicalEntryROCommStr, contTypeID=contTypeID, contTypePhysicalEntries=contTypePhysicalEntries, contLogicalEntryID=contLogicalEntryID, contTypePhysicalChanges=contTypePhysicalChanges, contNetAddress=contNetAddress, contLogicalEntryRWCommStr=contLogicalEntryRWCommStr, contResourceType=contResourceType, contUnknownTypeID=contUnknownTypeID, contCommStr=contCommStr, contPhysical=contPhysical, contPhysicalEntryType=contPhysicalEntryType, contTypeSerialNumber=contTypeSerialNumber, contResourceMibPointer=contResourceMibPointer, contNetAddressNetworkType=contNetAddressNetworkType, contTypeContainingDevice=contTypeContainingDevice, contRWCommStr=contRWCommStr, contLogicalEntryVersion=contLogicalEntryVersion, contPhysicalEntryTable=contPhysicalEntryTable, contResourceEntry=contResourceEntry, contAddress=contAddress)
