#
# PySNMP MIB module BENU-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/benuos/BENU-VLAN-MIB
# Produced by pysmi-1.1.8 at Fri Jul  8 08:50:23 2022
# On host fv-az42-349 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
benuWAG, = mibBuilder.importSymbols("BENU-WAG-MIB", "benuWAG")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, Counter32, Integer32, Bits, Counter64, ModuleIdentity, IpAddress, TimeTicks, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "Counter32", "Integer32", "Bits", "Counter64", "ModuleIdentity", "IpAddress", "TimeTicks", "Gauge32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bVLANMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8))
bVLANMIB.setRevisions(('2015-05-07 00:00', '2015-04-14 00:00', '2015-01-06 00:00', '2014-11-17 00:00', '2014-08-04 00:00', '2014-06-24 00:00', '2014-05-31 00:00',))
if mibBuilder.loadTexts: bVLANMIB.setLastUpdated('201505070000Z')
if mibBuilder.loadTexts: bVLANMIB.setOrganization('Benu Networks')
bVLANMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1))
if mibBuilder.loadTexts: bVLANMIBObjects.setStatus('current')
bVLANNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 0))
if mibBuilder.loadTexts: bVLANNotifObjects.setStatus('current')
bVLANNotifVariables = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 2))
if mibBuilder.loadTexts: bVLANNotifVariables.setStatus('current')
bVlanTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1), )
if mibBuilder.loadTexts: bVlanTable.setStatus('current')
bVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1), ).setIndexNames((0, "BENU-VLAN-MIB", "bVlanPortIndex"), (0, "BENU-VLAN-MIB", "bVlanIndex"))
if mibBuilder.loadTexts: bVlanEntry.setStatus('current')
bVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: bVlanPortIndex.setStatus('current')
bVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: bVlanIndex.setStatus('current')
bVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanName.setStatus('current')
bVlanMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanMTU.setStatus('current')
bVlanEncapName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanEncapName.setStatus('current')
bVlanAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanAdminStatus.setStatus('current')
bVlanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanOperStatus.setStatus('current')
bWagVlanTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 2), )
if mibBuilder.loadTexts: bWagVlanTable.setStatus('current')
bWagVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 2, 1), ).setIndexNames((0, "BENU-VLAN-MIB", "bWagVlanPortIndex"), (0, "BENU-VLAN-MIB", "bWagVlanIndex"))
if mibBuilder.loadTexts: bWagVlanEntry.setStatus('current')
bWagVlanPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: bWagVlanPortIndex.setStatus('current')
bWagVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: bWagVlanIndex.setStatus('current')
bWagVlanSubscriberCount = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagVlanSubscriberCount.setStatus('current')
bWagVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3), )
if mibBuilder.loadTexts: bWagVlanStatsTable.setStatus('current')
bWagVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1), ).setIndexNames((0, "BENU-VLAN-MIB", "bWagVlanStatsPortIndex"), (0, "BENU-VLAN-MIB", "bWagVlanStatsIndex"))
if mibBuilder.loadTexts: bWagVlanStatsEntry.setStatus('current')
bWagVlanStatsPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: bWagVlanStatsPortIndex.setStatus('current')
bWagVlanStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: bWagVlanStatsIndex.setStatus('current')
bWagVlanTotalPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagVlanTotalPktsRcvd.setStatus('current')
bWagVlanTotalPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagVlanTotalPktsSent.setStatus('current')
bWagVlanTotalBytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagVlanTotalBytesRcvd.setStatus('current')
bWagVlanTotalBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bWagVlanTotalBytesSent.setStatus('current')
bVlanPortTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 4), )
if mibBuilder.loadTexts: bVlanPortTable.setStatus('current')
bVlanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 4, 1), ).setIndexNames((0, "BENU-VLAN-MIB", "bVlanPerPortIndex"))
if mibBuilder.loadTexts: bVlanPortEntry.setStatus('current')
bVlanPerPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: bVlanPerPortIndex.setStatus('current')
bVlanTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanTotal.setStatus('current')
bVlanActive = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanActive.setStatus('current')
bVlanCurrentNumber = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanCurrentNumber.setStatus('current')
bVlanAssocSub = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bVlanAssocSub.setStatus('current')
bVlanPortId = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 2, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bVlanPortId.setStatus('current')
bVlanId = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 2, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bVlanId.setStatus('current')
bVlanEncapEnable = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 0, 1)).setObjects(("BENU-VLAN-MIB", "bVlanPortId"))
if mibBuilder.loadTexts: bVlanEncapEnable.setStatus('current')
bVlanEncapDisable = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 0, 2)).setObjects(("BENU-VLAN-MIB", "bVlanPortId"))
if mibBuilder.loadTexts: bVlanEncapDisable.setStatus('current')
bVlanCreate = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 0, 3)).setObjects(("BENU-VLAN-MIB", "bVlanPortId"), ("BENU-VLAN-MIB", "bVlanId"))
if mibBuilder.loadTexts: bVlanCreate.setStatus('current')
bVlanDelete = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 8, 0, 4)).setObjects(("BENU-VLAN-MIB", "bVlanPortId"), ("BENU-VLAN-MIB", "bVlanId"))
if mibBuilder.loadTexts: bVlanDelete.setStatus('current')
mibBuilder.exportSymbols("BENU-VLAN-MIB", bVlanPortId=bVlanPortId, bVlanTable=bVlanTable, bVLANNotifObjects=bVLANNotifObjects, bVlanOperStatus=bVlanOperStatus, bVLANMIB=bVLANMIB, bVlanEncapDisable=bVlanEncapDisable, bWagVlanTotalPktsSent=bWagVlanTotalPktsSent, bVlanCreate=bVlanCreate, bVlanPortEntry=bVlanPortEntry, bVlanIndex=bVlanIndex, bWagVlanStatsTable=bWagVlanStatsTable, bWagVlanTotalPktsRcvd=bWagVlanTotalPktsRcvd, bVlanPortIndex=bVlanPortIndex, bWagVlanEntry=bWagVlanEntry, bWagVlanTable=bWagVlanTable, PYSNMP_MODULE_ID=bVLANMIB, bVlanDelete=bVlanDelete, bWagVlanPortIndex=bWagVlanPortIndex, bWagVlanStatsEntry=bWagVlanStatsEntry, bVlanTotal=bVlanTotal, bVlanCurrentNumber=bVlanCurrentNumber, bVlanPerPortIndex=bVlanPerPortIndex, bWagVlanStatsPortIndex=bWagVlanStatsPortIndex, bVlanEntry=bVlanEntry, bVlanName=bVlanName, bWagVlanStatsIndex=bWagVlanStatsIndex, bVlanAdminStatus=bVlanAdminStatus, bWagVlanIndex=bWagVlanIndex, bVlanPortTable=bVlanPortTable, bVlanAssocSub=bVlanAssocSub, bWagVlanTotalBytesSent=bWagVlanTotalBytesSent, bVlanEncapName=bVlanEncapName, bVlanEncapEnable=bVlanEncapEnable, bWagVlanSubscriberCount=bWagVlanSubscriberCount, bVLANMIBObjects=bVLANMIBObjects, bVlanActive=bVlanActive, bWagVlanTotalBytesRcvd=bWagVlanTotalBytesRcvd, bVlanMTU=bVlanMTU, bVLANNotifVariables=bVLANNotifVariables, bVlanId=bVlanId)
