#
# PySNMP MIB module XIRRUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/xirrus_aos/XIRRUS-MIB
# Produced by pysmi-1.1.8 at Fri Sep  8 07:50:41 2023
# On host fv-az268-298 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, ModuleIdentity, Counter32, TimeTicks, Gauge32, Bits, MibIdentifier, Unsigned32, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "ModuleIdentity", "Counter32", "TimeTicks", "Gauge32", "Bits", "MibIdentifier", "Unsigned32", "iso", "ObjectIdentity")
RowStatus, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "MacAddress", "DisplayString")
xirrus = ModuleIdentity((1, 3, 6, 1, 4, 1, 21013))
xirrus.setRevisions(('2016-05-23 12:00',))
if mibBuilder.loadTexts: xirrus.setLastUpdated('201605231200Z')
if mibBuilder.loadTexts: xirrus.setOrganization('Xirrus')
products = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1))
xmManage = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 1))
xsArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2))
xs3500Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 100))
xs3700Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 101))
xs3900Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 102))
xs3500_512Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 103)).setLabel("xs3500-512Array")
xs3700_1GArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 104)).setLabel("xs3700-1GArray")
xs3900_1GArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 105)).setLabel("xs3900-1GArray")
xs4Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 106))
xs8Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 107))
xs16Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 108))
xn4Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 109))
xn8Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 110))
xn16Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 111))
xs12Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 112))
xn12Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 113))
xr4420Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 114))
xr4430Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 115))
xr4820Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 116))
xr4830Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 117))
xr6820Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 118))
xr6830Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 119))
xr7220Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 120))
xr7230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 121))
xr7620Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 122))
xr7630Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 123))
xr1220Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 124))
xr1230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 125))
xr2420Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 126))
xr2430Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 127))
xr2220Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 128))
xr2230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 129))
xr1120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 130))
xr1130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 131))
xr1120hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 132))
xr1130hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 133))
xr520hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 134))
xr1230hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 135))
xr2420hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 136))
xr2430hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 137))
xr2220hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 138))
xr2230hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 139))
xr520Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 142))
xr530Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 143))
xr1220hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 144))
xr530hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 145))
xr420hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 146))
xr430hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 147))
xr2425Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 148))
xr2435Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 149))
xr2425hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 150))
xr2225Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 151))
xr2235Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 152))
xr620Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 153))
xr620hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 154))
xr630Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 155))
xr2426Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 156))
xr2436Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 157))
xr2426hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 158))
xr2226Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 159))
xr2226hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 160))
xr2236Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 161))
xr630hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 162))
xr2225hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 163))
xr2235hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 164))
xr2236hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 165))
xr2435hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 166))
xr2436hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 167))
xr1126Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 168))
xr1136Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 169))
xr1226Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 170))
xr1236Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 171))
xr1126hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 172))
xr1136hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 173))
xr1226hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 174))
xr1236hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 175))
xr4426Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 176))
xr4436Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 177))
xr4826Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 178))
xr4836Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 179))
xr6826Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 180))
xr6836Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 181))
xr7226Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 182))
xr7236Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 183))
xr7626Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 184))
xr7636Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 185))
xd1_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 186)).setLabel("xd1-130Array")
xd2_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 187)).setLabel("xd2-130Array")
xd4_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 188)).setLabel("xd4-130Array")
xd8_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 189)).setLabel("xd8-130Array")
xh1_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 190)).setLabel("xh1-130Array")
xh2_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 191)).setLabel("xh2-130Array")
xh4_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 192)).setLabel("xh4-130Array")
xh8_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 193)).setLabel("xh8-130Array")
xd1_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 194)).setLabel("xd1-240Array")
xd2_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 195)).setLabel("xd2-240Array")
xd4_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 196)).setLabel("xd4-240Array")
xd8_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 197)).setLabel("xd8-240Array")
xh1_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 198)).setLabel("xh1-240Array")
xh2_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 199)).setLabel("xh2-240Array")
xh4_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 200)).setLabel("xh4-240Array")
xh8_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 201)).setLabel("xh8-240Array")
xd1_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 202)).setLabel("xd1-120Array")
xd2_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 203)).setLabel("xd2-120Array")
xd4_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 204)).setLabel("xd4-120Array")
xd8_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 205)).setLabel("xd8-120Array")
xh1_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 206)).setLabel("xh1-120Array")
xh2_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 207)).setLabel("xh2-120Array")
xh4_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 208)).setLabel("xh4-120Array")
xh8_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 209)).setLabel("xh8-120Array")
xr1147Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 210))
xr1247Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 211))
xr2247Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 212))
xr2447Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 213))
xr1147hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 214))
xr1247hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 215))
xr2247hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 216))
xr2447hArray = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 217))
xr4447Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 218))
xr4847Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 219))
xr6847Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 220))
xr7247Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 221))
xr7647Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 222))
xa1_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 223)).setLabel("xa1-120Array")
xa2_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 224)).setLabel("xa2-120Array")
xa4_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 225)).setLabel("xa4-120Array")
xa8_120Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 226)).setLabel("xa8-120Array")
xa1_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 227)).setLabel("xa1-130Array")
xa2_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 228)).setLabel("xa2-130Array")
xa4_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 229)).setLabel("xa4-130Array")
xa8_130Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 230)).setLabel("xa8-130Array")
xa1_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 231)).setLabel("xa1-240Array")
xa2_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 232)).setLabel("xa2-240Array")
xa4_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 233)).setLabel("xa4-240Array")
xa8_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 234)).setLabel("xa8-240Array")
xd1_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 235)).setLabel("xd1-230Array")
xd2_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 236)).setLabel("xd2-230Array")
xd3_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 237)).setLabel("xd3-230Array")
xd4_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 238)).setLabel("xd4-230Array")
xd8_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 239)).setLabel("xd8-230Array")
xh1_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 240)).setLabel("xh1-230Array")
xh2_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 241)).setLabel("xh2-230Array")
xh3_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 242)).setLabel("xh3-230Array")
xh4_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 243)).setLabel("xh4-230Array")
xh8_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 244)).setLabel("xh8-230Array")
xa1_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 245)).setLabel("xa1-230Array")
xa2_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 246)).setLabel("xa2-230Array")
xa3_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 247)).setLabel("xa3-230Array")
xa4_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 248)).setLabel("xa4-230Array")
xa8_230Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 249)).setLabel("xa8-230Array")
xa3_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 250)).setLabel("xa3-240Array")
xh3_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 251)).setLabel("xh3-240Array")
xd3_240Array = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 252)).setLabel("xd3-240Array")
acl = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2))
admin = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4))
cdp = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5))
dateTime = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6))
dhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8))
dns = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 10))
filter = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12))
networkMap = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13))
radius = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14))
roamAssist = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 15))
security = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16))
snmpAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18))
ssid = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20))
stations = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22))
statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24))
syslog = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28))
tunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29))
vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30))
cluster = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31))
envCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32))
location = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 33))
group = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34))
mdm = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35))
netflow = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 36))
wifiTag = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37))
wpr = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38))
oauth = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39))
proxyFwd = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 40))
proxyMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41))
lldp = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 42))
position = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50))
aclEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("allow", 1), ("deny", 2), ("deny-include-blocked-rogues", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aclEnable.setStatus('current')
aclTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2), )
if mibBuilder.loadTexts: aclTable.setStatus('current')
aclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "aclIndex"))
if mibBuilder.loadTexts: aclEntry.setStatus('current')
aclIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: aclIndex.setStatus('current')
aclMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aclMacAddress.setStatus('current')
aclRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aclRowStatus.setStatus('current')
aclTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aclTableReset.setStatus('current')
aclSsidTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4), )
if mibBuilder.loadTexts: aclSsidTable.setStatus('current')
aclSsidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1), ).setIndexNames((0, "XIRRUS-MIB", "aclSsidIndex"))
if mibBuilder.loadTexts: aclSsidEntry.setStatus('current')
aclSsidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: aclSsidIndex.setStatus('current')
aclSsidMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aclSsidMacAddress.setStatus('current')
aclSsidName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aclSsidName.setStatus('current')
aclSsidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aclSsidRowStatus.setStatus('current')
aclSsidTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aclSsidTableReset.setStatus('current')
adminTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1), )
if mibBuilder.loadTexts: adminTable.setStatus('current')
adminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "adminIndex"))
if mibBuilder.loadTexts: adminEntry.setStatus('current')
adminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: adminIndex.setStatus('current')
adminUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminUsername.setStatus('current')
adminPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminPassword.setStatus('current')
adminPasswordForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminPasswordForm.setStatus('current')
adminPrivilege = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("read-only", 0), ("read-write", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminPrivilege.setStatus('current')
adminRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminRowStatus.setStatus('current')
adminPrivilegeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminPrivilegeLevel.setStatus('current')
adminTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminTableReset.setStatus('current')
adminTableClear = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminTableClear.setStatus('current')
adminRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4))
adminRadiusEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusEnable.setStatus('current')
adminRadiusPriServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusPriServer.setStatus('current')
adminRadiusPriServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusPriServerPort.setStatus('current')
adminRadiusPriServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusPriServerSecret.setStatus('current')
adminRadiusPriServerSecretEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusPriServerSecretEnc.setStatus('current')
adminRadiusSecServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusSecServer.setStatus('current')
adminRadiusSecServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusSecServerPort.setStatus('current')
adminRadiusSecServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusSecServerSecret.setStatus('current')
adminRadiusSecServerSecretEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusSecServerSecretEnc.setStatus('current')
adminRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusTimeout.setStatus('current')
adminRadiusAuthType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("chap", 0), ("pap", 1), ("ms-chap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminRadiusAuthType.setStatus('current')
adminHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5), )
if mibBuilder.loadTexts: adminHistoryTable.setStatus('current')
adminHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1), ).setIndexNames((0, "XIRRUS-MIB", "adminHistoryIndex"))
if mibBuilder.loadTexts: adminHistoryEntry.setStatus('current')
adminHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: adminHistoryIndex.setStatus('current')
adminHistoryUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminHistoryUsername.setStatus('current')
adminHistoryIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminHistoryIPAddress.setStatus('current')
adminHistoryInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("console", 0), ("telnet", 1), ("ssh", 2), ("https", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminHistoryInterface.setStatus('current')
adminHistoryLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminHistoryLoginTime.setStatus('current')
adminHistoryLogoutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 5, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminHistoryLogoutTime.setStatus('current')
adminPrivLevelTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6), )
if mibBuilder.loadTexts: adminPrivLevelTable.setStatus('current')
adminPrivLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6, 1), ).setIndexNames((0, "XIRRUS-MIB", "adminPrivLevelNumber"))
if mibBuilder.loadTexts: adminPrivLevelEntry.setStatus('current')
adminPrivLevelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminPrivLevelNumber.setStatus('current')
adminPrivLevelName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminPrivLevelName.setStatus('current')
adminPrivSectionTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7), )
if mibBuilder.loadTexts: adminPrivSectionTable.setStatus('current')
adminPrivSectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1), ).setIndexNames((0, "XIRRUS-MIB", "adminPrivSectionIndex"))
if mibBuilder.loadTexts: adminPrivSectionEntry.setStatus('current')
adminPrivSectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: adminPrivSectionIndex.setStatus('current')
adminPrivSectionName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminPrivSectionName.setStatus('current')
adminPrivSectionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adminPrivSectionLevel.setStatus('current')
cdpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1), )
if mibBuilder.loadTexts: cdpInfoTable.setStatus('current')
cdpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "cdpInfoIndex"))
if mibBuilder.loadTexts: cdpInfoEntry.setStatus('current')
cdpInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: cdpInfoIndex.setStatus('current')
cdpInfoHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoHostname.setStatus('current')
cdpInfoIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoIPAddress.setStatus('current')
cdpInfoModel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoModel.setStatus('current')
cdpInfoInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoInterface.setStatus('current')
cdpInfoNativeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoNativeVlan.setStatus('current')
cdpInfoCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoCapabilities.setStatus('current')
cdpInfoSoftware = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdpInfoSoftware.setStatus('current')
cdpEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdpEnable.setStatus('current')
cdpInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdpInterval.setStatus('current')
cdpHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdpHoldTime.setStatus('current')
dateTimeSet = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeSet.setStatus('current')
dateTimeZoneHours = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-12, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeZoneHours.setStatus('current')
dateTimeZoneMins = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeZoneMins.setStatus('current')
dateTimeDSTAdjust = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dateTimeDSTAdjust.setStatus('current')
ntp = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5))
ntpEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpEnable.setStatus('current')
ntpPrimary = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpPrimary.setStatus('current')
ntpSecondary = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpSecondary.setStatus('current')
ntpPrimaryAuthType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("md5", 1), ("sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpPrimaryAuthType.setStatus('current')
ntpPrimaryAuthKeyID = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpPrimaryAuthKeyID.setStatus('current')
ntpPrimaryAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpPrimaryAuthKey.setStatus('current')
ntpPrimaryAuthKeyEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpPrimaryAuthKeyEnc.setStatus('current')
ntpSecondaryAuthType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("md5", 1), ("sha1", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpSecondaryAuthType.setStatus('current')
ntpSecondaryAuthKeyID = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpSecondaryAuthKeyID.setStatus('current')
ntpSecondaryAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpSecondaryAuthKey.setStatus('current')
ntpSecondaryAuthKeyEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 6, 5, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpSecondaryAuthKeyEnc.setStatus('current')
dhcpPoolTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpPoolTableReset.setStatus('current')
dhcpPoolTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2), )
if mibBuilder.loadTexts: dhcpPoolTable.setStatus('current')
dhcpPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "dhcpPoolIndex"))
if mibBuilder.loadTexts: dhcpPoolEntry.setStatus('current')
dhcpPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dhcpPoolIndex.setStatus('current')
dhcpPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolName.setStatus('current')
dhcpPoolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolEnable.setStatus('current')
dhcpPoolRangeStartIP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolRangeStartIP.setStatus('current')
dhcpPoolRangeEndIP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolRangeEndIP.setStatus('current')
dhcpPoolDefaultLease = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolDefaultLease.setStatus('current')
dhcpPoolMaxLease = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 3000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolMaxLease.setStatus('current')
dhcpPoolMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolMask.setStatus('current')
dhcpPoolGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 9), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolGateway.setStatus('current')
dhcpPoolDNSDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolDNSDomain.setStatus('current')
dhcpPoolDNSServer1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolDNSServer1.setStatus('current')
dhcpPoolDNSServer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolDNSServer2.setStatus('current')
dhcpPoolDNSServer3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolDNSServer3.setStatus('current')
dhcpPoolNAT = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolNAT.setStatus('current')
dhcpPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 8, 2, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpPoolRowStatus.setStatus('current')
dnsDomain = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsDomain.setStatus('current')
dnsSrv1 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsSrv1.setStatus('current')
dnsSrv2 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsSrv2.setStatus('current')
dnsSrv3 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsSrv3.setStatus('current')
dnsUseDhcp = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsUseDhcp.setStatus('current')
filterMoveDown = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterMoveDown.setStatus('current')
filterMoveUp = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterMoveUp.setStatus('current')
filterTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterTableReset.setStatus('current')
filterTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4), )
if mibBuilder.loadTexts: filterTable.setStatus('current')
filterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1), ).setIndexNames((0, "XIRRUS-MIB", "filterIndex"))
if mibBuilder.loadTexts: filterEntry.setStatus('current')
filterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: filterIndex.setStatus('current')
filterName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterName.setStatus('current')
filterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterEnable.setStatus('current')
filterType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterType.setStatus('current')
filterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterProtocol.setStatus('current')
filterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPort.setStatus('current')
filterSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("any", 0), ("ssid", 1), ("vlan", 2), ("ip", 3), ("mac", 4), ("interface", 5), ("group", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcType.setStatus('current')
filterSrcInvertSense = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcInvertSense.setStatus('current')
filterSrcSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcSsid.setStatus('current')
filterSrcVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcVlan.setStatus('current')
filterSrcIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcIPAddress.setStatus('current')
filterSrcIPAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcIPAddressMask.setStatus('current')
filterSrcMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcMacAddress.setStatus('current')
filterSrcMacAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcMacAddressMask.setStatus('current')
filterSrcIface = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("iap", 0), ("wds-client-1", 1), ("wds-client-2", 2), ("wds-client-3", 3), ("wds-client-4", 4), ("wds-all", 5), ("gig", 6), ("wds-host-1", 7), ("wds-host-2", 8), ("wds-host-3", 9), ("wds-host-4", 10), ("tunnel", 11)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcIface.setStatus('current')
filterDstType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("any", 0), ("ssid", 1), ("vlan", 2), ("ip", 3), ("mac", 4), ("interface", 5), ("group", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstType.setStatus('current')
filterDstInvertSense = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstInvertSense.setStatus('current')
filterDstSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstSsid.setStatus('current')
filterDstVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstVlan.setStatus('current')
filterDstIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 20), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstIPAddress.setStatus('current')
filterDstIPAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 21), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstIPAddressMask.setStatus('current')
filterDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstMacAddress.setStatus('current')
filterDstMacAddressMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstMacAddressMask.setStatus('current')
filterDstIface = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("iap", 0), ("wds-client-1", 1), ("wds-client-2", 2), ("wds-client-3", 3), ("wds-client-4", 4), ("wds-all", 5), ("gig", 6), ("wds-host-1", 7), ("wds-host-2", 8), ("wds-host-3", 9), ("wds-host-4", 10), ("tunnel", 11)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstIface.setStatus('current')
filterSetQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSetQOS.setStatus('current')
filterSetVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSetVlan.setStatus('current')
filterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPriority.setStatus('current')
filterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 28), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRowStatus.setStatus('current')
filterList = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterList.setStatus('current')
filterPortRange = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterPortRange.setStatus('current')
filterSrcGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSrcGroup.setStatus('current')
filterDstGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDstGroup.setStatus('current')
filterLog = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterLog.setStatus('current')
filterPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterPackets.setStatus('current')
filterBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterBytes.setStatus('current')
filterApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterApplication.setStatus('current')
filterLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("layer-2", 0), ("layer-3", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterLayer.setStatus('current')
filterSetDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSetDSCP.setStatus('current')
filterTrafficLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 4000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterTrafficLimit.setStatus('current')
filterTrafficLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("all-pps", 1), ("all-kbps", 2), ("sta-pps", 3), ("sta-kbps", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterTrafficLimitType.setStatus('current')
filterTimeOn = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1439))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterTimeOn.setStatus('current')
filterTimeOff = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1439))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterTimeOff.setStatus('current')
filterDays = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterDays.setStatus('current')
filterSetIP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 4, 1, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterSetIP.setStatus('current')
filterListTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5), )
if mibBuilder.loadTexts: filterListTable.setStatus('current')
filterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1), ).setIndexNames((0, "XIRRUS-MIB", "filterListIndex"))
if mibBuilder.loadTexts: filterListEntry.setStatus('current')
filterListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: filterListIndex.setStatus('current')
filterListName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterListName.setStatus('current')
filterListEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterListEnable.setStatus('current')
filterListLength = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterListLength.setStatus('current')
filterListReset = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterListReset.setStatus('current')
filterListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterListRowStatus.setStatus('current')
filterStateful = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterStateful.setStatus('current')
filterTrackApps = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterTrackApps.setStatus('current')
filterAppTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8), )
if mibBuilder.loadTexts: filterAppTable.setStatus('current')
filterAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1), ).setIndexNames((0, "XIRRUS-MIB", "filterAppIndex"))
if mibBuilder.loadTexts: filterAppEntry.setStatus('current')
filterAppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: filterAppIndex.setStatus('current')
filterAppGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterAppGuid.setStatus('current')
filterAppCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterAppCategory.setStatus('current')
filterAppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterAppDescription.setStatus('current')
filterAppCatTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9), )
if mibBuilder.loadTexts: filterAppCatTable.setStatus('current')
filterAppCatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1), ).setIndexNames((0, "XIRRUS-MIB", "filterAppCatIndex"))
if mibBuilder.loadTexts: filterAppCatEntry.setStatus('current')
filterAppCatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: filterAppCatIndex.setStatus('current')
filterAppCatGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterAppCatGuid.setStatus('current')
filterAppCatDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterAppCatDescription.setStatus('current')
filterAppListTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10), )
if mibBuilder.loadTexts: filterAppListTable.setStatus('current')
filterAppListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1), ).setIndexNames((0, "XIRRUS-MIB", "filterAppListIndex"))
if mibBuilder.loadTexts: filterAppListEntry.setStatus('current')
filterAppListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: filterAppListIndex.setStatus('current')
filterAppListGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterAppListGuid.setStatus('current')
filterAppListDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterAppListDesc.setStatus('current')
filterAppListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterAppListRowStatus.setStatus('current')
appListMemberTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11), )
if mibBuilder.loadTexts: appListMemberTable.setStatus('current')
appListMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1), ).setIndexNames((0, "XIRRUS-MIB", "appListMemberIndex"))
if mibBuilder.loadTexts: appListMemberEntry.setStatus('current')
appListMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: appListMemberIndex.setStatus('current')
appListMemberGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appListMemberGuid.setStatus('current')
appListMemberApp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: appListMemberApp.setStatus('current')
appListMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 11, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: appListMemberRowStatus.setStatus('current')
iap = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1))
ethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2))
console = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3))
iapTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1), )
if mibBuilder.loadTexts: iapTable.setStatus('current')
iapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "iapIndex"))
if mibBuilder.loadTexts: iapEntry.setStatus('current')
iapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: iapIndex.setStatus('current')
iapName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapName.setStatus('current')
iapMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapMacAddress.setStatus('current')
iapNumStations = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapNumStations.setStatus('current')
iapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapEnable.setStatus('current')
iapCellSize = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("manual", 0), ("small", 1), ("medium", 2), ("large", 3), ("max", 4), ("auto", 5), ("monitor", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapCellSize.setStatus('current')
iapTxPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapTxPwr.setStatus('current')
iapRxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapRxThreshold.setStatus('current')
iapChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapChannel.setStatus('current')
iapAntenna = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("omni", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapAntenna.setStatus('current')
iapDot11Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dot11a", 0), ("dot11g", 1), ("monitor", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapDot11Mode.setStatus('current')
iapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapDescription.setStatus('current')
iapWdsClientLink = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapWdsClientLink.setStatus('current')
iapWdsHostLink = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapWdsHostLink.setStatus('current')
iapChannelBondMode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0, 1, 2))).clone(namedValues=NamedValues(("minus1", -1), ("off", 0), ("plus1", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapChannelBondMode.setStatus('current')
iapBondedChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapBondedChannel.setStatus('current')
iapMaxStationsHour = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapMaxStationsHour.setStatus('current')
iapMaxStationsDay = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapMaxStationsDay.setStatus('current')
iapMaxStationsWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapMaxStationsWeek.setStatus('current')
iapMaxStationsMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapMaxStationsMonth.setStatus('current')
iapMaxStationsYear = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapMaxStationsYear.setStatus('current')
iapChannelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("default", 0), ("manual", 1), ("auto", 2), ("radar", 3), ("locked", 4), ("monitor", 5), ("timeshare", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapChannelMode.setStatus('current')
iapWifiMode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24, 25, 31))).clone(namedValues=NamedValues(("dot11a", 1), ("dot11b", 2), ("dot11ab", 3), ("dot11g", 4), ("dot11ag", 5), ("dot11bg", 6), ("dot11abg", 7), ("dot11n", 8), ("dot11an", 9), ("dot11bn", 10), ("dot11abn", 11), ("dot11gn", 12), ("dot11agn", 13), ("dot11bgn", 14), ("dot11abgn", 15), ("dot11ac", 16), ("dot11nac", 24), ("dot11anac", 25), ("dot11abgnac", 31)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapWifiMode.setStatus('current')
iapPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-present", 0), ("present", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapPresent.setStatus('current')
iapWdsLinkDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapWdsLinkDistance.setStatus('current')
iapResetsMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapResetsMonitor.setStatus('current')
iapResetsBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapResetsBeacon.setStatus('current')
iapResetsPhy = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapResetsPhy.setStatus('current')
iapResetsMac = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapResetsMac.setStatus('current')
iapResetsSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapResetsSystem.setStatus('current')
iapSpatialStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("not-present", 0), ("type-1x1", 1), ("type-2x2", 2), ("type-2x3", 3), ("type-3x3", 4), ("type-4x4", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapSpatialStreams.setStatus('current')
iapChannelBond80Mhz = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapChannelBond80Mhz.setStatus('current')
iapBondedChannelList = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapBondedChannelList.setStatus('current')
iapType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("not-present", 0), ("unknown", 1), ("dot11abgn", 2), ("dot11abgnac", 3), ("dot11an", 4), ("dot11anac", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapType.setStatus('current')
iapChannelBond160Mhz = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iapChannelBond160Mhz.setStatus('current')
pysmi_global = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2)).setLabel("global")
global11a = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3))
global11bg = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4))
wds = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5))
global11n = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6))
global11ac = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8))
globalIAPEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("all-down", 0), ("all-up", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPEnable.setStatus('current')
globalIAPCellSize = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("small", 1), ("medium", 2), ("large", 3), ("max", 4), ("auto", 5), ("monitor", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPCellSize.setStatus('current')
globalIAPTxPwr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPTxPwr.setStatus('current')
globalIAPRxThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPRxThreshold.setStatus('current')
globalIAPBeaconRate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPBeaconRate.setStatus('current')
globalIAPBeaconDTIM = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPBeaconDTIM.setStatus('current')
globalIAPLongRetry = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPLongRetry.setStatus('current')
globalIAPShortRetry = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPShortRetry.setStatus('current')
globalIAPMaxStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPMaxStations.setStatus('current')
globalIAPInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPInactiveTime.setStatus('current')
globalIAPReauthPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPReauthPeriod.setStatus('current')
globalIAPSta2Sta = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("forward", 0), ("block", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPSta2Sta.setStatus('current')
globalMgmt = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMgmt.setStatus('current')
leds = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14))
autoChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15))
rogueDetect = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16))
fastRoaming = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17))
autoCell = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24))
ids = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33))
rfMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40))
globalLoadBalancing = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalLoadBalancing.setStatus('current')
globalCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64))).clone(namedValues=NamedValues(("not-set", 0), ("united-states", 1), ("canada", 2), ("australia", 3), ("new-zealand", 4), ("austria", 5), ("belgium", 6), ("denmark", 7), ("finland", 8), ("france", 9), ("germany", 10), ("hungary", 11), ("ireland", 12), ("italy", 13), ("luxembourg", 14), ("netherlands", 15), ("norway", 16), ("poland", 17), ("portugal", 18), ("slovenia", 19), ("spain", 20), ("sweden", 21), ("switzerland", 22), ("united-kingdom", 23), ("japan", 24), ("united-states-ext", 25), ("mexico", 26), ("thailand", 27), ("greece", 28), ("israel", 29), ("south-africa", 30), ("brazil", 31), ("india", 32), ("singapore", 33), ("malaysia", 34), ("korea", 35), ("hong-kong", 36), ("china", 37), ("macao", 38), ("united-states-outdoor", 39), ("united-status-weather-radar", 40), ("russia", 41), ("united-states-non-dfs", 42), ("united-arab-emirates", 43), ("argentina", 44), ("bahrain", 45), ("brunei", 46), ("bahamas", 47), ("chile", 48), ("colombia", 49), ("dominican-republic", 50), ("egypt", 51), ("indonesia", 52), ("kuwait", 53), ("lebanon", 54), ("oman", 55), ("peru", 56), ("philippines", 57), ("qatar", 58), ("saudi-arabia", 59), ("taiwan", 60), ("turkey", 61), ("trinidad", 62), ("ukraine", 63), ("venezuela", 64)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalCountryCode.setStatus('current')
globalSharpCell = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalSharpCell.setStatus('current')
globalIAPMaxPhones = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPMaxPhones.setStatus('current')
globalNumStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalNumStations.setStatus('current')
globalBroadcastRates = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("optimized", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalBroadcastRates.setStatus('current')
globalPublicSafety = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalPublicSafety.setStatus('current')
globalDot11hSupport = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalDot11hSupport.setStatus('current')
globalLoopbackTest = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("alert-only", 1), ("repair-without-reboot", 2), ("reboot-allowed", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalLoopbackTest.setStatus('current')
globalArpFilter = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("passthru", 1), ("proxy", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalArpFilter.setStatus('current')
globalIAPChannelReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIAPChannelReset.setStatus('current')
globalWfaMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalWfaMode.setStatus('current')
globalMaxStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3840))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMaxStations.setStatus('current')
globalMulticastMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("standard", 0), ("convert", 1), ("snoop", 2), ("prune", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMulticastMode.setStatus('current')
globalAutoBandEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalAutoBandEnable.setStatus('current')
globalWmmPowerSave = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalWmmPowerSave.setStatus('current')
globalDscpMappingMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalDscpMappingMode.setStatus('current')
globalDscpMappingTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37), )
if mibBuilder.loadTexts: globalDscpMappingTable.setStatus('current')
globalDscpMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1), ).setIndexNames((0, "XIRRUS-MIB", "globalDscpMappingIndex"))
if mibBuilder.loadTexts: globalDscpMappingEntry.setStatus('current')
globalDscpMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1, 1), Integer32())
if mibBuilder.loadTexts: globalDscpMappingIndex.setStatus('current')
globalDscpMappingDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalDscpMappingDscp.setStatus('current')
globalDscpMappingQos = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 37, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalDscpMappingQos.setStatus('current')
globalMulticastExcludeTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38), )
if mibBuilder.loadTexts: globalMulticastExcludeTable.setStatus('current')
globalMulticastExcludeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1), ).setIndexNames((0, "XIRRUS-MIB", "globalMulticastExcludeIndex"))
if mibBuilder.loadTexts: globalMulticastExcludeEntry.setStatus('current')
globalMulticastExcludeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1, 1), Integer32())
if mibBuilder.loadTexts: globalMulticastExcludeIndex.setStatus('current')
globalMulticastExcludeIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastExcludeIpAddress.setStatus('current')
globalMulticastExcludeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 38, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastExcludeRowStatus.setStatus('current')
globalMulticastExcludeTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMulticastExcludeTableReset.setStatus('current')
globalExtractStaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41), )
if mibBuilder.loadTexts: globalExtractStaInfoTable.setStatus('current')
globalExtractStaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1), ).setIndexNames((0, "XIRRUS-MIB", "globalExtractStaInfoIndex"))
if mibBuilder.loadTexts: globalExtractStaInfoEntry.setStatus('current')
globalExtractStaInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1, 1), Integer32())
if mibBuilder.loadTexts: globalExtractStaInfoIndex.setStatus('current')
globalExtractStaInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: globalExtractStaInfoType.setStatus('current')
globalExtractStaInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 41, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalExtractStaInfoStatus.setStatus('current')
globalStaAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalStaAuthTimeout.setStatus('current')
globalIPv6Filter = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalIPv6Filter.setStatus('current')
globalMulticastForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44), )
if mibBuilder.loadTexts: globalMulticastForwardingTable.setStatus('current')
globalMulticastForwardingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1), ).setIndexNames((0, "XIRRUS-MIB", "globalMulticastForwardingIndex"))
if mibBuilder.loadTexts: globalMulticastForwardingEntry.setStatus('current')
globalMulticastForwardingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1, 1), Integer32())
if mibBuilder.loadTexts: globalMulticastForwardingIndex.setStatus('current')
globalMulticastForwardingIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastForwardingIpAddress.setStatus('current')
globalMulticastForwardingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 44, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastForwardingRowStatus.setStatus('current')
globalMulticastForwardingTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMulticastForwardingTableReset.setStatus('current')
globalMulticastVlanForwardingTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46), )
if mibBuilder.loadTexts: globalMulticastVlanForwardingTable.setStatus('current')
globalMulticastVlanForwardingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1), ).setIndexNames((0, "XIRRUS-MIB", "globalMulticastVlanForwardingIndex"))
if mibBuilder.loadTexts: globalMulticastVlanForwardingEntry.setStatus('current')
globalMulticastVlanForwardingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1, 1), Integer32())
if mibBuilder.loadTexts: globalMulticastVlanForwardingIndex.setStatus('current')
globalMulticastVlanForwardingVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastVlanForwardingVlanNumber.setStatus('current')
globalMulticastVlanForwardingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 46, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastVlanForwardingRowStatus.setStatus('current')
globalMulticastVlanForwardingTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMulticastVlanForwardingTableReset.setStatus('current')
globalMulticastDnsFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48), )
if mibBuilder.loadTexts: globalMulticastDnsFilteringTable.setStatus('current')
globalMulticastDnsFilteringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1), ).setIndexNames((0, "XIRRUS-MIB", "globalMulticastDnsFilteringIndex"))
if mibBuilder.loadTexts: globalMulticastDnsFilteringEntry.setStatus('current')
globalMulticastDnsFilteringIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1, 1), Integer32())
if mibBuilder.loadTexts: globalMulticastDnsFilteringIndex.setStatus('current')
globalMulticastDnsFilteringName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastDnsFilteringName.setStatus('current')
globalMulticastDnsFilteringRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 48, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: globalMulticastDnsFilteringRowStatus.setStatus('current')
globalMulticastDnsFilteringTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalMulticastDnsFilteringTableReset.setStatus('current')
globalDot11kSupport = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalDot11kSupport.setStatus('current')
globalDot11wProtectedManagement = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalDot11wProtectedManagement.setStatus('current')
globalExtractIpAddrDhcpPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: globalExtractIpAddrDhcpPeriod.setStatus('current')
ledsEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("iapUp", 1), ("associated", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ledsEnable.setStatus('current')
ledsActivityTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2), )
if mibBuilder.loadTexts: ledsActivityTable.setStatus('current')
ledsActivityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "ledsActivityIndex"))
if mibBuilder.loadTexts: ledsActivityEntry.setStatus('current')
ledsActivityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: ledsActivityIndex.setStatus('current')
ledsActivityPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ledsActivityPacketType.setStatus('current')
ledsActivityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ledsActivityStatus.setStatus('current')
autoChannelEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("negotiate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelEnable.setStatus('current')
autoChannelPowerUp = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelPowerUp.setStatus('current')
autoChannelSchedule = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 15, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelSchedule.setStatus('current')
rogueDetectEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("standard", 1), ("advanced", 2), ("standard-auto-block", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectEnable.setStatus('current')
rogueDetectSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2), )
if mibBuilder.loadTexts: rogueDetectSSIDTable.setStatus('current')
rogueDetectSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "rogueDetectSSIDIndex"))
if mibBuilder.loadTexts: rogueDetectSSIDEntry.setStatus('current')
rogueDetectSSIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: rogueDetectSSIDIndex.setStatus('current')
rogueDetectSSIDName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rogueDetectSSIDName.setStatus('current')
rogueDetectSSIDStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("known", 1), ("approved", 2), ("blocked", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rogueDetectSSIDStatus.setStatus('current')
rogueDetectSSIDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rogueDetectSSIDRowStatus.setStatus('current')
rogueDetectSSIDMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("bssid-or-ssid", 0), ("bssid", 1), ("ssid", 2), ("manufacturer", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rogueDetectSSIDMatch.setStatus('current')
rogueDetectAPTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3), )
if mibBuilder.loadTexts: rogueDetectAPTable.setStatus('current')
rogueDetectAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1), ).setIndexNames((0, "XIRRUS-MIB", "rogueDetectAPIndex"))
if mibBuilder.loadTexts: rogueDetectAPEntry.setStatus('current')
rogueDetectAPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: rogueDetectAPIndex.setStatus('current')
rogueDetectAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("known", 1), ("approved", 2), ("blocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPStatus.setStatus('current')
rogueDetectAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPSSID.setStatus('current')
rogueDetectAPBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPBSSID.setStatus('current')
rogueDetectAPManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPManufacturer.setStatus('current')
rogueDetectAPChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPChannel.setStatus('current')
rogueDetectAPRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPRSSI.setStatus('current')
rogueDetectAPSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPSecurity.setStatus('current')
rogueDetectAPIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPIPAddress.setStatus('current')
rogueDetectAPTimeDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPTimeDiscovered.setStatus('current')
rogueDetectAPTimeLastActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPTimeLastActive.setStatus('current')
rogueDetectAPType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ibss", 1), ("ess", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPType.setStatus('current')
rogueDetectSSIDTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectSSIDTableReset.setStatus('current')
rogueDetectAPOrigTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5), )
if mibBuilder.loadTexts: rogueDetectAPOrigTable.setStatus('current')
rogueDetectAPOrigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1), ).setIndexNames((0, "XIRRUS-MIB", "rogueDetectAPOrigTableIndex"))
if mibBuilder.loadTexts: rogueDetectAPOrigTableEntry.setStatus('current')
rogueDetectAPOrigTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: rogueDetectAPOrigTableIndex.setStatus('current')
rogueDetectAPOrigTableSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableSSID.setStatus('current')
rogueDetectAPOrigTableBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableBSSID.setStatus('current')
rogueDetectAPOrigTableManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableManufacturer.setStatus('current')
rogueDetectAPOrigTableChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableChannel.setStatus('current')
rogueDetectAPOrigTableBand = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dot11a", 1), ("dot11g", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableBand.setStatus('current')
rogueDetectAPOrigTableRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableRSSI.setStatus('current')
rogueDetectAPOrigTableSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableSecurity.setStatus('current')
rogueDetectAPOrigTableIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableIPAddress.setStatus('current')
rogueDetectAPOrigTableTimeDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableTimeDiscovered.setStatus('current')
rogueDetectAPOrigTableTimeLastActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableTimeLastActive.setStatus('current')
rogueDetectAPOrigTableActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("not-active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableActive.setStatus('current')
rogueDetectAPOrigTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ibss", 1), ("ess", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueDetectAPOrigTableType.setStatus('current')
rogueDetectAutoBlockEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("wep-and-none", 1), ("all", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectAutoBlockEnc.setStatus('current')
rogueDetectAutoBlockRSSI = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-95, -50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectAutoBlockRSSI.setStatus('current')
rogueDetectAutoBlockType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("all", 0), ("ibss", 1), ("ess", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectAutoBlockType.setStatus('current')
rogueDetectAPOrigTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 9), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectAPOrigTablePeriod.setStatus('current')
rogueDetectAutoBlockWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10), )
if mibBuilder.loadTexts: rogueDetectAutoBlockWhitelistTable.setStatus('current')
rogueDetectAutoBlockWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1), ).setIndexNames((0, "XIRRUS-MIB", "rogueDetectAutoBlockWhitelistIndex"))
if mibBuilder.loadTexts: rogueDetectAutoBlockWhitelistEntry.setStatus('current')
rogueDetectAutoBlockWhitelistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: rogueDetectAutoBlockWhitelistIndex.setStatus('current')
rogueDetectAutoBlockWhitelistChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rogueDetectAutoBlockWhitelistChannel.setStatus('current')
rogueDetectAutoBlockWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: rogueDetectAutoBlockWhitelistRowStatus.setStatus('current')
rogueDetectAutoBlockWhitelistTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 16, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueDetectAutoBlockWhitelistTableReset.setStatus('current')
fastRoamingEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("broadcast", 1), ("tunnel", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastRoamingEnable.setStatus('current')
fastRoamingPeerMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("target-only", 0), ("in-range", 1), ("all", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastRoamingPeerMode.setStatus('current')
fastRoamingTargetArrayTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastRoamingTargetArrayTableReset.setStatus('current')
fastRoamingLayer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("layer-2-only", 0), ("layer-2-and-3", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fastRoamingLayer.setStatus('current')
fastRoamingTargetTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6), )
if mibBuilder.loadTexts: fastRoamingTargetTable.setStatus('current')
fastRoamingTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1), ).setIndexNames((0, "XIRRUS-MIB", "fastRoamingTargetIndex"))
if mibBuilder.loadTexts: fastRoamingTargetEntry.setStatus('current')
fastRoamingTargetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: fastRoamingTargetIndex.setStatus('current')
fastRoamingTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("mac", 0), ("ip", 1), ("hostname", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fastRoamingTargetType.setStatus('current')
fastRoamingTargetMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fastRoamingTargetMacAddress.setStatus('current')
fastRoamingTargetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fastRoamingTargetIpAddress.setStatus('current')
fastRoamingTargetHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fastRoamingTargetHostname.setStatus('current')
fastRoamingTargetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 17, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fastRoamingTargetRowStatus.setStatus('current')
autoCellEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCellEnable.setStatus('current')
autoCellOverlap = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCellOverlap.setStatus('current')
autoCellPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCellPeriod.setStatus('current')
autoCellMinTxPwr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCellMinTxPwr.setStatus('current')
autoCellByChan = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 24, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoCellByChan.setStatus('current')
idsEventTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1), )
if mibBuilder.loadTexts: idsEventTable.setStatus('current')
idsEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "idsEventIndex"))
if mibBuilder.loadTexts: idsEventEntry.setStatus('current')
idsEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: idsEventIndex.setStatus('current')
idsEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("beacon-flood", 1), ("probe-req-flood", 2), ("auth-flood", 3), ("assoc-flood", 4), ("disassoc-flood", 5), ("deauth-flood", 6), ("eap-flood", 7), ("ap-impersonation", 8), ("disassoc-attack", 9), ("deauth-attack", 10), ("duration-attack", 11), ("mic-error-attack", 12), ("null-probe-resp", 13), ("seq-num-anomaly", 14), ("sta-impersonation", 15), ("sta-broadcast", 16), ("evil-twin-attack", 17), ("rf-jamming", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventId.setStatus('current')
idsEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventTime.setStatus('current')
idsEventTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventTimestamp.setStatus('current')
idsEventIAP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventIAP.setStatus('current')
idsEventChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventChannel.setStatus('current')
idsEventPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventPeriod.setStatus('current')
idsEventCurPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventCurPackets.setStatus('current')
idsEventAvgPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventAvgPackets.setStatus('current')
idsEventMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventMaxPackets.setStatus('current')
idsEventMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventMacAddress.setStatus('current')
idsEventSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idsEventSSID.setStatus('current')
idsDosAttack = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2))
idsImpersonation = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3))
idsBeaconFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsBeaconFloodMode.setStatus('current')
idsBeaconFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsBeaconFloodThreshold.setStatus('current')
idsBeaconFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsBeaconFloodPeriod.setStatus('current')
idsProbeReqFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsProbeReqFloodMode.setStatus('current')
idsProbeReqFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsProbeReqFloodThreshold.setStatus('current')
idsProbeReqFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsProbeReqFloodPeriod.setStatus('current')
idsAuthFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAuthFloodMode.setStatus('current')
idsAuthFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAuthFloodThreshold.setStatus('current')
idsAuthFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAuthFloodPeriod.setStatus('current')
idsAssocFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAssocFloodMode.setStatus('current')
idsAssocFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAssocFloodThreshold.setStatus('current')
idsAssocFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAssocFloodPeriod.setStatus('current')
idsDisassocFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDisassocFloodMode.setStatus('current')
idsDisassocFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDisassocFloodThreshold.setStatus('current')
idsDisassocFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDisassocFloodPeriod.setStatus('current')
idsDeauthFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDeauthFloodMode.setStatus('current')
idsDeauthFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDeauthFloodThreshold.setStatus('current')
idsDeauthFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDeauthFloodPeriod.setStatus('current')
idsEAPFloodMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("manual", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsEAPFloodMode.setStatus('current')
idsEAPFloodThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsEAPFloodThreshold.setStatus('current')
idsEAPFloodPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsEAPFloodPeriod.setStatus('current')
idsNullProbeRespEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsNullProbeRespEnable.setStatus('current')
idsNullProbeRespThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsNullProbeRespThreshold.setStatus('current')
idsNullProbeRespPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsNullProbeRespPeriod.setStatus('current')
idsMICErrorAttackEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsMICErrorAttackEnable.setStatus('current')
idsMICErrorAttackThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsMICErrorAttackThreshold.setStatus('current')
idsMICErrorAttackPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsMICErrorAttackPeriod.setStatus('current')
idsDisassocAttackEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDisassocAttackEnable.setStatus('current')
idsDisassocAttackThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDisassocAttackThreshold.setStatus('current')
idsDisassocAttackPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDisassocAttackPeriod.setStatus('current')
idsDeauthAttackEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDeauthAttackEnable.setStatus('current')
idsDeauthAttackThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDeauthAttackThreshold.setStatus('current')
idsDeauthAttackPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDeauthAttackPeriod.setStatus('current')
idsDurationAttackEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDurationAttackEnable.setStatus('current')
idsDurationAttackThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDurationAttackThreshold.setStatus('current')
idsDurationAttackPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDurationAttackPeriod.setStatus('current')
idsDurationAttackNAV = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 2, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsDurationAttackNAV.setStatus('current')
idsAPImpersonationEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAPImpersonationEnable.setStatus('current')
idsAPImpersonationThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAPImpersonationThreshold.setStatus('current')
idsAPImpersonationPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsAPImpersonationPeriod.setStatus('current')
idsStationImpersonationEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsStationImpersonationEnable.setStatus('current')
idsStationImpersonationThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsStationImpersonationThreshold.setStatus('current')
idsStationImpersonationPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsStationImpersonationPeriod.setStatus('current')
idsSeqNumAnomalyMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("mgmt", 1), ("data", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsSeqNumAnomalyMode.setStatus('current')
idsEvilTwinAttackEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsEvilTwinAttackEnable.setStatus('current')
idsSeqNumAnomalyGap = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsSeqNumAnomalyGap.setStatus('current')
idsEventTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 33, 4), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idsEventTablePeriod.setStatus('current')
rfMonitorMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("dedicated", 1), ("timeshare", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rfMonitorMode.setStatus('current')
rfMonitorTimeshareScanInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rfMonitorTimeshareScanInterval.setStatus('current')
rfMonitorTimeshareStationThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rfMonitorTimeshareStationThreshold.setStatus('current')
rfMonitorTimeshareTrafficThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 2, 40, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rfMonitorTimeshareTrafficThreshold.setStatus('current')
global11aIAPEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("all-down", 0), ("all-up", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPEnable.setStatus('current')
global11aIAPCellSize = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("small", 1), ("medium", 2), ("large", 3), ("max", 4), ("auto", 5), ("monitor", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPCellSize.setStatus('current')
global11aIAPTxPwr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPTxPwr.setStatus('current')
global11aIAPRxThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPRxThreshold.setStatus('current')
global11aIAPAutoChannelEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("negotiate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPAutoChannelEnable.setStatus('current')
global11aIAPFragThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPFragThreshold.setStatus('current')
global11aIAPRTSThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2347))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPRTSThreshold.setStatus('current')
rates11a = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8))
global11aIAPAutoCellEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPAutoCellEnable.setStatus('current')
autoChannelList11a = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10))
global11aIAPChannelReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPChannelReset.setStatus('current')
global11aIAPAutoCellOverlap = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPAutoCellOverlap.setStatus('current')
global11aIAPAutoCellPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPAutoCellPeriod.setStatus('current')
global11aIAPAutoCellMinTxPwr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPAutoCellMinTxPwr.setStatus('current')
global11aIAPMaxStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3840))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPMaxStations.setStatus('current')
global11aIAPMaxIapStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPMaxIapStations.setStatus('current')
global11aIAPAutoCellByChan = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11aIAPAutoCellByChan.setStatus('current')
rates11aSet = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("optimize-range", 2), ("optimize-throughput", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rates11aSet.setStatus('current')
rates11aTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2), )
if mibBuilder.loadTexts: rates11aTable.setStatus('current')
rates11aEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "rates11aIndex"))
if mibBuilder.loadTexts: rates11aEntry.setStatus('current')
rates11aIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: rates11aIndex.setStatus('current')
rates11aRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rates11aRate.setStatus('current')
rates11aStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("basic", 1), ("supported", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rates11aStatus.setStatus('current')
autoChannelList11aSet = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("use-all", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelList11aSet.setStatus('current')
autoChannelList11aTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2), )
if mibBuilder.loadTexts: autoChannelList11aTable.setStatus('current')
autoChannelList11aEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "autoChannelList11aIndex"))
if mibBuilder.loadTexts: autoChannelList11aEntry.setStatus('current')
autoChannelList11aIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: autoChannelList11aIndex.setStatus('current')
autoChannelList11aChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoChannelList11aChannel.setStatus('current')
autoChannelList11aStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 3, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelList11aStatus.setStatus('current')
global11bgIAPEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("all-down", 0), ("all-up", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPEnable.setStatus('current')
global11bgIAPCellSize = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 0), ("small", 1), ("medium", 2), ("large", 3), ("max", 4), ("auto", 5), ("monitor", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPCellSize.setStatus('current')
global11bgIAPTxPwr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPTxPwr.setStatus('current')
global11bgIAPRxThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPRxThreshold.setStatus('current')
global11bgIAPAutoChannelEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("negotiate", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPAutoChannelEnable.setStatus('current')
global11bgIAPFragThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPFragThreshold.setStatus('current')
global11bgIAPRTSThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2347))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPRTSThreshold.setStatus('current')
global11bgIAPgOnly = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPgOnly.setStatus('current')
global11bgIAPgProtect = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("auto-cts", 1), ("auto-rts", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPgProtect.setStatus('current')
global11bgIAPPreamble = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("long-only", 0), ("auto-length", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPPreamble.setStatus('current')
global11bgIAPSlotTime = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto-time", 0), ("short-only", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPSlotTime.setStatus('current')
rates11bg = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12))
global11bgIAPAutoCellEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPAutoCellEnable.setStatus('current')
autoChannelList11bg = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14))
global11bgIAPChannelReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPChannelReset.setStatus('current')
global11bgIAPAutoCellOverlap = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPAutoCellOverlap.setStatus('current')
global11bgIAPAutoCellPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPAutoCellPeriod.setStatus('current')
global11bgIAPAutoCellMinTxPwr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPAutoCellMinTxPwr.setStatus('current')
global11bgIAPMaxStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3840))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPMaxStations.setStatus('current')
global11bgIAPMaxIapStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPMaxIapStations.setStatus('current')
global11bgIAPAutoCellByChan = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11bgIAPAutoCellByChan.setStatus('current')
rates11bgSet = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("optimize-range", 2), ("optimize-throughput", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rates11bgSet.setStatus('current')
rates11bgTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2), )
if mibBuilder.loadTexts: rates11bgTable.setStatus('current')
rates11bgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "rates11bgIndex"))
if mibBuilder.loadTexts: rates11bgEntry.setStatus('current')
rates11bgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: rates11bgIndex.setStatus('current')
rates11bgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rates11bgRate.setStatus('current')
rates11bgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("basic", 1), ("supported", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rates11bgStatus.setStatus('current')
autoChannelList11bgSet = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("use-all", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelList11bgSet.setStatus('current')
autoChannelList11bgTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2), )
if mibBuilder.loadTexts: autoChannelList11bgTable.setStatus('current')
autoChannelList11bgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "autoChannelList11bgIndex"))
if mibBuilder.loadTexts: autoChannelList11bgEntry.setStatus('current')
autoChannelList11bgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: autoChannelList11bgIndex.setStatus('current')
autoChannelList11bgChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: autoChannelList11bgChannel.setStatus('current')
autoChannelList11bgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 4, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: autoChannelList11bgStatus.setStatus('current')
wdsAutoChannel = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsAutoChannel.setStatus('current')
wdsClientLinkTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkTableReset.setStatus('current')
wdsClientLinkTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3), )
if mibBuilder.loadTexts: wdsClientLinkTable.setStatus('current')
wdsClientLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1), ).setIndexNames((0, "XIRRUS-MIB", "wdsClientLinkIndex"))
if mibBuilder.loadTexts: wdsClientLinkEntry.setStatus('current')
wdsClientLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: wdsClientLinkIndex.setStatus('current')
wdsClientLinkEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkEnable.setStatus('current')
wdsClientLinkMaxIAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkMaxIAPs.setStatus('current')
wdsClientLinkTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkTarget.setStatus('current')
wdsClientLinkSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkSSID.setStatus('current')
wdsClientLinkUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkUsername.setStatus('current')
wdsClientLinkPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkPassword.setStatus('current')
wdsClientLinkPasswordForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsClientLinkPasswordForm.setStatus('current')
wdsHostLinkTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4), )
if mibBuilder.loadTexts: wdsHostLinkTable.setStatus('current')
wdsHostLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1), ).setIndexNames((0, "XIRRUS-MIB", "wdsHostLinkIndex"))
if mibBuilder.loadTexts: wdsHostLinkEntry.setStatus('current')
wdsHostLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: wdsHostLinkIndex.setStatus('current')
wdsHostLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsHostLinkState.setStatus('current')
wdsHostLinkNumIAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsHostLinkNumIAPs.setStatus('current')
wdsHostLinkSource = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsHostLinkSource.setStatus('current')
wdsHostLinkSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsHostLinkSSID.setStatus('current')
wdsAllowStations = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsAllowStations.setStatus('current')
wdsStpEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsStpEnable.setStatus('current')
wdsRoamThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsRoamThreshold.setStatus('current')
wdsRoamAvgWeight = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsRoamAvgWeight.setStatus('current')
global11nEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nEnable.setStatus('current')
global11nTxChains = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nTxChains.setStatus('current')
global11nRxChains = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nRxChains.setStatus('current')
global11nGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("long", 0), ("short", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nGuardInterval.setStatus('current')
global11nAutoBond = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nAutoBond.setStatus('current')
global11nBondedChannelWidth5GHz = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynamic", 0), ("static", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nBondedChannelWidth5GHz.setStatus('current')
global11nBondedChannelWidth2GHz = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynamic", 0), ("static", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11nBondedChannelWidth2GHz.setStatus('current')
rates11n = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8))
rates11nSet = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("default", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rates11nSet.setStatus('current')
rates11nTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2), )
if mibBuilder.loadTexts: rates11nTable.setStatus('current')
rates11nEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "rates11nMCSIndex"))
if mibBuilder.loadTexts: rates11nEntry.setStatus('current')
rates11nMCSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rates11nMCSIndex.setStatus('current')
rates11nMCSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 6, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("basic", 1), ("supported", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rates11nMCSStatus.setStatus('current')
iapSsidToBssidMappingTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7), )
if mibBuilder.loadTexts: iapSsidToBssidMappingTable.setStatus('current')
iapSsidToBssidMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1), ).setIndexNames((0, "XIRRUS-MIB", "iapSsidToBssidMappingIndex"))
if mibBuilder.loadTexts: iapSsidToBssidMappingEntry.setStatus('current')
iapSsidToBssidMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: iapSsidToBssidMappingIndex.setStatus('current')
iapSsidToBssidMappingIAP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapSsidToBssidMappingIAP.setStatus('current')
iapSsidToBssidMappingSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapSsidToBssidMappingSSID.setStatus('current')
iapSsidToBssidMappingBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapSsidToBssidMappingBSSID.setStatus('current')
global11acEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acEnable.setStatus('current')
global11acGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("long", 0), ("short", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acGuardInterval.setStatus('current')
global11acMaxMCS1SS = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("mcs7", 0), ("mcs8", 1), ("mcs9", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acMaxMCS1SS.setStatus('current')
global11acMaxMCS2SS = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("mcs7", 0), ("mcs8", 1), ("mcs9", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acMaxMCS2SS.setStatus('current')
global11acMaxMCS3SS = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("mcs7", 0), ("mcs8", 1), ("mcs9", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acMaxMCS3SS.setStatus('current')
global11acMaxMCS4SS = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("mcs7", 0), ("mcs8", 1), ("mcs9", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acMaxMCS4SS.setStatus('current')
global11acTxBeamForming = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acTxBeamForming.setStatus('current')
global11acMultiUserMimo = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acMultiUserMimo.setStatus('current')
global11acWave2Capability = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: global11acWave2Capability.setStatus('current')
global11acAutoBond = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 1, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: global11acAutoBond.setStatus('current')
ethTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1), )
if mibBuilder.loadTexts: ethTable.setStatus('current')
ethEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "ethIndex"))
if mibBuilder.loadTexts: ethEntry.setStatus('current')
ethIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ethIndex.setStatus('current')
ethName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethName.setStatus('current')
ethEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethEnable.setStatus('current')
ethDHCPBind = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethDHCPBind.setStatus('current')
ethIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethIPAddress.setStatus('current')
ethIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethIPMask.setStatus('current')
ethGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethGateway.setStatus('current')
ethAutoneg = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethAutoneg.setStatus('current')
ethDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("half", 0), ("full", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethDuplex.setStatus('current')
ethSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("speed-10Mbps", 1), ("speed-100Mbps", 2), ("speed-1000Mbps", 3), ("speed-2500Mbps", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethSpeed.setStatus('current')
ethMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1732))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethMTU.setStatus('current')
ethMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethMgmt.setStatus('current')
ethDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethDefault.setStatus('current')
ethPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("link-backup", 0), ("load-balance", 3), ("bridge", 4), ("ieee802dot3ad", 5), ("broadcast", 6), ("mirror", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethPortMode.setStatus('current')
ethBond = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethBond.setStatus('current')
ethLED = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethLED.setStatus('current')
bondTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2), )
if mibBuilder.loadTexts: bondTable.setStatus('current')
bondEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "bondIndex"))
if mibBuilder.loadTexts: bondEntry.setStatus('current')
bondIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: bondIndex.setStatus('current')
bondName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bondName.setStatus('current')
bondMode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 5, 6))).clone(namedValues=NamedValues(("link-backup", 0), ("load-balance", 3), ("ieee802dot3ad", 5), ("broadcast", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bondMode.setStatus('current')
bondMirror = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bondMirror.setStatus('current')
bondActiveVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bondActiveVlans.setStatus('current')
consoleBaud = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 115200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleBaud.setStatus('current')
consoleByteSize = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleByteSize.setStatus('current')
consoleParity = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("odd", 1), ("even", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleParity.setStatus('current')
consoleStopBits = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleStopBits.setStatus('current')
consoleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleTimeout.setStatus('current')
consoleMgmt = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 12, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleMgmt.setStatus('current')
neighborArrayTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1), )
if mibBuilder.loadTexts: neighborArrayTable.setStatus('current')
neighborArrayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "neighborArrayIndex"))
if mibBuilder.loadTexts: neighborArrayEntry.setStatus('current')
neighborArrayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: neighborArrayIndex.setStatus('current')
neighborArrayHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayHostname.setStatus('current')
neighborArrayLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayLocation.setStatus('current')
neighborArrayIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayIPAddress.setStatus('current')
neighborArrayModel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayModel.setStatus('current')
neighborArrayNumIAPsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayNumIAPsUp.setStatus('current')
neighborArrayNumSSIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayNumSSIDs.setStatus('current')
neighborArrayNumActiveSSIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayNumActiveSSIDs.setStatus('current')
neighborArrayNumStationsAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayNumStationsAssoc.setStatus('current')
neighborArrayInRange = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-in-range", 0), ("in-range", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayInRange.setStatus('current')
neighborArrayFastRoam = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-fast-roam", 0), ("fast-roam", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayFastRoam.setStatus('current')
neighborArrayUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 13, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: neighborArrayUptime.setStatus('current')
radiusEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("external", 1), ("internal", 2), ("active-directory", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusEnable.setStatus('current')
radiusServerExternal = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2))
radiusServerInternal = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3))
radiusServerAD = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4))
radiusPriServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusPriServerIPAddress.setStatus('current')
radiusPriServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusPriServerPort.setStatus('current')
radiusPriServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusPriServerSecret.setStatus('current')
radiusSecServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSecServerIPAddress.setStatus('current')
radiusSecServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSecServerPort.setStatus('current')
radiusSecServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSecServerSecret.setStatus('current')
radiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusTimeout.setStatus('current')
radiusAcctEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctEnable.setStatus('current')
radiusAcctPriServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctPriServerIPAddress.setStatus('current')
radiusAcctPriServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctPriServerPort.setStatus('current')
radiusAcctPriServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctPriServerSecret.setStatus('current')
radiusAcctSecServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctSecServerIPAddress.setStatus('current')
radiusAcctSecServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctSecServerPort.setStatus('current')
radiusAcctSecServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctSecServerSecret.setStatus('current')
radiusAcctInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctInterval.setStatus('current')
radiusNasIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusNasIdentifier.setStatus('current')
radiusPriServerHostname = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusPriServerHostname.setStatus('current')
radiusSecServerHostname = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSecServerHostname.setStatus('current')
radiusAcctPriServerHostname = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctPriServerHostname.setStatus('current')
radiusAcctSecServerHostname = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctSecServerHostname.setStatus('current')
radiusPriServerSecretEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusPriServerSecretEnc.setStatus('current')
radiusSecServerSecretEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusSecServerSecretEnc.setStatus('current')
radiusAcctPriServerSecretEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctPriServerSecretEnc.setStatus('current')
radiusAcctSecServerSecretEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusAcctSecServerSecretEnc.setStatus('current')
radiusDASPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusDASPort.setStatus('current')
radiusDASTimeWindow = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 10000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusDASTimeWindow.setStatus('current')
radiusDASEventTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("optional", 0), ("required", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusDASEventTimestamp.setStatus('current')
radiusCalledStationIdFormat = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("bssid-ssid", 0), ("bssid", 1), ("ethernet-mac", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusCalledStationIdFormat.setStatus('current')
radiusStationMACFormat = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("lower", 0), ("upper", 1), ("lower-hyphen", 2), ("upper-hyphen", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusStationMACFormat.setStatus('current')
radiusFailoverTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 2, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusFailoverTimeout.setStatus('current')
radiusUserTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1), )
if mibBuilder.loadTexts: radiusUserTable.setStatus('current')
radiusUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "radiusUserIndex"))
if mibBuilder.loadTexts: radiusUserEntry.setStatus('current')
radiusUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: radiusUserIndex.setStatus('current')
radiusUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusUserID.setStatus('current')
radiusUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusUserPassword.setStatus('current')
radiusUserSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusUserSSID.setStatus('current')
radiusUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusUserRowStatus.setStatus('current')
radiusUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusUserGroup.setStatus('current')
radiusUserPasswordForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radiusUserPasswordForm.setStatus('current')
radiusUserTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radiusUserTableReset.setStatus('current')
activeDirectoryUser = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryUser.setStatus('current')
activeDirectoryPassword = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryPassword.setStatus('current')
activeDirectoryDomainController = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryDomainController.setStatus('current')
activeDirectoryWorkgroup = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryWorkgroup.setStatus('current')
activeDirectoryRealm = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryRealm.setStatus('current')
activeDirectoryJoin = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("join", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryJoin.setStatus('current')
activeDirectoryLeave = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 14, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("leave", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: activeDirectoryLeave.setStatus('current')
roamAssistEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamAssistEnable.setStatus('current')
roamAssistPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamAssistPeriod.setStatus('current')
roamAssistThreshold = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-50, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamAssistThreshold.setStatus('current')
roamAssistDataRate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamAssistDataRate.setStatus('current')
roamAssistDevices = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 15, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: roamAssistDevices.setStatus('current')
wep = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1))
wpa = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2))
wepDefaultKeyID = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wepDefaultKeyID.setStatus('current')
wepKeyTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2), )
if mibBuilder.loadTexts: wepKeyTable.setStatus('current')
wepKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "wepKeyNum"))
if mibBuilder.loadTexts: wepKeyEntry.setStatus('current')
wepKeyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wepKeyNum.setStatus('current')
wepKeySize = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wep40", 1), ("wep128", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wepKeySize.setStatus('current')
wepKeyString = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wepKeyString.setStatus('current')
wepKeyStringForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wepKeyStringForm.setStatus('current')
wpaTKIP = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaTKIP.setStatus('current')
wpaAES = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaAES.setStatus('current')
wpaEAP = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaEAP.setStatus('current')
wpaPSK = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaPSK.setStatus('current')
wpaPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 5), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 64), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaPassphrase.setStatus('current')
wpaRekey = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaRekey.setStatus('current')
wpaPassphraseEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 16, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wpaPassphraseEnc.setStatus('current')
snmpAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentEnable.setStatus('current')
snmpAgentReadWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentReadWriteCommunity.setStatus('current')
snmpAgentTrapHost = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapHost.setStatus('current')
snmpAgentTrapPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapPort.setStatus('current')
snmpAgentTrapAuth = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapAuth.setStatus('current')
snmpAgentReadOnlyCommunity = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentReadOnlyCommunity.setStatus('current')
snmpAgentTrapHost2 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapHost2.setStatus('current')
snmpAgentTrapPort2 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapPort2.setStatus('current')
snmpAgentTrapHost3 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapHost3.setStatus('current')
snmpAgentTrapPort3 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapPort3.setStatus('current')
snmpAgentTrapHost4 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapHost4.setStatus('current')
snmpAgentTrapPort4 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentTrapPort4.setStatus('current')
snmpAgentV3Enable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3Enable.setStatus('current')
snmpAgentV3AuthType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("md5", 0), ("sha", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3AuthType.setStatus('current')
snmpAgentV3PrivProtocol = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("des", 0), ("aes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3PrivProtocol.setStatus('current')
snmpAgentV3ReadWriteUser = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadWriteUser.setStatus('current')
snmpAgentV3ReadWriteUserAuthPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadWriteUserAuthPassphrase.setStatus('current')
snmpAgentV3ReadWriteUserAuthPassphraseEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadWriteUserAuthPassphraseEnc.setStatus('current')
snmpAgentV3ReadWriteUserPrivPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadWriteUserPrivPassphrase.setStatus('current')
snmpAgentV3ReadWriteUserPrivPassphraseEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadWriteUserPrivPassphraseEnc.setStatus('current')
snmpAgentV3ReadOnlyUser = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadOnlyUser.setStatus('current')
snmpAgentV3ReadOnlyUserAuthPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadOnlyUserAuthPassphrase.setStatus('current')
snmpAgentV3ReadOnlyUserAuthPassphraseEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadOnlyUserAuthPassphraseEnc.setStatus('current')
snmpAgentV3ReadOnlyUserPrivPassphrase = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadOnlyUserPrivPassphrase.setStatus('current')
snmpAgentV3ReadOnlyUserPrivPassphraseEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentV3ReadOnlyUserPrivPassphraseEnc.setStatus('current')
snmpAgentEngineID = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(24, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentEngineID.setStatus('current')
snmpAgentRestart = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentRestart.setStatus('current')
snmpAgentKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentKeepAlive.setStatus('current')
snmpAgentReadWriteCommunityEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentReadWriteCommunityEnc.setStatus('current')
snmpAgentReadOnlyCommunityEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 18, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentReadOnlyCommunityEnc.setStatus('current')
ssidTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1), )
if mibBuilder.loadTexts: ssidTable.setStatus('current')
ssidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "ssidIndex"))
if mibBuilder.loadTexts: ssidEntry.setStatus('current')
ssidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ssidIndex.setStatus('current')
ssidName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidName.setStatus('current')
ssidBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidBroadcast.setStatus('current')
ssidBand = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("dot11a", 2), ("dot11bg", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidBand.setStatus('current')
ssidQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidQOS.setStatus('current')
ssidVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidVlan.setStatus('current')
ssidDhcpPool = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidDhcpPool.setStatus('current')
ssidEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("wpa", 2), ("wpa2", 3), ("wpa-both", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidEncryption.setStatus('current')
ssidDefaultSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidDefaultSecurity.setStatus('current')
ssidWepDefaultKeyID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepDefaultKeyID.setStatus('current')
ssidWepKey1Size = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wep40", 1), ("wep128", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidWepKey1Size.setStatus('current')
ssidWepKey1String = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey1String.setStatus('current')
ssidWepKey2Size = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wep40", 1), ("wep128", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidWepKey2Size.setStatus('current')
ssidWepKey2String = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey2String.setStatus('current')
ssidWepKey3Size = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wep40", 1), ("wep128", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidWepKey3Size.setStatus('current')
ssidWepKey3String = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey3String.setStatus('current')
ssidWepKey4Size = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("wep40", 1), ("wep128", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidWepKey4Size.setStatus('current')
ssidWepKey4String = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 26))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey4String.setStatus('current')
ssidWpaEAP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaEAP.setStatus('current')
ssidWpaPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("u-psk", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaPSK.setStatus('current')
ssidWpaPassphrase = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 21), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 128), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaPassphrase.setStatus('current')
ssidRadiusEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("external", 1), ("internal", 2), ("active-directory", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusEnable.setStatus('current')
ssidRadiusPriServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 23), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusPriServerIPAddress.setStatus('current')
ssidRadiusPriServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusPriServerPort.setStatus('current')
ssidRadiusPriServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusPriServerSecret.setStatus('current')
ssidRadiusSecServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 26), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusSecServerIPAddress.setStatus('current')
ssidRadiusSecServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusSecServerPort.setStatus('current')
ssidRadiusSecServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusSecServerSecret.setStatus('current')
ssidRadiusTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusTimeout.setStatus('current')
ssidRadiusAcctEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctEnable.setStatus('current')
ssidRadiusAcctPriServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 31), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctPriServerIPAddress.setStatus('current')
ssidRadiusAcctPriServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctPriServerPort.setStatus('current')
ssidRadiusAcctPriServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctPriServerSecret.setStatus('current')
ssidRadiusAcctSecServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 34), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctSecServerIPAddress.setStatus('current')
ssidRadiusAcctSecServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctSecServerPort.setStatus('current')
ssidRadiusAcctSecServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctSecServerSecret.setStatus('current')
ssidRadiusAcctInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctInterval.setStatus('current')
ssidAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("open", 0), ("radius-mac", 1), ("dot1x", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidAuthentication.setStatus('current')
ssidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 39), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRowStatus.setStatus('current')
ssidRoamingLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("layer-2-only", 0), ("layer-2-and-3", 1), ("none", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRoamingLayer.setStatus('current')
ssidRadiusPriServerHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusPriServerHostname.setStatus('current')
ssidRadiusSecServerHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusSecServerHostname.setStatus('current')
ssidRadiusAcctPriServerHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctPriServerHostname.setStatus('current')
ssidRadiusAcctSecServerHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctSecServerHostname.setStatus('current')
ssidWepKey1StringForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey1StringForm.setStatus('current')
ssidWepKey2StringForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey2StringForm.setStatus('current')
ssidWepKey3StringForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey3StringForm.setStatus('current')
ssidWepKey4StringForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWepKey4StringForm.setStatus('current')
ssidWpaPassphraseForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaPassphraseForm.setStatus('current')
ssidRadiusPriServerSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusPriServerSecretForm.setStatus('current')
ssidRadiusSecServerSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusSecServerSecretForm.setStatus('current')
ssidRadiusAcctPriServerSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctPriServerSecretForm.setStatus('current')
ssidRadiusAcctSecServerSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusAcctSecServerSecretForm.setStatus('current')
ssidFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 54), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidFilterList.setStatus('current')
ssidWpaTKIP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaTKIP.setStatus('current')
ssidWpaAES = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaAES.setStatus('current')
ssidActiveIAPs = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidActiveIAPs.setStatus('current')
ssidAclEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("allow", 1), ("deny", 2), ("deny-include-blocked-rogues", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidAclEnable.setStatus('current')
ssidFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("disable-ssid", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidFallback.setStatus('current')
ssidTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 60), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidTunnel.setStatus('current')
ssidMdmAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("airwatch", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidMdmAuth.setStatus('current')
ssidDhcpOption = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidDhcpOption.setStatus('current')
ssidWpaUPSKCacheTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10080))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaUPSKCacheTimeout.setStatus('current')
ssidWpaUPSKServerConnError = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("allow", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidWpaUPSKServerConnError.setStatus('current')
ssidVlanPool = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidVlanPool.setStatus('current')
ssidExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 66), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidExpiration.setStatus('current')
ssidDateOn = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 67), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidDateOn.setStatus('current')
ssidDateOff = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 68), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidDateOff.setStatus('current')
ssidRadiusFailoverTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 1, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidRadiusFailoverTimeout.setStatus('current')
ssidTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidTableReset.setStatus('current')
ssidTableClear = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidTableClear.setStatus('current')
ssidLimitsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4), )
if mibBuilder.loadTexts: ssidLimitsTable.setStatus('current')
ssidLimitsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1), ).setIndexNames((0, "XIRRUS-MIB", "ssidLimitsIndex"))
if mibBuilder.loadTexts: ssidLimitsEntry.setStatus('current')
ssidLimitsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: ssidLimitsIndex.setStatus('current')
ssidLimitsSsidName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidLimitsSsidName.setStatus('current')
ssidLimitsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsEnable.setStatus('current')
ssidLimitsTrafficLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsTrafficLimit.setStatus('current')
ssidLimitsTrafficLimitSta = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsTrafficLimitSta.setStatus('current')
ssidLimitsTimeOn = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1439))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsTimeOn.setStatus('current')
ssidLimitsTimeOff = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1439))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsTimeOff.setStatus('current')
ssidLimitsDaysOnMon = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnMon.setStatus('current')
ssidLimitsDaysOnTue = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnTue.setStatus('current')
ssidLimitsDaysOnWed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnWed.setStatus('current')
ssidLimitsDaysOnThu = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnThu.setStatus('current')
ssidLimitsDaysOnFri = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnFri.setStatus('current')
ssidLimitsDaysOnSat = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnSat.setStatus('current')
ssidLimitsDaysOnSun = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsDaysOnSun.setStatus('current')
ssidLimitsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidLimitsActive.setStatus('current')
ssidLimitsStationLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3840))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsStationLimit.setStatus('current')
ssidLimitsTrafficLimitKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsTrafficLimitKbps.setStatus('current')
ssidLimitsTrafficLimitKbpsSta = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 400000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidLimitsTrafficLimitKbpsSta.setStatus('current')
ssidWprTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5), )
if mibBuilder.loadTexts: ssidWprTable.setStatus('current')
ssidWprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1), ).setIndexNames((0, "XIRRUS-MIB", "ssidWprIndex"))
if mibBuilder.loadTexts: ssidWprEntry.setStatus('current')
ssidWprIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: ssidWprIndex.setStatus('current')
ssidWprSsidName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssidWprSsidName.setStatus('current')
ssidWprEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprEnable.setStatus('current')
ssidWprServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("external", 0), ("internal", 1), ("cloud", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprServerType.setStatus('current')
ssidWprUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprUrl.setStatus('current')
ssidWprSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprSharedSecret.setStatus('current')
ssidWprScreenType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("splash", 0), ("login", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprScreenType.setStatus('current')
ssidWprScreenTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprScreenTimeout.setStatus('current')
ssidWprLandingPage = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprLandingPage.setStatus('current')
ssidWprSharedSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprSharedSecretForm.setStatus('current')
ssidWprAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("chap", 0), ("pap", 1), ("ms-chap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprAuthType.setStatus('current')
ssidWprHttpsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprHttpsEnable.setStatus('current')
ssidWprBackground = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprBackground.setStatus('current')
ssidWprLogoImage = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprLogoImage.setStatus('current')
ssidWprHeaderText = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprHeaderText.setStatus('current')
ssidWprFooterText = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprFooterText.setStatus('current')
ssidWprAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprAuthTimeout.setStatus('current')
ssidWprHttpsPassthru = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 5, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidWprHttpsPassthru.setStatus('current')
ssidHoneypotWhitelistTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6), )
if mibBuilder.loadTexts: ssidHoneypotWhitelistTable.setStatus('current')
ssidHoneypotWhitelistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1), ).setIndexNames((0, "XIRRUS-MIB", "ssidHoneypotWhitelistIndex"))
if mibBuilder.loadTexts: ssidHoneypotWhitelistEntry.setStatus('current')
ssidHoneypotWhitelistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: ssidHoneypotWhitelistIndex.setStatus('current')
ssidHoneypotWhitelistSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidHoneypotWhitelistSSID.setStatus('current')
ssidHoneypotWhitelistRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidHoneypotWhitelistRowStatus.setStatus('current')
ssidHoneypotWhitelistTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidHoneypotWhitelistTableReset.setStatus('current')
ssidHoneypotBroadcastTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8), )
if mibBuilder.loadTexts: ssidHoneypotBroadcastTable.setStatus('current')
ssidHoneypotBroadcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1), ).setIndexNames((0, "XIRRUS-MIB", "ssidHoneypotBroadcastIndex"))
if mibBuilder.loadTexts: ssidHoneypotBroadcastEntry.setStatus('current')
ssidHoneypotBroadcastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: ssidHoneypotBroadcastIndex.setStatus('current')
ssidHoneypotBroadcastSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidHoneypotBroadcastSSID.setStatus('current')
ssidHoneypotBroadcastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ssidHoneypotBroadcastRowStatus.setStatus('current')
ssidHoneypotBroadcastTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 20, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ssidHoneypotBroadcastTableReset.setStatus('current')
stationAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1), )
if mibBuilder.loadTexts: stationAssociationTable.setStatus('current')
stationAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationAssociationIndex"))
if mibBuilder.loadTexts: stationAssociationEntry.setStatus('current')
stationAssociationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: stationAssociationIndex.setStatus('current')
stationAssociationMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationMACAddress.setStatus('current')
stationAssociationManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationManufacturer.setStatus('current')
stationAssociationIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationIPAddress.setStatus('current')
stationAssociationNetbiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationNetbiosName.setStatus('current')
stationAssociationIAP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationIAP.setStatus('current')
stationAssociationSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationSSID.setStatus('current')
stationAssociationVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationVLAN.setStatus('current')
stationAssociationRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSI.setStatus('current')
stationAssociationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTime.setStatus('current')
stationAssociationTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTxRate.setStatus('current')
stationAssociationRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRxRate.setStatus('current')
stationAssociationRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa1.setStatus('current')
stationAssociationRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa2.setStatus('current')
stationAssociationRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa3.setStatus('current')
stationAssociationRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa4.setStatus('current')
stationAssociationRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa5.setStatus('current')
stationAssociationRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa6.setStatus('current')
stationAssociationRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa7.setStatus('current')
stationAssociationRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa8.setStatus('current')
stationAssociationRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa9.setStatus('current')
stationAssociationRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa10.setStatus('current')
stationAssociationRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa11.setStatus('current')
stationAssociationRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIa12.setStatus('current')
stationAssociationRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIabg1.setStatus('current')
stationAssociationRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIabg2.setStatus('current')
stationAssociationRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIabg3.setStatus('current')
stationAssociationRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationRSSIabg4.setStatus('current')
stationAssociationEncType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("wpa", 2), ("wpa2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationEncType.setStatus('current')
stationAssociationCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("rc4", 1), ("tkip", 2), ("aes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationCipher.setStatus('current')
stationAssociationKeyMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("eap", 1), ("psk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationKeyMgmt.setStatus('current')
stationAssociationBand = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dot11a", 0), ("dot11bg", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationBand.setStatus('current')
stationAssociationChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationChannel.setStatus('current')
stationAssociationMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("dot11b", 1), ("dot11bg", 2), ("dot11abg", 3), ("dot11a", 4), ("dot11ab", 5), ("dot11ag", 6), ("dot11g", 7), ("dot11n", 8), ("dot11bn", 9), ("dot11gn", 10), ("dot11bgn", 11), ("dot11an", 12), ("dot11abn", 13), ("dot11agn", 14), ("dot11abgn", 15), ("dot11anac", 16), ("dot11abgnac", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationMediaType.setStatus('current')
stationAssociationUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationUserName.setStatus('current')
stationAssociationTimeRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa1.setStatus('current')
stationAssociationTimeRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa2.setStatus('current')
stationAssociationTimeRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa3.setStatus('current')
stationAssociationTimeRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa4.setStatus('current')
stationAssociationTimeRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa5.setStatus('current')
stationAssociationTimeRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa6.setStatus('current')
stationAssociationTimeRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa7.setStatus('current')
stationAssociationTimeRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa8.setStatus('current')
stationAssociationTimeRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa9.setStatus('current')
stationAssociationTimeRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa10.setStatus('current')
stationAssociationTimeRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa11.setStatus('current')
stationAssociationTimeRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIa12.setStatus('current')
stationAssociationTimeRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIabg1.setStatus('current')
stationAssociationTimeRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIabg2.setStatus('current')
stationAssociationTimeRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIabg3.setStatus('current')
stationAssociationTimeRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationTimeRSSIabg4.setStatus('current')
stationAssociationHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationHostname.setStatus('current')
stationAssociationDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationDeviceType.setStatus('current')
stationAssociationDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationDeviceClass.setStatus('current')
stationAssociationUserAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 55), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationUserAgent.setStatus('current')
stationAssociationDeviceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("manufacturer", 1), ("netbios-name", 2), ("dhcp-hostname", 3), ("user-agent-string", 4), ("internal-rules", 5), ("external-rules", 6), ("cache", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationDeviceSource.setStatus('current')
stationAssociationDeviceSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationDeviceSourceIndex.setStatus('current')
stationAssociationOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("none", 0), ("b", 1), ("g", 2), ("bg", 3), ("a", 4), ("ab", 5), ("ag", 6), ("abg", 7), ("n", 8), ("bn", 9), ("gn", 10), ("bgn", 11), ("an", 12), ("abn", 13), ("agn", 14), ("abgn", 15), ("ac", 16), ("bac", 17), ("gac", 18), ("bgac", 19), ("aac", 20), ("abac", 21), ("agac", 22), ("abgac", 23), ("nac", 24), ("bnac", 25), ("gnac", 26), ("bgnac", 27), ("anac", 28), ("abnac", 29), ("agnac", 30), ("abgnac", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssociationOperatingMode.setStatus('current')
stationUnassociatedTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2), )
if mibBuilder.loadTexts: stationUnassociatedTable.setStatus('current')
stationUnassociatedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationUnassociatedIndex"))
if mibBuilder.loadTexts: stationUnassociatedEntry.setStatus('current')
stationUnassociatedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: stationUnassociatedIndex.setStatus('current')
stationUnassociatedMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedMACAddress.setStatus('current')
stationUnassociatedManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedManufacturer.setStatus('current')
stationUnassociatedNetbiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedNetbiosName.setStatus('current')
stationUnassociatedMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("dot11b", 1), ("dot11bg", 2), ("dot11abg", 3), ("dot11a", 4), ("dot11ab", 5), ("dot11ag", 6), ("dot11g", 7), ("dot11n", 8), ("dot11bn", 9), ("dot11gn", 10), ("dot11bgn", 11), ("dot11an", 12), ("dot11abn", 13), ("dot11agn", 14), ("dot11abgn", 15), ("dot11anac", 16), ("dot11abgnac", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedMediaType.setStatus('current')
stationUnassociatedTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTxRate.setStatus('current')
stationUnassociatedRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRxRate.setStatus('current')
stationUnassociatedRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSI.setStatus('current')
stationUnassociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTime.setStatus('current')
stationUnassociatedRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa1.setStatus('current')
stationUnassociatedRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa2.setStatus('current')
stationUnassociatedRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa3.setStatus('current')
stationUnassociatedRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa4.setStatus('current')
stationUnassociatedRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa5.setStatus('current')
stationUnassociatedRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa6.setStatus('current')
stationUnassociatedRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa7.setStatus('current')
stationUnassociatedRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa8.setStatus('current')
stationUnassociatedRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa9.setStatus('current')
stationUnassociatedRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa10.setStatus('current')
stationUnassociatedRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa11.setStatus('current')
stationUnassociatedRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIa12.setStatus('current')
stationUnassociatedRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIabg1.setStatus('current')
stationUnassociatedRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIabg2.setStatus('current')
stationUnassociatedRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIabg3.setStatus('current')
stationUnassociatedRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedRSSIabg4.setStatus('current')
stationUnassociatedTimeRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa1.setStatus('current')
stationUnassociatedTimeRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa2.setStatus('current')
stationUnassociatedTimeRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa3.setStatus('current')
stationUnassociatedTimeRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa4.setStatus('current')
stationUnassociatedTimeRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa5.setStatus('current')
stationUnassociatedTimeRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa6.setStatus('current')
stationUnassociatedTimeRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa7.setStatus('current')
stationUnassociatedTimeRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa8.setStatus('current')
stationUnassociatedTimeRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa9.setStatus('current')
stationUnassociatedTimeRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa10.setStatus('current')
stationUnassociatedTimeRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa11.setStatus('current')
stationUnassociatedTimeRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIa12.setStatus('current')
stationUnassociatedTimeRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIabg1.setStatus('current')
stationUnassociatedTimeRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIabg2.setStatus('current')
stationUnassociatedTimeRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIabg3.setStatus('current')
stationUnassociatedTimeRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassociatedTimeRSSIabg4.setStatus('current')
stationDeauthMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(12, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationDeauthMacAddress.setStatus('current')
stationAssocTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4), )
if mibBuilder.loadTexts: stationAssocTable.setStatus('current')
stationAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationAssocMACAddress"))
if mibBuilder.loadTexts: stationAssocEntry.setStatus('current')
stationAssocMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocMACAddress.setStatus('current')
stationAssocManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocManufacturer.setStatus('current')
stationAssocIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocIPAddress.setStatus('current')
stationAssocNetbiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocNetbiosName.setStatus('current')
stationAssocIAP = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocIAP.setStatus('current')
stationAssocSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocSSID.setStatus('current')
stationAssocVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocVLAN.setStatus('current')
stationAssocRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSI.setStatus('current')
stationAssocTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTime.setStatus('current')
stationAssocTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTxRate.setStatus('current')
stationAssocRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRxRate.setStatus('current')
stationAssocRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa1.setStatus('current')
stationAssocRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa2.setStatus('current')
stationAssocRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa3.setStatus('current')
stationAssocRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa4.setStatus('current')
stationAssocRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa5.setStatus('current')
stationAssocRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa6.setStatus('current')
stationAssocRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa7.setStatus('current')
stationAssocRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa8.setStatus('current')
stationAssocRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa9.setStatus('current')
stationAssocRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa10.setStatus('current')
stationAssocRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa11.setStatus('current')
stationAssocRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIa12.setStatus('current')
stationAssocRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIabg1.setStatus('current')
stationAssocRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIabg2.setStatus('current')
stationAssocRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIabg3.setStatus('current')
stationAssocRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocRSSIabg4.setStatus('current')
stationAssocEncType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("wpa", 2), ("wpa2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocEncType.setStatus('current')
stationAssocCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("rc4", 1), ("tkip", 2), ("aes", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocCipher.setStatus('current')
stationAssocKeyMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("eap", 1), ("psk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocKeyMgmt.setStatus('current')
stationAssocBand = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dot11a", 0), ("dot11bg", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocBand.setStatus('current')
stationAssocChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocChannel.setStatus('current')
stationAssocMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("dot11b", 1), ("dot11bg", 2), ("dot11abg", 3), ("dot11a", 4), ("dot11ab", 5), ("dot11ag", 6), ("dot11g", 7), ("dot11n", 8), ("dot11bn", 9), ("dot11gn", 10), ("dot11bgn", 11), ("dot11an", 12), ("dot11abn", 13), ("dot11agn", 14), ("dot11abgn", 15), ("dot11anac", 16), ("dot11abgnac", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocMediaType.setStatus('current')
stationAssocUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocUserName.setStatus('current')
stationAssocTimeRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa1.setStatus('current')
stationAssocTimeRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa2.setStatus('current')
stationAssocTimeRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa3.setStatus('current')
stationAssocTimeRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa4.setStatus('current')
stationAssocTimeRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa5.setStatus('current')
stationAssocTimeRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa6.setStatus('current')
stationAssocTimeRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa7.setStatus('current')
stationAssocTimeRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa8.setStatus('current')
stationAssocTimeRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa9.setStatus('current')
stationAssocTimeRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa10.setStatus('current')
stationAssocTimeRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa11.setStatus('current')
stationAssocTimeRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIa12.setStatus('current')
stationAssocTimeRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIabg1.setStatus('current')
stationAssocTimeRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIabg2.setStatus('current')
stationAssocTimeRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIabg3.setStatus('current')
stationAssocTimeRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocTimeRSSIabg4.setStatus('current')
stationAssocHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocHostname.setStatus('current')
stationAssocDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocDeviceType.setStatus('current')
stationAssocDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocDeviceClass.setStatus('current')
stationAssocUserAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocUserAgent.setStatus('current')
stationAssocDeviceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("manufacturer", 1), ("netbios-name", 2), ("dhcp-hostname", 3), ("user-agent-string", 4), ("internal-rules", 5), ("external-rules", 6), ("cache", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocDeviceSource.setStatus('current')
stationAssocDeviceSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 4, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAssocDeviceSourceIndex.setStatus('current')
stationUnassocTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5), )
if mibBuilder.loadTexts: stationUnassocTable.setStatus('current')
stationUnassocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationUnassocMACAddress"))
if mibBuilder.loadTexts: stationUnassocEntry.setStatus('current')
stationUnassocMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocMACAddress.setStatus('current')
stationUnassocManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocManufacturer.setStatus('current')
stationUnassocNetbiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocNetbiosName.setStatus('current')
stationUnassocMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("dot11b", 1), ("dot11bg", 2), ("dot11abg", 3), ("dot11a", 4), ("dot11ab", 5), ("dot11ag", 6), ("dot11g", 7), ("dot11n", 8), ("dot11bn", 9), ("dot11gn", 10), ("dot11bgn", 11), ("dot11an", 12), ("dot11abn", 13), ("dot11agn", 14), ("dot11abgn", 15), ("dot11anac", 16), ("dot11abgnac", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocMediaType.setStatus('current')
stationUnassocTxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTxRate.setStatus('current')
stationUnassocRxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRxRate.setStatus('current')
stationUnassocRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSI.setStatus('current')
stationUnassocTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTime.setStatus('current')
stationUnassocRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa1.setStatus('current')
stationUnassocRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa2.setStatus('current')
stationUnassocRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa3.setStatus('current')
stationUnassocRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa4.setStatus('current')
stationUnassocRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa5.setStatus('current')
stationUnassocRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa6.setStatus('current')
stationUnassocRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa7.setStatus('current')
stationUnassocRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa8.setStatus('current')
stationUnassocRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa9.setStatus('current')
stationUnassocRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa10.setStatus('current')
stationUnassocRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa11.setStatus('current')
stationUnassocRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIa12.setStatus('current')
stationUnassocRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIabg1.setStatus('current')
stationUnassocRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIabg2.setStatus('current')
stationUnassocRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIabg3.setStatus('current')
stationUnassocRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocRSSIabg4.setStatus('current')
stationUnassocTimeRSSIa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa1.setStatus('current')
stationUnassocTimeRSSIa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa2.setStatus('current')
stationUnassocTimeRSSIa3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa3.setStatus('current')
stationUnassocTimeRSSIa4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa4.setStatus('current')
stationUnassocTimeRSSIa5 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa5.setStatus('current')
stationUnassocTimeRSSIa6 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa6.setStatus('current')
stationUnassocTimeRSSIa7 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa7.setStatus('current')
stationUnassocTimeRSSIa8 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa8.setStatus('current')
stationUnassocTimeRSSIa9 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa9.setStatus('current')
stationUnassocTimeRSSIa10 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa10.setStatus('current')
stationUnassocTimeRSSIa11 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa11.setStatus('current')
stationUnassocTimeRSSIa12 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIa12.setStatus('current')
stationUnassocTimeRSSIabg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIabg1.setStatus('current')
stationUnassocTimeRSSIabg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIabg2.setStatus('current')
stationUnassocTimeRSSIabg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIabg3.setStatus('current')
stationUnassocTimeRSSIabg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationUnassocTimeRSSIabg4.setStatus('current')
stationAssurance = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6))
stationAssuranceEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceEnable.setStatus('current')
stationAssurancePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssurancePeriod.setStatus('current')
stationAssuranceAssocTime = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceAssocTime.setStatus('current')
stationAssuranceAuthFailures = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceAuthFailures.setStatus('current')
stationAssuranceErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceErrorRate.setStatus('current')
stationAssuranceRetryRate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceRetryRate.setStatus('current')
stationAssuranceDataRate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceDataRate.setStatus('current')
stationAssuranceRSSI = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-90, -50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceRSSI.setStatus('current')
stationAssuranceSNR = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceSNR.setStatus('current')
stationAssuranceDistance = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceDistance.setStatus('current')
stationAssuranceTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11), )
if mibBuilder.loadTexts: stationAssuranceTable.setStatus('current')
stationAssuranceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1), ).setIndexNames((0, "XIRRUS-MIB", "staAssuranceIndex"))
if mibBuilder.loadTexts: stationAssuranceEntry.setStatus('current')
staAssuranceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: staAssuranceIndex.setStatus('current')
staAssuranceMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceMACAddress.setStatus('current')
staAssuranceIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceIPAddress.setStatus('current')
staAssuranceNetbiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceNetbiosName.setStatus('current')
staAssuranceManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceManufacturer.setStatus('current')
staAssuranceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceTime.setStatus('current')
staAssuranceTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceTimestamp.setStatus('current')
staAssuranceAssocTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAssocTime.setStatus('current')
staAssuranceAuthFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAuthFailures.setStatus('current')
staAssuranceErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceErrorRate.setStatus('current')
staAssuranceRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceRetryRate.setStatus('current')
staAssuranceDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDataRate.setStatus('current')
staAssuranceRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceRSSI.setStatus('current')
staAssuranceSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceSNR.setStatus('current')
staAssuranceDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDistance.setStatus('current')
staAssuranceDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDeviceType.setStatus('current')
staAssuranceDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDeviceClass.setStatus('current')
staAssuranceActiveAlarmTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceActiveAlarmTimestamp.setStatus('current')
staAssuranceActiveAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("assoc-time", 1), ("auth-fails", 2), ("error-rate", 3), ("retry-rate", 4), ("data-rate", 5), ("rssi", 6), ("snr", 7), ("distance", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceActiveAlarmType.setStatus('current')
staAssuranceAssocTimeTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAssocTimeTimestamp.setStatus('current')
staAssuranceAuthFailuresTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAuthFailuresTimestamp.setStatus('current')
staAssuranceErrorRateTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceErrorRateTimestamp.setStatus('current')
staAssuranceRetryRateTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceRetryRateTimestamp.setStatus('current')
staAssuranceDataRateTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDataRateTimestamp.setStatus('current')
staAssuranceRSSITimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceRSSITimestamp.setStatus('current')
staAssuranceSNRTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceSNRTimestamp.setStatus('current')
staAssuranceDistanceTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDistanceTimestamp.setStatus('current')
staAssuranceAssocTimeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAssocTimeActive.setStatus('current')
staAssuranceAuthFailuresActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAuthFailuresActive.setStatus('current')
staAssuranceErrorRateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceErrorRateActive.setStatus('current')
staAssuranceRetryRateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceRetryRateActive.setStatus('current')
staAssuranceDataRateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDataRateActive.setStatus('current')
staAssuranceRSSIActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceRSSIActive.setStatus('current')
staAssuranceSNRActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceSNRActive.setStatus('current')
staAssuranceDistanceActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceDistanceActive.setStatus('current')
staAssuranceAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 11, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("assoc-time", 1), ("auth-fails", 2), ("error-rate", 3), ("retry-rate", 4), ("data-rate", 5), ("rssi", 6), ("snr", 7), ("distance", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssuranceAlarmType.setStatus('current')
stationAssurTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12), )
if mibBuilder.loadTexts: stationAssurTable.setStatus('current')
stationAssurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1), ).setIndexNames((0, "XIRRUS-MIB", "staAssurMACAddress"))
if mibBuilder.loadTexts: stationAssurEntry.setStatus('current')
staAssurMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurMACAddress.setStatus('current')
staAssurIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurIPAddress.setStatus('current')
staAssurNetbiosName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurNetbiosName.setStatus('current')
staAssurManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurManufacturer.setStatus('current')
staAssurTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurTime.setStatus('current')
staAssurTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurTimestamp.setStatus('current')
staAssurAssocTime = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAssocTime.setStatus('current')
staAssurAuthFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAuthFailures.setStatus('current')
staAssurErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurErrorRate.setStatus('current')
staAssurRetryRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurRetryRate.setStatus('current')
staAssurDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDataRate.setStatus('current')
staAssurRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurRSSI.setStatus('current')
staAssurSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurSNR.setStatus('current')
staAssurDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDistance.setStatus('current')
staAssurDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDeviceType.setStatus('current')
staAssurDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDeviceClass.setStatus('current')
staAssurActiveAlarmTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurActiveAlarmTimestamp.setStatus('current')
staAssurActiveAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("assoc-time", 1), ("auth-fails", 2), ("error-rate", 3), ("retry-rate", 4), ("data-rate", 5), ("rssi", 6), ("snr", 7), ("distance", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurActiveAlarmType.setStatus('current')
staAssurAssocTimeTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAssocTimeTimestamp.setStatus('current')
staAssurAuthFailuresTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAuthFailuresTimestamp.setStatus('current')
staAssurErrorRateTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurErrorRateTimestamp.setStatus('current')
staAssurRetryRateTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurRetryRateTimestamp.setStatus('current')
staAssurDataRateTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDataRateTimestamp.setStatus('current')
staAssurRSSITimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurRSSITimestamp.setStatus('current')
staAssurSNRTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurSNRTimestamp.setStatus('current')
staAssurDistanceTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDistanceTimestamp.setStatus('current')
staAssurAssocTimeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAssocTimeActive.setStatus('current')
staAssurAuthFailuresActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAuthFailuresActive.setStatus('current')
staAssurErrorRateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurErrorRateActive.setStatus('current')
staAssurRetryRateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurRetryRateActive.setStatus('current')
staAssurDataRateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDataRateActive.setStatus('current')
staAssurRSSIActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurRSSIActive.setStatus('current')
staAssurSNRActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurSNRActive.setStatus('current')
staAssurDistanceActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurDistanceActive.setStatus('current')
staAssurAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 12, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 0), ("assoc-time", 1), ("auth-fails", 2), ("error-rate", 3), ("retry-rate", 4), ("data-rate", 5), ("rssi", 6), ("snr", 7), ("distance", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAssurAlarmType.setStatus('current')
stationAssuranceTableClear = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("history", 0), ("all", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceTableClear.setStatus('current')
stationAssuranceTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 6, 14), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAssuranceTablePeriod.setStatus('current')
stationUnassociatedTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 7), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationUnassociatedTablePeriod.setStatus('current')
stationLocTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8), )
if mibBuilder.loadTexts: stationLocTable.setStatus('current')
stationLocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationLocMACAddress"))
if mibBuilder.loadTexts: stationLocEntry.setStatus('current')
stationLocMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationLocMACAddress.setStatus('current')
stationLocRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationLocRSSI.setStatus('current')
stationLocPositionX = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationLocPositionX.setStatus('current')
stationLocPositionY = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationLocPositionY.setStatus('current')
stationLocPositionZ = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 22, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationLocPositionZ.setStatus('current')
ethStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1), )
if mibBuilder.loadTexts: ethStatsTable.setStatus('current')
ethStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "ethStatsIndex"))
if mibBuilder.loadTexts: ethStatsEntry.setStatus('current')
ethStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: ethStatsIndex.setStatus('current')
ethStatsIfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsIfaceName.setStatus('current')
ethStatsIfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsIfaceStatus.setStatus('current')
ethStatsIfaceLink = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsIfaceLink.setStatus('current')
ethStatsIfaceDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("half", 0), ("full", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsIfaceDuplex.setStatus('current')
ethStatsIfaceSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsIfaceSpeed.setStatus('current')
ethStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxBytes.setStatus('current')
ethStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxPackets.setStatus('current')
ethStatsRxCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxCompressed.setStatus('current')
ethStatsRxMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxMulticast.setStatus('current')
ethStatsRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxDropped.setStatus('current')
ethStatsRxFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxFifoErrors.setStatus('current')
ethStatsRxFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxFrameErrors.setStatus('current')
ethStatsRxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsRxTotalErrors.setStatus('current')
ethStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxBytes.setStatus('current')
ethStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxPackets.setStatus('current')
ethStatsTxCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxCompressed.setStatus('current')
ethStatsTxCarrierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxCarrierErrors.setStatus('current')
ethStatsTxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxDropped.setStatus('current')
ethStatsTxFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxFifoErrors.setStatus('current')
ethStatsTxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxCollisions.setStatus('current')
ethStatsTxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTxTotalErrors.setStatus('current')
ethStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethStatsTimePeriod.setStatus('current')
iapStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2), )
if mibBuilder.loadTexts: iapStatsTable.setStatus('current')
iapStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "iapStatsIndex"))
if mibBuilder.loadTexts: iapStatsEntry.setStatus('current')
iapStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: iapStatsIndex.setStatus('current')
iapStatsIfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsIfaceName.setStatus('current')
iapStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxBytes.setStatus('current')
iapStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxPackets.setStatus('current')
iapStatsRxUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxUnicast.setStatus('current')
iapStatsRxMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxMulticast.setStatus('current')
iapStatsRxBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxBroadcast.setStatus('current')
iapStatsRxManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxManagement.setStatus('current')
iapStatsRxBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxBeacons.setStatus('current')
iapStatsRxRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRTS.setStatus('current')
iapStatsRxCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxCTS.setStatus('current')
iapStatsRxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxFragments.setStatus('current')
iapStatsRxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxTotalErrors.setStatus('current')
iapStatsRxTotalRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxTotalRetries.setStatus('current')
iapStatsRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxDropped.setStatus('current')
iapStatsRxUnassociated = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxUnassociated.setStatus('current')
iapStatsRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxCRCErrors.setStatus('current')
iapStatsRxFragErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxFragErrors.setStatus('current')
iapStatsRxEncErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxEncErrors.setStatus('current')
iapStatsRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxOverruns.setStatus('current')
iapStatsRxDuplicates = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxDuplicates.setStatus('current')
iapStatsRxRate1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate1Bytes.setStatus('current')
iapStatsRxRate1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate1Packets.setStatus('current')
iapStatsRxRate1Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate1Errors.setStatus('current')
iapStatsRxRate1Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate1Retries.setStatus('current')
iapStatsRxRate2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate2Bytes.setStatus('current')
iapStatsRxRate2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate2Packets.setStatus('current')
iapStatsRxRate2Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate2Errors.setStatus('current')
iapStatsRxRate2Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate2Retries.setStatus('current')
iapStatsRxRate5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate5Bytes.setStatus('current')
iapStatsRxRate5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate5Packets.setStatus('current')
iapStatsRxRate5Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate5Errors.setStatus('current')
iapStatsRxRate5Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate5Retries.setStatus('current')
iapStatsRxRate11Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate11Bytes.setStatus('current')
iapStatsRxRate11Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate11Packets.setStatus('current')
iapStatsRxRate11Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate11Errors.setStatus('current')
iapStatsRxRate11Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate11Retries.setStatus('current')
iapStatsRxRate6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate6Bytes.setStatus('current')
iapStatsRxRate6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate6Packets.setStatus('current')
iapStatsRxRate6Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate6Errors.setStatus('current')
iapStatsRxRate6Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate6Retries.setStatus('current')
iapStatsRxRate9Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate9Bytes.setStatus('current')
iapStatsRxRate9Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate9Packets.setStatus('current')
iapStatsRxRate9Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate9Errors.setStatus('current')
iapStatsRxRate9Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate9Retries.setStatus('current')
iapStatsRxRate12Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate12Bytes.setStatus('current')
iapStatsRxRate12Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate12Packets.setStatus('current')
iapStatsRxRate12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate12Errors.setStatus('current')
iapStatsRxRate12Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate12Retries.setStatus('current')
iapStatsRxRate18Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate18Bytes.setStatus('current')
iapStatsRxRate18Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate18Packets.setStatus('current')
iapStatsRxRate18Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate18Errors.setStatus('current')
iapStatsRxRate18Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate18Retries.setStatus('current')
iapStatsRxRate24Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate24Bytes.setStatus('current')
iapStatsRxRate24Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate24Packets.setStatus('current')
iapStatsRxRate24Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate24Errors.setStatus('current')
iapStatsRxRate24Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate24Retries.setStatus('current')
iapStatsRxRate36Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate36Bytes.setStatus('current')
iapStatsRxRate36Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate36Packets.setStatus('current')
iapStatsRxRate36Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate36Errors.setStatus('current')
iapStatsRxRate36Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate36Retries.setStatus('current')
iapStatsRxRate48Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate48Bytes.setStatus('current')
iapStatsRxRate48Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate48Packets.setStatus('current')
iapStatsRxRate48Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate48Errors.setStatus('current')
iapStatsRxRate48Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate48Retries.setStatus('current')
iapStatsRxRate54Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate54Bytes.setStatus('current')
iapStatsRxRate54Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate54Packets.setStatus('current')
iapStatsRxRate54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate54Errors.setStatus('current')
iapStatsRxRate54Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsRxRate54Retries.setStatus('current')
iapStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxBytes.setStatus('current')
iapStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxPackets.setStatus('current')
iapStatsTxUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxUnicast.setStatus('current')
iapStatsTxMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxMulticast.setStatus('current')
iapStatsTxBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxBroadcast.setStatus('current')
iapStatsTxManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxManagement.setStatus('current')
iapStatsTxBeacons = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxBeacons.setStatus('current')
iapStatsTxRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRTS.setStatus('current')
iapStatsTxCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxCTS.setStatus('current')
iapStatsTxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxFragments.setStatus('current')
iapStatsTxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxTotalErrors.setStatus('current')
iapStatsTxTotalRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxTotalRetries.setStatus('current')
iapStatsTxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxDropped.setStatus('current')
iapStatsTxUnassociated = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxUnassociated.setStatus('current')
iapStatsTxACKFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxACKFailures.setStatus('current')
iapStatsTxRTSFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRTSFailures.setStatus('current')
iapStatsTxRTSRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRTSRetries.setStatus('current')
iapStatsTxSingleRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxSingleRetries.setStatus('current')
iapStatsTxMultipleRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxMultipleRetries.setStatus('current')
iapStatsTxRate1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate1Bytes.setStatus('current')
iapStatsTxRate1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate1Packets.setStatus('current')
iapStatsTxRate1Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate1Errors.setStatus('current')
iapStatsTxRate1Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate1Retries.setStatus('current')
iapStatsTxRate2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate2Bytes.setStatus('current')
iapStatsTxRate2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate2Packets.setStatus('current')
iapStatsTxRate2Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate2Errors.setStatus('current')
iapStatsTxRate2Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate2Retries.setStatus('current')
iapStatsTxRate5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate5Bytes.setStatus('current')
iapStatsTxRate5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate5Packets.setStatus('current')
iapStatsTxRate5Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate5Errors.setStatus('current')
iapStatsTxRate5Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate5Retries.setStatus('current')
iapStatsTxRate11Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate11Bytes.setStatus('current')
iapStatsTxRate11Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate11Packets.setStatus('current')
iapStatsTxRate11Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate11Errors.setStatus('current')
iapStatsTxRate11Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate11Retries.setStatus('current')
iapStatsTxRate6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate6Bytes.setStatus('current')
iapStatsTxRate6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate6Packets.setStatus('current')
iapStatsTxRate6Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 107), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate6Errors.setStatus('current')
iapStatsTxRate6Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 108), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate6Retries.setStatus('current')
iapStatsTxRate9Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 109), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate9Bytes.setStatus('current')
iapStatsTxRate9Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate9Packets.setStatus('current')
iapStatsTxRate9Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 111), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate9Errors.setStatus('current')
iapStatsTxRate9Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 112), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate9Retries.setStatus('current')
iapStatsTxRate12Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate12Bytes.setStatus('current')
iapStatsTxRate12Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 114), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate12Packets.setStatus('current')
iapStatsTxRate12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 115), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate12Errors.setStatus('current')
iapStatsTxRate12Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate12Retries.setStatus('current')
iapStatsTxRate18Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 117), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate18Bytes.setStatus('current')
iapStatsTxRate18Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 118), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate18Packets.setStatus('current')
iapStatsTxRate18Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate18Errors.setStatus('current')
iapStatsTxRate18Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 120), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate18Retries.setStatus('current')
iapStatsTxRate24Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 121), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate24Bytes.setStatus('current')
iapStatsTxRate24Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 122), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate24Packets.setStatus('current')
iapStatsTxRate24Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 123), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate24Errors.setStatus('current')
iapStatsTxRate24Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 124), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate24Retries.setStatus('current')
iapStatsTxRate36Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate36Bytes.setStatus('current')
iapStatsTxRate36Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 126), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate36Packets.setStatus('current')
iapStatsTxRate36Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 127), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate36Errors.setStatus('current')
iapStatsTxRate36Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 128), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate36Retries.setStatus('current')
iapStatsTxRate48Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 129), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate48Bytes.setStatus('current')
iapStatsTxRate48Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 130), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate48Packets.setStatus('current')
iapStatsTxRate48Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 131), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate48Errors.setStatus('current')
iapStatsTxRate48Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate48Retries.setStatus('current')
iapStatsTxRate54Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 133), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate54Bytes.setStatus('current')
iapStatsTxRate54Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 134), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate54Packets.setStatus('current')
iapStatsTxRate54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 135), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate54Errors.setStatus('current')
iapStatsTxRate54Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxRate54Retries.setStatus('current')
iapStatsTxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 137), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTxUtilization.setStatus('current')
iapStatsNoiseTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 138), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsNoiseTotal.setStatus('current')
iapStatsNoiseDenominator = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 139), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsNoiseDenominator.setStatus('current')
iapStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 2, 1, 140), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapStatsTimePeriod.setStatus('current')
stationStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3), )
if mibBuilder.loadTexts: stationStatsTable.setStatus('current')
stationStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationStatsIndex"))
if mibBuilder.loadTexts: stationStatsEntry.setStatus('current')
stationStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: stationStatsIndex.setStatus('current')
stationStatsMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsMACAddress.setStatus('current')
stationStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxBytes.setStatus('current')
stationStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxPackets.setStatus('current')
stationStatsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxErrors.setStatus('current')
stationStatsRxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRetries.setStatus('current')
stationStatsRxRate1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate1Bytes.setStatus('current')
stationStatsRxRate1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate1Packets.setStatus('current')
stationStatsRxRate1Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate1Errors.setStatus('current')
stationStatsRxRate1Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate1Retries.setStatus('current')
stationStatsRxRate2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate2Bytes.setStatus('current')
stationStatsRxRate2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate2Packets.setStatus('current')
stationStatsRxRate2Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate2Errors.setStatus('current')
stationStatsRxRate2Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate2Retries.setStatus('current')
stationStatsRxRate5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate5Bytes.setStatus('current')
stationStatsRxRate5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate5Packets.setStatus('current')
stationStatsRxRate5Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate5Errors.setStatus('current')
stationStatsRxRate5Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate5Retries.setStatus('current')
stationStatsRxRate11Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate11Bytes.setStatus('current')
stationStatsRxRate11Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate11Packets.setStatus('current')
stationStatsRxRate11Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate11Errors.setStatus('current')
stationStatsRxRate11Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate11Retries.setStatus('current')
stationStatsRxRate6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate6Bytes.setStatus('current')
stationStatsRxRate6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate6Packets.setStatus('current')
stationStatsRxRate6Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate6Errors.setStatus('current')
stationStatsRxRate6Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate6Retries.setStatus('current')
stationStatsRxRate9Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate9Bytes.setStatus('current')
stationStatsRxRate9Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate9Packets.setStatus('current')
stationStatsRxRate9Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate9Errors.setStatus('current')
stationStatsRxRate9Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate9Retries.setStatus('current')
stationStatsRxRate12Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate12Bytes.setStatus('current')
stationStatsRxRate12Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate12Packets.setStatus('current')
stationStatsRxRate12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate12Errors.setStatus('current')
stationStatsRxRate12Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate12Retries.setStatus('current')
stationStatsRxRate18Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate18Bytes.setStatus('current')
stationStatsRxRate18Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate18Packets.setStatus('current')
stationStatsRxRate18Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate18Errors.setStatus('current')
stationStatsRxRate18Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate18Retries.setStatus('current')
stationStatsRxRate24Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate24Bytes.setStatus('current')
stationStatsRxRate24Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate24Packets.setStatus('current')
stationStatsRxRate24Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate24Errors.setStatus('current')
stationStatsRxRate24Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate24Retries.setStatus('current')
stationStatsRxRate36Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate36Bytes.setStatus('current')
stationStatsRxRate36Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate36Packets.setStatus('current')
stationStatsRxRate36Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate36Errors.setStatus('current')
stationStatsRxRate36Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate36Retries.setStatus('current')
stationStatsRxRate48Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate48Bytes.setStatus('current')
stationStatsRxRate48Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate48Packets.setStatus('current')
stationStatsRxRate48Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate48Errors.setStatus('current')
stationStatsRxRate48Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate48Retries.setStatus('current')
stationStatsRxRate54Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate54Bytes.setStatus('current')
stationStatsRxRate54Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate54Packets.setStatus('current')
stationStatsRxRate54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate54Errors.setStatus('current')
stationStatsRxRate54Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsRxRate54Retries.setStatus('current')
stationStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxBytes.setStatus('current')
stationStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxPackets.setStatus('current')
stationStatsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxErrors.setStatus('current')
stationStatsTxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRetries.setStatus('current')
stationStatsTxRate1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate1Bytes.setStatus('current')
stationStatsTxRate1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate1Packets.setStatus('current')
stationStatsTxRate1Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate1Errors.setStatus('current')
stationStatsTxRate1Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate1Retries.setStatus('current')
stationStatsTxRate2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate2Bytes.setStatus('current')
stationStatsTxRate2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate2Packets.setStatus('current')
stationStatsTxRate2Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate2Errors.setStatus('current')
stationStatsTxRate2Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate2Retries.setStatus('current')
stationStatsTxRate5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate5Bytes.setStatus('current')
stationStatsTxRate5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate5Packets.setStatus('current')
stationStatsTxRate5Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate5Errors.setStatus('current')
stationStatsTxRate5Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate5Retries.setStatus('current')
stationStatsTxRate11Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate11Bytes.setStatus('current')
stationStatsTxRate11Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate11Packets.setStatus('current')
stationStatsTxRate11Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate11Errors.setStatus('current')
stationStatsTxRate11Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate11Retries.setStatus('current')
stationStatsTxRate6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate6Bytes.setStatus('current')
stationStatsTxRate6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate6Packets.setStatus('current')
stationStatsTxRate6Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate6Errors.setStatus('current')
stationStatsTxRate6Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate6Retries.setStatus('current')
stationStatsTxRate9Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate9Bytes.setStatus('current')
stationStatsTxRate9Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate9Packets.setStatus('current')
stationStatsTxRate9Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate9Errors.setStatus('current')
stationStatsTxRate9Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate9Retries.setStatus('current')
stationStatsTxRate12Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate12Bytes.setStatus('current')
stationStatsTxRate12Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate12Packets.setStatus('current')
stationStatsTxRate12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate12Errors.setStatus('current')
stationStatsTxRate12Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate12Retries.setStatus('current')
stationStatsTxRate18Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate18Bytes.setStatus('current')
stationStatsTxRate18Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate18Packets.setStatus('current')
stationStatsTxRate18Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate18Errors.setStatus('current')
stationStatsTxRate18Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate18Retries.setStatus('current')
stationStatsTxRate24Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate24Bytes.setStatus('current')
stationStatsTxRate24Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate24Packets.setStatus('current')
stationStatsTxRate24Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate24Errors.setStatus('current')
stationStatsTxRate24Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate24Retries.setStatus('current')
stationStatsTxRate36Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate36Bytes.setStatus('current')
stationStatsTxRate36Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate36Packets.setStatus('current')
stationStatsTxRate36Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate36Errors.setStatus('current')
stationStatsTxRate36Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate36Retries.setStatus('current')
stationStatsTxRate48Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate48Bytes.setStatus('current')
stationStatsTxRate48Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate48Packets.setStatus('current')
stationStatsTxRate48Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate48Errors.setStatus('current')
stationStatsTxRate48Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate48Retries.setStatus('current')
stationStatsTxRate54Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate54Bytes.setStatus('current')
stationStatsTxRate54Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate54Packets.setStatus('current')
stationStatsTxRate54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate54Errors.setStatus('current')
stationStatsTxRate54Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTxRate54Retries.setStatus('current')
stationStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 3, 1, 107), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationStatsTimePeriod.setStatus('current')
vlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4), )
if mibBuilder.loadTexts: vlanStatsTable.setStatus('current')
vlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanStatsIndex"))
if mibBuilder.loadTexts: vlanStatsEntry.setStatus('current')
vlanStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanStatsIndex.setStatus('current')
vlanStatsName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsName.setStatus('current')
vlanStatsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsNumber.setStatus('current')
vlanStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxBytes.setStatus('current')
vlanStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxPackets.setStatus('current')
vlanStatsRxCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxCompressed.setStatus('current')
vlanStatsRxMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxMulticast.setStatus('current')
vlanStatsRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxDropped.setStatus('current')
vlanStatsRxFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxFifoErrors.setStatus('current')
vlanStatsRxFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxFrameErrors.setStatus('current')
vlanStatsRxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsRxTotalErrors.setStatus('current')
vlanStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxBytes.setStatus('current')
vlanStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxPackets.setStatus('current')
vlanStatsTxCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxCompressed.setStatus('current')
vlanStatsTxCarrierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxCarrierErrors.setStatus('current')
vlanStatsTxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxDropped.setStatus('current')
vlanStatsTxFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxFifoErrors.setStatus('current')
vlanStatsTxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxCollisions.setStatus('current')
vlanStatsTxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTxTotalErrors.setStatus('current')
vlanStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStatsTimePeriod.setStatus('current')
wdsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5), )
if mibBuilder.loadTexts: wdsStatsTable.setStatus('current')
wdsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1), ).setIndexNames((0, "XIRRUS-MIB", "wdsStatsIndex"))
if mibBuilder.loadTexts: wdsStatsEntry.setStatus('current')
wdsStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: wdsStatsIndex.setStatus('current')
wdsStatsLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsLinkName.setStatus('current')
wdsStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxBytes.setStatus('current')
wdsStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxPackets.setStatus('current')
wdsStatsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxErrors.setStatus('current')
wdsStatsRxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRetries.setStatus('current')
wdsStatsRxRate1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate1Bytes.setStatus('current')
wdsStatsRxRate1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate1Packets.setStatus('current')
wdsStatsRxRate1Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate1Errors.setStatus('current')
wdsStatsRxRate1Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate1Retries.setStatus('current')
wdsStatsRxRate2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate2Bytes.setStatus('current')
wdsStatsRxRate2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate2Packets.setStatus('current')
wdsStatsRxRate2Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate2Errors.setStatus('current')
wdsStatsRxRate2Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate2Retries.setStatus('current')
wdsStatsRxRate5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate5Bytes.setStatus('current')
wdsStatsRxRate5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate5Packets.setStatus('current')
wdsStatsRxRate5Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate5Errors.setStatus('current')
wdsStatsRxRate5Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate5Retries.setStatus('current')
wdsStatsRxRate11Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate11Bytes.setStatus('current')
wdsStatsRxRate11Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate11Packets.setStatus('current')
wdsStatsRxRate11Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate11Errors.setStatus('current')
wdsStatsRxRate11Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate11Retries.setStatus('current')
wdsStatsRxRate6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate6Bytes.setStatus('current')
wdsStatsRxRate6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate6Packets.setStatus('current')
wdsStatsRxRate6Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate6Errors.setStatus('current')
wdsStatsRxRate6Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate6Retries.setStatus('current')
wdsStatsRxRate9Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate9Bytes.setStatus('current')
wdsStatsRxRate9Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate9Packets.setStatus('current')
wdsStatsRxRate9Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate9Errors.setStatus('current')
wdsStatsRxRate9Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate9Retries.setStatus('current')
wdsStatsRxRate12Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate12Bytes.setStatus('current')
wdsStatsRxRate12Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate12Packets.setStatus('current')
wdsStatsRxRate12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate12Errors.setStatus('current')
wdsStatsRxRate12Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate12Retries.setStatus('current')
wdsStatsRxRate18Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate18Bytes.setStatus('current')
wdsStatsRxRate18Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate18Packets.setStatus('current')
wdsStatsRxRate18Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate18Errors.setStatus('current')
wdsStatsRxRate18Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate18Retries.setStatus('current')
wdsStatsRxRate24Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate24Bytes.setStatus('current')
wdsStatsRxRate24Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate24Packets.setStatus('current')
wdsStatsRxRate24Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate24Errors.setStatus('current')
wdsStatsRxRate24Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate24Retries.setStatus('current')
wdsStatsRxRate36Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate36Bytes.setStatus('current')
wdsStatsRxRate36Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate36Packets.setStatus('current')
wdsStatsRxRate36Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate36Errors.setStatus('current')
wdsStatsRxRate36Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate36Retries.setStatus('current')
wdsStatsRxRate48Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate48Bytes.setStatus('current')
wdsStatsRxRate48Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate48Packets.setStatus('current')
wdsStatsRxRate48Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate48Errors.setStatus('current')
wdsStatsRxRate48Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate48Retries.setStatus('current')
wdsStatsRxRate54Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate54Bytes.setStatus('current')
wdsStatsRxRate54Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate54Packets.setStatus('current')
wdsStatsRxRate54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate54Errors.setStatus('current')
wdsStatsRxRate54Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsRxRate54Retries.setStatus('current')
wdsStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxBytes.setStatus('current')
wdsStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxPackets.setStatus('current')
wdsStatsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxErrors.setStatus('current')
wdsStatsTxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRetries.setStatus('current')
wdsStatsTxRate1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate1Bytes.setStatus('current')
wdsStatsTxRate1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate1Packets.setStatus('current')
wdsStatsTxRate1Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate1Errors.setStatus('current')
wdsStatsTxRate1Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate1Retries.setStatus('current')
wdsStatsTxRate2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate2Bytes.setStatus('current')
wdsStatsTxRate2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate2Packets.setStatus('current')
wdsStatsTxRate2Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate2Errors.setStatus('current')
wdsStatsTxRate2Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate2Retries.setStatus('current')
wdsStatsTxRate5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate5Bytes.setStatus('current')
wdsStatsTxRate5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate5Packets.setStatus('current')
wdsStatsTxRate5Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate5Errors.setStatus('current')
wdsStatsTxRate5Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate5Retries.setStatus('current')
wdsStatsTxRate11Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate11Bytes.setStatus('current')
wdsStatsTxRate11Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate11Packets.setStatus('current')
wdsStatsTxRate11Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate11Errors.setStatus('current')
wdsStatsTxRate11Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate11Retries.setStatus('current')
wdsStatsTxRate6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate6Bytes.setStatus('current')
wdsStatsTxRate6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate6Packets.setStatus('current')
wdsStatsTxRate6Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate6Errors.setStatus('current')
wdsStatsTxRate6Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate6Retries.setStatus('current')
wdsStatsTxRate9Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate9Bytes.setStatus('current')
wdsStatsTxRate9Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate9Packets.setStatus('current')
wdsStatsTxRate9Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate9Errors.setStatus('current')
wdsStatsTxRate9Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate9Retries.setStatus('current')
wdsStatsTxRate12Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate12Bytes.setStatus('current')
wdsStatsTxRate12Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate12Packets.setStatus('current')
wdsStatsTxRate12Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate12Errors.setStatus('current')
wdsStatsTxRate12Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 86), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate12Retries.setStatus('current')
wdsStatsTxRate18Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate18Bytes.setStatus('current')
wdsStatsTxRate18Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 88), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate18Packets.setStatus('current')
wdsStatsTxRate18Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 89), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate18Errors.setStatus('current')
wdsStatsTxRate18Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate18Retries.setStatus('current')
wdsStatsTxRate24Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 91), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate24Bytes.setStatus('current')
wdsStatsTxRate24Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 92), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate24Packets.setStatus('current')
wdsStatsTxRate24Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 93), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate24Errors.setStatus('current')
wdsStatsTxRate24Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 94), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate24Retries.setStatus('current')
wdsStatsTxRate36Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 95), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate36Bytes.setStatus('current')
wdsStatsTxRate36Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 96), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate36Packets.setStatus('current')
wdsStatsTxRate36Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 97), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate36Errors.setStatus('current')
wdsStatsTxRate36Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 98), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate36Retries.setStatus('current')
wdsStatsTxRate48Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 99), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate48Bytes.setStatus('current')
wdsStatsTxRate48Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 100), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate48Packets.setStatus('current')
wdsStatsTxRate48Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 101), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate48Errors.setStatus('current')
wdsStatsTxRate48Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 102), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate48Retries.setStatus('current')
wdsStatsTxRate54Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 103), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate54Bytes.setStatus('current')
wdsStatsTxRate54Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 104), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate54Packets.setStatus('current')
wdsStatsTxRate54Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 105), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate54Errors.setStatus('current')
wdsStatsTxRate54Retries = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 5, 1, 106), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wdsStatsTxRate54Retries.setStatus('current')
spectrumAnalysisTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6), )
if mibBuilder.loadTexts: spectrumAnalysisTable.setStatus('current')
spectrumAnalysisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1), ).setIndexNames((0, "XIRRUS-MIB", "spectrumAnalysisIndex"))
if mibBuilder.loadTexts: spectrumAnalysisEntry.setStatus('current')
spectrumAnalysisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: spectrumAnalysisIndex.setStatus('current')
spectrumAnalysisChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisChannel.setStatus('current')
spectrumAnalysisPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisPackets.setStatus('current')
spectrumAnalysisBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisBytes.setStatus('current')
spectrumAnalysisErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisErrorRate.setStatus('current')
spectrumAnalysisAverageDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisAverageDataRate.setStatus('current')
spectrumAnalysisAverageRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisAverageRSSI.setStatus('current')
spectrumAnalysisSignalToNoiseRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisSignalToNoiseRatio.setStatus('current')
spectrumAnalysisNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisNoiseFloor.setStatus('current')
spectrumAnalysisDot11Busy = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisDot11Busy.setStatus('current')
spectrumAnalysisNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spectrumAnalysisNoise.setStatus('current')
realtimeMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7), )
if mibBuilder.loadTexts: realtimeMonitorTable.setStatus('current')
realtimeMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1), ).setIndexNames((0, "XIRRUS-MIB", "realtimeMonitorIndex"))
if mibBuilder.loadTexts: realtimeMonitorEntry.setStatus('current')
realtimeMonitorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: realtimeMonitorIndex.setStatus('current')
realtimeMonitorIfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorIfaceName.setStatus('current')
realtimeMonitorChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorChannel.setStatus('current')
realtimeMonitorPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorPackets.setStatus('current')
realtimeMonitorBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorBytes.setStatus('current')
realtimeMonitorErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorErrorRate.setStatus('current')
realtimeMonitorAverageDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorAverageDataRate.setStatus('current')
realtimeMonitorAverageRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorAverageRSSI.setStatus('current')
realtimeMonitorSignalToNoiseRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorSignalToNoiseRatio.setStatus('current')
realtimeMonitorNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorNoiseFloor.setStatus('current')
realtimeMonitorDot11Busy = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorDot11Busy.setStatus('current')
realtimeMonitorNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: realtimeMonitorNoise.setStatus('current')
stationAppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8), )
if mibBuilder.loadTexts: stationAppStatsTable.setStatus('current')
stationAppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationAppStatsIndex"))
if mibBuilder.loadTexts: stationAppStatsEntry.setStatus('current')
stationAppStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: stationAppStatsIndex.setStatus('current')
stationAppStatsMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsMACAddress.setStatus('current')
stationAppStatsGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsGuid.setStatus('current')
stationAppStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsTxPackets.setStatus('current')
stationAppStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsRxPackets.setStatus('current')
stationAppStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsTxBytes.setStatus('current')
stationAppStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsRxBytes.setStatus('current')
stationAppStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppStatsTimePeriod.setStatus('current')
stationAppCatStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9), )
if mibBuilder.loadTexts: stationAppCatStatsTable.setStatus('current')
stationAppCatStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1), ).setIndexNames((0, "XIRRUS-MIB", "stationAppCatStatsIndex"))
if mibBuilder.loadTexts: stationAppCatStatsEntry.setStatus('current')
stationAppCatStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: stationAppCatStatsIndex.setStatus('current')
stationAppCatStatsMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsMACAddress.setStatus('current')
stationAppCatStatsGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsGuid.setStatus('current')
stationAppCatStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsTxPackets.setStatus('current')
stationAppCatStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsRxPackets.setStatus('current')
stationAppCatStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsTxBytes.setStatus('current')
stationAppCatStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsRxBytes.setStatus('current')
stationAppCatStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stationAppCatStatsTimePeriod.setStatus('current')
vlanMgmtAppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10), )
if mibBuilder.loadTexts: vlanMgmtAppStatsTable.setStatus('current')
vlanMgmtAppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanMgmtAppStatsIndex"))
if mibBuilder.loadTexts: vlanMgmtAppStatsEntry.setStatus('current')
vlanMgmtAppStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanMgmtAppStatsIndex.setStatus('current')
vlanMgmtAppStatsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsVlan.setStatus('current')
vlanMgmtAppStatsGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsGuid.setStatus('current')
vlanMgmtAppStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsTxPackets.setStatus('current')
vlanMgmtAppStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsRxPackets.setStatus('current')
vlanMgmtAppStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsTxBytes.setStatus('current')
vlanMgmtAppStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsRxBytes.setStatus('current')
vlanMgmtAppStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppStatsTimePeriod.setStatus('current')
vlanMgmtAppCatStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11), )
if mibBuilder.loadTexts: vlanMgmtAppCatStatsTable.setStatus('current')
vlanMgmtAppCatStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanMgmtAppCatStatsIndex"))
if mibBuilder.loadTexts: vlanMgmtAppCatStatsEntry.setStatus('current')
vlanMgmtAppCatStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanMgmtAppCatStatsIndex.setStatus('current')
vlanMgmtAppCatStatsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsVlan.setStatus('current')
vlanMgmtAppCatStatsGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsGuid.setStatus('current')
vlanMgmtAppCatStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsTxPackets.setStatus('current')
vlanMgmtAppCatStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsRxPackets.setStatus('current')
vlanMgmtAppCatStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsTxBytes.setStatus('current')
vlanMgmtAppCatStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsRxBytes.setStatus('current')
vlanMgmtAppCatStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanMgmtAppCatStatsTimePeriod.setStatus('current')
vlanStaAppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12), )
if mibBuilder.loadTexts: vlanStaAppStatsTable.setStatus('current')
vlanStaAppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanStaAppStatsIndex"))
if mibBuilder.loadTexts: vlanStaAppStatsEntry.setStatus('current')
vlanStaAppStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanStaAppStatsIndex.setStatus('current')
vlanStaAppStatsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsVlan.setStatus('current')
vlanStaAppStatsGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsGuid.setStatus('current')
vlanStaAppStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsTxPackets.setStatus('current')
vlanStaAppStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsRxPackets.setStatus('current')
vlanStaAppStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsTxBytes.setStatus('current')
vlanStaAppStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsRxBytes.setStatus('current')
vlanStaAppStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppStatsTimePeriod.setStatus('current')
vlanStaAppCatStatsTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13), )
if mibBuilder.loadTexts: vlanStaAppCatStatsTable.setStatus('current')
vlanStaAppCatStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanStaAppCatStatsIndex"))
if mibBuilder.loadTexts: vlanStaAppCatStatsEntry.setStatus('current')
vlanStaAppCatStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanStaAppCatStatsIndex.setStatus('current')
vlanStaAppCatStatsVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsVlan.setStatus('current')
vlanStaAppCatStatsGuid = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsGuid.setStatus('current')
vlanStaAppCatStatsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsTxPackets.setStatus('current')
vlanStaAppCatStatsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsRxPackets.setStatus('current')
vlanStaAppCatStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsTxBytes.setStatus('current')
vlanStaAppCatStatsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsRxBytes.setStatus('current')
vlanStaAppCatStatsTimePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanStaAppCatStatsTimePeriod.setStatus('current')
stationAppStatsTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 14), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAppStatsTablePeriod.setStatus('current')
stationAppStatsTableClear = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stationAppStatsTableClear.setStatus('current')
vlanStaAppStatsTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 16), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanStaAppStatsTablePeriod.setStatus('current')
vlanMgmtAppStatsTablePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 24, 17), Counter32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanMgmtAppStatsTablePeriod.setStatus('current')
syslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEnable.setStatus('current')
syslogLevel = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogLevel.setStatus('current')
syslogServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogServer.setStatus('current')
syslogConsole = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogConsole.setStatus('current')
syslogSize = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogSize.setStatus('current')
syslogTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6), )
if mibBuilder.loadTexts: syslogTable.setStatus('current')
syslogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1), ).setIndexNames((0, "XIRRUS-MIB", "syslogIndex"))
if mibBuilder.loadTexts: syslogEntry.setStatus('current')
syslogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: syslogIndex.setStatus('current')
syslogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogTimestamp.setStatus('current')
syslogPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogPriority.setStatus('current')
syslogMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syslogMessage.setStatus('current')
syslogSecServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogSecServer.setStatus('current')
syslogLevelConsole = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogLevelConsole.setStatus('current')
syslogLevelPriServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogLevelPriServer.setStatus('current')
syslogLevelSecServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogLevelSecServer.setStatus('current')
syslogTerServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogTerServer.setStatus('current')
syslogLevelTerServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogLevelTerServer.setStatus('current')
syslogEmailServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailServer.setStatus('current')
syslogEmailLevel = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailLevel.setStatus('current')
syslogEmailFromAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailFromAddress.setStatus('current')
syslogEmailToAddress = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailToAddress.setStatus('current')
syslogEmailUsername = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailUsername.setStatus('current')
syslogEmailPassword = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailPassword.setStatus('current')
syslogEmailPasswordEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailPasswordEnc.setStatus('current')
syslogEmailPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogEmailPort.setStatus('current')
syslogPriServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogPriServerPort.setStatus('current')
syslogSecServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogSecServerPort.setStatus('current')
syslogTerServerPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogTerServerPort.setStatus('current')
syslogStationFormat = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("key-value", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogStationFormat.setStatus('current')
syslogTimeFormat = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("rfc3164", 0), ("rfc3339", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogTimeFormat.setStatus('current')
syslogStationUrlLog = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 26, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syslogStationUrlLog.setStatus('current')
systemHostname = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemHostname.setStatus('current')
systemLocation = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLocation.setStatus('current')
systemContactName = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContactName.setStatus('current')
systemContactEmail = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContactEmail.setStatus('current')
systemContactPhone = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemContactPhone.setStatus('current')
systemTelnetEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTelnetEnable.setStatus('current')
systemTelnetTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTelnetTimeout.setStatus('current')
systemSshEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSshEnable.setStatus('current')
systemSshTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSshTimeout.setStatus('current')
systemHttpsEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemHttpsEnable.setStatus('current')
systemHttpsTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemHttpsTimeout.setStatus('current')
systemReboot = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReboot.setStatus('current')
systemReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemReset.setStatus('current')
systemSaveCfg = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("save", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSaveCfg.setStatus('current')
systemUptime = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptime.setStatus('current')
systemArrayInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16))
hardwareConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1))
softwareConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2))
componentTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1), )
if mibBuilder.loadTexts: componentTable.setStatus('current')
componentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "componentIndex"))
if mibBuilder.loadTexts: componentEntry.setStatus('current')
componentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: componentIndex.setStatus('current')
componentName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentName.setStatus('current')
componentPart = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentPart.setStatus('current')
componentSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentSerial.setStatus('current')
componentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentDate.setStatus('current')
fpgaTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2), )
if mibBuilder.loadTexts: fpgaTable.setStatus('current')
fpgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "fpgaIndex"))
if mibBuilder.loadTexts: fpgaEntry.setStatus('current')
fpgaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: fpgaIndex.setStatus('current')
fpgaName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpgaName.setStatus('current')
fpgaBootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpgaBootVersion.setStatus('current')
fpgaSWVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fpgaSWVersion.setStatus('current')
interfaceMACAddressTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3), )
if mibBuilder.loadTexts: interfaceMACAddressTable.setStatus('current')
interfaceMACAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1), ).setIndexNames((0, "XIRRUS-MIB", "interfaceMACAddressIndex"))
if mibBuilder.loadTexts: interfaceMACAddressEntry.setStatus('current')
interfaceMACAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: interfaceMACAddressIndex.setStatus('current')
interfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceName.setStatus('current')
interfaceMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceMACAddress.setStatus('current')
arrayModel = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arrayModel.setStatus('current')
bootLoaderVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootLoaderVersion.setStatus('current')
iapDriverVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iapDriverVersion.setStatus('current')
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('current')
timeThisBoot = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeThisBoot.setStatus('current')
timeLastBoot = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeLastBoot.setStatus('current')
scdFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 16, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scdFirmwareVersion.setStatus('current')
systemMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemMIBVersion.setStatus('current')
systemGroupName = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemGroupName.setStatus('current')
systemStandbyEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStandbyEnable.setStatus('current')
systemStandbyTarget = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(17, 17)).setFixedLength(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStandbyTarget.setStatus('current')
systemTempTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21), )
if mibBuilder.loadTexts: systemTempTable.setStatus('current')
systemTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1), ).setIndexNames((0, "XIRRUS-MIB", "systemTempIndex"))
if mibBuilder.loadTexts: systemTempEntry.setStatus('current')
systemTempIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 1), Integer32())
if mibBuilder.loadTexts: systemTempIndex.setStatus('current')
systemTempComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTempComponent.setStatus('current')
systemTempCelsius = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTempCelsius.setStatus('current')
systemTempFahrenheit = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 21, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTempFahrenheit.setStatus('current')
systemFipsMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemFipsMode.setStatus('current')
systemTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemTelnetPort.setStatus('current')
systemSshPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemSshPort.setStatus('current')
systemHttpsPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemHttpsPort.setStatus('current')
systemLicenseKey = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(23, 23)).setFixedLength(23)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLicenseKey.setStatus('current')
systemLicenseFeatures = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemLicenseFeatures.setStatus('current')
systemRemoteServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 28), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemRemoteServer.setStatus('current')
systemRemoteImage = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemRemoteImage.setStatus('current')
systemRemoteConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemRemoteConfigFile.setStatus('current')
systemHttpsCertificate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("reset", 0), ("self", 1), ("xirrus", 2), ("new", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemHttpsCertificate.setStatus('current')
systemPCIAuditMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemPCIAuditMode.setStatus('current')
systemNetworkAssurance = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemNetworkAssurance.setStatus('current')
systemLicenseVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemLicenseVersion.setStatus('current')
systemLicenseExpDate = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemLicenseExpDate.setStatus('current')
licenseFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36), )
if mibBuilder.loadTexts: licenseFeatureTable.setStatus('current')
licenseFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1), ).setIndexNames((0, "XIRRUS-MIB", "licenseFeatureIndex"))
if mibBuilder.loadTexts: licenseFeatureEntry.setStatus('current')
licenseFeatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 1), Integer32())
if mibBuilder.loadTexts: licenseFeatureIndex.setStatus('current')
licenseFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseFeatureName.setStatus('current')
licenseFeatureStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseFeatureStatus.setStatus('current')
licenseFeatureDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 36, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: licenseFeatureDesc.setStatus('current')
systemRDKMode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemRDKMode.setStatus('current')
systemMaxAuthAttempts = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemMaxAuthAttempts.setStatus('current')
systemLoginReauthPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemLoginReauthPeriod.setStatus('current')
systemPreLoginBanner = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemPreLoginBanner.setStatus('current')
systemPostLoginBanner = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 41), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemPostLoginBanner.setStatus('current')
systemResetReason = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemResetReason.setStatus('current')
systemResetCode = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("reboot-req", 0), ("power-on", 1), ("power-brown-out", 2), ("scd-restart", 3), ("gpc", 4), ("unavailable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemResetCode.setStatus('current')
systemNetworkAssurancePeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemNetworkAssurancePeriod.setStatus('current')
systemLicenseProductType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("array2x3", 1), ("array2x2", 2), ("array3x3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemLicenseProductType.setStatus('current')
systemLicenseMaxNumIAPs = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemLicenseMaxNumIAPs.setStatus('current')
systemCrashInfo = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 47), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCrashInfo.setStatus('current')
systemCompassHeading = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCompassHeading.setStatus('current')
systemXirconEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("enable-aos-only", 1), ("enable-boot-only", 2), ("enable-aos-boot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemXirconEnable.setStatus('current')
systemXirconTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 100000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemXirconTimeout.setStatus('current')
systemXirconPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemXirconPort.setStatus('current')
systemStpEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStpEnable.setStatus('current')
systemFanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFanSpeed.setStatus('current')
systemXmsControl = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemXmsControl.setStatus('current')
systemActivation = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemActivation.setStatus('current')
systemActivationInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemActivationInterval.setStatus('current')
systemStatusLed = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 28, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemStatusLed.setStatus('current')
tunnelTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1), )
if mibBuilder.loadTexts: tunnelTable.setStatus('current')
tunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "tunnelIndex"))
if mibBuilder.loadTexts: tunnelEntry.setStatus('current')
tunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: tunnelIndex.setStatus('current')
tunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelName.setStatus('current')
tunnelEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelEnable.setStatus('current')
tunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("gre", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelType.setStatus('current')
tunnelLocalEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelLocalEndpoint.setStatus('current')
tunnelPriRemoteEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelPriRemoteEndpoint.setStatus('current')
tunnelSecRemoteEndpoint = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelSecRemoteEndpoint.setStatus('current')
tunnelMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(68, 1732))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelMTU.setStatus('current')
tunnelSsids = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelSsids.setStatus('current')
tunnelDhcpOption = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelDhcpOption.setStatus('current')
tunnelFailoverInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelFailoverInterval.setStatus('current')
tunnelFailoverNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelFailoverNumFailures.setStatus('current')
tunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelRowStatus.setStatus('current')
tunnelVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 320))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tunnelVlanList.setStatus('current')
tunnelTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 29, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelTableReset.setStatus('current')
vlanTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanTableReset.setStatus('current')
vlanTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2), )
if mibBuilder.loadTexts: vlanTable.setStatus('current')
vlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanIndex"))
if mibBuilder.loadTexts: vlanEntry.setStatus('current')
vlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanIndex.setStatus('current')
vlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanName.setStatus('current')
vlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanNumber.setStatus('current')
vlanMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanMgmt.setStatus('current')
vlanDHCPBind = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanDHCPBind.setStatus('current')
vlanIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanIPAddress.setStatus('current')
vlanIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanIPMask.setStatus('current')
vlanGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanGateway.setStatus('current')
vlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanRowStatus.setStatus('current')
vlanTunnelServer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanTunnelServer.setStatus('current')
vlanTunnelSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanTunnelSecret.setStatus('current')
vlanTunnelPort = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanTunnelPort.setStatus('current')
vlanTunnelState = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-connected", 0), ("connected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanTunnelState.setStatus('current')
vlanTunnelSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanTunnelSecretForm.setStatus('current')
vlanFastRoaming = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanFastRoaming.setStatus('current')
spanningTreeTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3), )
if mibBuilder.loadTexts: spanningTreeTable.setStatus('current')
spanningTreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1), ).setIndexNames((0, "XIRRUS-MIB", "spanningTreeIndex"))
if mibBuilder.loadTexts: spanningTreeEntry.setStatus('current')
spanningTreeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: spanningTreeIndex.setStatus('current')
spanningTreeVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeVlanName.setStatus('current')
spanningTreeVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeVlanNumber.setStatus('current')
spanningTreeGigLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeGigLinkState.setStatus('current')
spanningTreeWDSClientLink1State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSClientLink1State.setStatus('current')
spanningTreeWDSClientLink2State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSClientLink2State.setStatus('current')
spanningTreeWDSClientLink3State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSClientLink3State.setStatus('current')
spanningTreeWDSClientLink4State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSClientLink4State.setStatus('current')
spanningTreeWDSHostLink1State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSHostLink1State.setStatus('current')
spanningTreeWDSHostLink2State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSHostLink2State.setStatus('current')
spanningTreeWDSHostLink3State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSHostLink3State.setStatus('current')
spanningTreeWDSHostLink4State = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spanningTreeWDSHostLink4State.setStatus('current')
vlanDefaultNumber = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanDefaultNumber.setStatus('current')
vlanNativeNumber = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanNativeNumber.setStatus('current')
vlanUndefinedTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6), )
if mibBuilder.loadTexts: vlanUndefinedTable.setStatus('current')
vlanUndefinedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanUndefinedIndex"))
if mibBuilder.loadTexts: vlanUndefinedEntry.setStatus('current')
vlanUndefinedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanUndefinedIndex.setStatus('current')
vlanUndefinedNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanUndefinedNumber.setStatus('current')
vlanUndefinedInfo = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanUndefinedInfo.setStatus('current')
vlanUndefinedClear = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanUndefinedClear.setStatus('current')
vlanPoolTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9), )
if mibBuilder.loadTexts: vlanPoolTable.setStatus('current')
vlanPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1), ).setIndexNames((0, "XIRRUS-MIB", "vlanPoolIndex"))
if mibBuilder.loadTexts: vlanPoolEntry.setStatus('current')
vlanPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: vlanPoolIndex.setStatus('current')
vlanPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanPoolName.setStatus('current')
vlanPoolListMember = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanPoolListMember.setStatus('current')
vlanPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanPoolRowStatus.setStatus('current')
vlanPoolTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 30, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanPoolTableReset.setStatus('current')
clusterArrayTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1), )
if mibBuilder.loadTexts: clusterArrayTable.setStatus('current')
clusterArrayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "clusterArrayIndex"))
if mibBuilder.loadTexts: clusterArrayEntry.setStatus('current')
clusterArrayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: clusterArrayIndex.setStatus('current')
clusterArrayHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayHostname.setStatus('current')
clusterArrayIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayIPAddress.setStatus('current')
clusterArrayUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayUsername.setStatus('current')
clusterArrayPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayPassword.setStatus('current')
clusterArrayPasswordForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayPasswordForm.setStatus('current')
clusterArrayCluster = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayCluster.setStatus('current')
clusterArrayRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: clusterArrayRowStatus.setStatus('current')
clusterArrayTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 31, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clusterArrayTableReset.setStatus('current')
envCtrlTemperature = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlTemperature.setStatus('current')
envCtrlHumidity = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlHumidity.setStatus('current')
envCtrlCoolRPM1 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlCoolRPM1.setStatus('current')
envCtrlCoolRPM2 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlCoolRPM2.setStatus('current')
envCtrlCoolRPM3 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlCoolRPM3.setStatus('current')
envCtrlCoolRPM4 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlCoolRPM4.setStatus('current')
envCtrlHeatRPM1 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlHeatRPM1.setStatus('current')
envCtrlHeatRPM2 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlHeatRPM2.setStatus('current')
envCtrlArrayOn = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlArrayOn.setStatus('current')
envCtrlCoolOn = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlCoolOn.setStatus('current')
envCtrlHeatOn = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlHeatOn.setStatus('current')
envCtrlSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 32, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: envCtrlSoftwareVersion.setStatus('current')
locationReportingOn = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationReportingOn.setStatus('current')
locationReportingUrl = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationReportingUrl.setStatus('current')
locationReportingKey = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationReportingKey.setStatus('current')
locationReportingPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 33, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 50000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: locationReportingPeriod.setStatus('current')
groupTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1), )
if mibBuilder.loadTexts: groupTable.setStatus('current')
groupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "groupIndex"))
if mibBuilder.loadTexts: groupEntry.setStatus('current')
groupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: groupIndex.setStatus('current')
groupName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupName.setStatus('current')
groupRadiusFilterID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupRadiusFilterID.setStatus('current')
groupEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupEnable.setStatus('current')
groupVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupVlan.setStatus('current')
groupQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupQOS.setStatus('current')
groupDhcpPool = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDhcpPool.setStatus('current')
groupFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupFilterList.setStatus('current')
groupRoamingLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("layer-2-only", 0), ("layer-2-and-3", 1), ("none", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupRoamingLayer.setStatus('current')
groupStationLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3840))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupStationLimit.setStatus('current')
groupTrafficLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupTrafficLimit.setStatus('current')
groupTrafficLimitSta = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupTrafficLimitSta.setStatus('current')
groupTimeOn = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1439))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupTimeOn.setStatus('current')
groupTimeOff = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1439))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupTimeOff.setStatus('current')
groupDaysOnMon = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnMon.setStatus('current')
groupDaysOnTue = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnTue.setStatus('current')
groupDaysOnWed = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnWed.setStatus('current')
groupDaysOnThu = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnThu.setStatus('current')
groupDaysOnFri = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnFri.setStatus('current')
groupDaysOnSat = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnSat.setStatus('current')
groupDaysOnSun = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDaysOnSun.setStatus('current')
groupWprEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprEnable.setStatus('current')
groupWprSplashEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprSplashEnable.setStatus('current')
groupWprSplashTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprSplashTimeout.setStatus('current')
groupWprLandingPage = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprLandingPage.setStatus('current')
groupActive = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: groupActive.setStatus('current')
groupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 27), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupRowStatus.setStatus('current')
groupWprBackground = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupWprBackground.setStatus('current')
groupWprLogoImage = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupWprLogoImage.setStatus('current')
groupWprHeaderText = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupWprHeaderText.setStatus('current')
groupWprFooterText = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupWprFooterText.setStatus('current')
groupFallback = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("disable-group", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupFallback.setStatus('current')
groupDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupDeviceID.setStatus('current')
groupTrafficLimitKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupTrafficLimitKbps.setStatus('current')
groupTrafficLimitKbpsSta = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 400000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupTrafficLimitKbpsSta.setStatus('current')
groupVlanPool = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupVlanPool.setStatus('current')
groupWprServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("external", 0), ("internal", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprServerType.setStatus('current')
groupWprUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprUrl.setStatus('current')
groupWprSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprSharedSecret.setStatus('current')
groupWprSharedSecretForm = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("encrypted", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprSharedSecretForm.setStatus('current')
groupWprScreenType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("splash", 0), ("login", 1), ("none", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprScreenType.setStatus('current')
groupWprHttpsEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprHttpsEnable.setStatus('current')
groupWprAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("chap", 0), ("pap", 1), ("ms-chap", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprAuthType.setStatus('current')
groupWprAuthTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10080))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: groupWprAuthTimeout.setStatus('current')
groupTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 34, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: groupTableReset.setStatus('current')
mdmAirWatchApiURL = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiURL.setStatus('current')
mdmAirWatchApiKey = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiKey.setStatus('current')
mdmAirWatchApiUsername = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiUsername.setStatus('current')
mdmAirWatchApiPassword = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiPassword.setStatus('current')
mdmAirWatchApiPasswordEnc = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiPasswordEnc.setStatus('current')
mdmAirWatchApiTimeout = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiTimeout.setStatus('current')
mdmAirWatchApiPollPeriod = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiPollPeriod.setStatus('current')
mdmAirWatchApiAccessError = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("allow", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchApiAccessError.setStatus('current')
mdmAirWatchRedirectURL = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 35, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmAirWatchRedirectURL.setStatus('current')
netflowEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 36, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("v5", 1), ("v9", 2), ("ipfix", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netflowEnable.setStatus('current')
netflowCollectorHost = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 36, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netflowCollectorHost.setStatus('current')
netflowCollectorPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 36, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netflowCollectorPort.setStatus('current')
wifiTagEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wifiTagEnable.setStatus('current')
wifiTagUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wifiTagUdpPort.setStatus('current')
wifiTagChannel1 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wifiTagChannel1.setStatus('current')
wifiTagChannel2 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wifiTagChannel2.setStatus('current')
wifiTagChannel3 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wifiTagChannel3.setStatus('current')
wifiTagEkahauServer = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 37, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wifiTagEkahauServer.setStatus('current')
wprWhitelistSsidTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1), )
if mibBuilder.loadTexts: wprWhitelistSsidTable.setStatus('current')
wprWhitelistSsidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "wprWhitelistSsidIndex"))
if mibBuilder.loadTexts: wprWhitelistSsidEntry.setStatus('current')
wprWhitelistSsidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: wprWhitelistSsidIndex.setStatus('current')
wprWhitelistSsidDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wprWhitelistSsidDomain.setStatus('current')
wprWhitelistSsidName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wprWhitelistSsidName.setStatus('current')
wprWhitelistSsidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wprWhitelistSsidRowStatus.setStatus('current')
wprWhitelistGroupTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2), )
if mibBuilder.loadTexts: wprWhitelistGroupTable.setStatus('current')
wprWhitelistGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1), ).setIndexNames((0, "XIRRUS-MIB", "wprWhitelistGroupIndex"))
if mibBuilder.loadTexts: wprWhitelistGroupEntry.setStatus('current')
wprWhitelistGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: wprWhitelistGroupIndex.setStatus('current')
wprWhitelistGroupDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wprWhitelistGroupDomain.setStatus('current')
wprWhitelistGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wprWhitelistGroupName.setStatus('current')
wprWhitelistGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wprWhitelistGroupRowStatus.setStatus('current')
wprWhitelistSsidTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wprWhitelistSsidTableReset.setStatus('current')
wprWhitelistGroupTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 38, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wprWhitelistGroupTableReset.setStatus('current')
oauthTokenTable = MibTable((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1), )
if mibBuilder.loadTexts: oauthTokenTable.setStatus('current')
oauthTokenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1), ).setIndexNames((0, "XIRRUS-MIB", "oauthTokenIndex"))
if mibBuilder.loadTexts: oauthTokenEntry.setStatus('current')
oauthTokenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: oauthTokenIndex.setStatus('current')
oauthTokenId = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenId.setStatus('current')
oauthTokenClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenClientId.setStatus('current')
oauthTokenGrantType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenGrantType.setStatus('current')
oauthTokenExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenExpiration.setStatus('current')
oauthTokenUserAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenUserAgent.setStatus('current')
oauthTokenScope = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenScope.setStatus('current')
oauthTokenCode = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenCode.setStatus('current')
oauthTokenType = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oauthTokenType.setStatus('current')
oauthTokenRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 1, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oauthTokenRowStatus.setStatus('current')
oauthTableReset = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 39, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oauthTableReset.setStatus('current')
proxyFwdProxyType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 40, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("bluecoat", 1), ("netboxblue", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyFwdProxyType.setStatus('current')
proxyFwdBlueCoatUrl = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 40, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyFwdBlueCoatUrl.setStatus('current')
proxyFwdNetBoxBlueUrl = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyFwdNetBoxBlueUrl.setStatus('current')
lldpEnable = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpEnable.setStatus('current')
lldpInterval = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpInterval.setStatus('current')
lldpHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpHoldTime.setStatus('current')
lldpRequestPower = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 42, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpRequestPower.setStatus('current')
positionInfoX = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoX.setStatus('current')
positionInfoY = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoY.setStatus('current')
positionInfoZ = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoZ.setStatus('current')
positionInfoScale = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoScale.setStatus('current')
positionInfoAngle = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoAngle.setStatus('current')
positionInfoMount = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("face-down", 0), ("face-up", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoMount.setStatus('current')
positionInfoScope = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("map", 0), ("global", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoScope.setStatus('current')
positionInfoMap = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 43, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: positionInfoMap.setStatus('current')
adminTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 1))
stationTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 2))
generalTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3))
envCtrlTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4))
iapTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5))
trapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 100))
adminLogin = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 1, 1)).setObjects(("XIRRUS-MIB", "adminUsername"))
if mibBuilder.loadTexts: adminLogin.setStatus('current')
adminLogout = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 1, 2)).setObjects(("XIRRUS-MIB", "adminUsername"))
if mibBuilder.loadTexts: adminLogout.setStatus('current')
stationACLFailure = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 2, 1)).setObjects(("XIRRUS-MIB", "stationAssociationMACAddress"))
if mibBuilder.loadTexts: stationACLFailure.setStatus('current')
stationRadiusAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 2, 2)).setObjects(("XIRRUS-MIB", "stationAssociationMACAddress"))
if mibBuilder.loadTexts: stationRadiusAuthFailure.setStatus('current')
resetArray = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 1))
if mibBuilder.loadTexts: resetArray.setStatus('current')
rebootArray = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 2))
if mibBuilder.loadTexts: rebootArray.setStatus('current')
softwareUploadFailure = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 3))
if mibBuilder.loadTexts: softwareUploadFailure.setStatus('current')
softwareUploadSuccess = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 4))
if mibBuilder.loadTexts: softwareUploadSuccess.setStatus('current')
softwareUpgradeFailure = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 5))
if mibBuilder.loadTexts: softwareUpgradeFailure.setStatus('current')
softwareUpgradeSuccess = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 6))
if mibBuilder.loadTexts: softwareUpgradeSuccess.setStatus('current')
dhcpRenewFailure = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 7)).setObjects(("XIRRUS-MIB", "ethStatsIfaceName"))
if mibBuilder.loadTexts: dhcpRenewFailure.setStatus('current')
cfgChange = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 8)).setObjects(("XIRRUS-MIB", "cfgModuleOID"))
if mibBuilder.loadTexts: cfgChange.setStatus('current')
keepAlive = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 9)).setObjects(("XIRRUS-MIB", "systemHostname"))
if mibBuilder.loadTexts: keepAlive.setStatus('current')
encDoorOpened = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 10))
if mibBuilder.loadTexts: encDoorOpened.setStatus('current')
encDoorClosed = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 11))
if mibBuilder.loadTexts: encDoorClosed.setStatus('current')
flashPartitionCorrupt = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 12))
if mibBuilder.loadTexts: flashPartitionCorrupt.setStatus('current')
licenseUpdate = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 13))
if mibBuilder.loadTexts: licenseUpdate.setStatus('current')
radioMixInvalid = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 3, 14))
if mibBuilder.loadTexts: radioMixInvalid.setStatus('current')
envCtrlTempOver = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 1))
if mibBuilder.loadTexts: envCtrlTempOver.setStatus('current')
envCtrlTempUnder = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 2))
if mibBuilder.loadTexts: envCtrlTempUnder.setStatus('current')
envCtrlHumidOver = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 3))
if mibBuilder.loadTexts: envCtrlHumidOver.setStatus('current')
envCtrlFanFail = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 4, 4))
if mibBuilder.loadTexts: envCtrlFanFail.setStatus('current')
iapBeaconProbeFailure = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 1)).setObjects(("XIRRUS-MIB", "iapStatsIfaceName"))
if mibBuilder.loadTexts: iapBeaconProbeFailure.setStatus('current')
iapBeaconProbeFailurePhyReset = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 2)).setObjects(("XIRRUS-MIB", "iapStatsIfaceName"))
if mibBuilder.loadTexts: iapBeaconProbeFailurePhyReset.setStatus('current')
iapBeaconProbeFailureMacReset = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 3)).setObjects(("XIRRUS-MIB", "iapStatsIfaceName"))
if mibBuilder.loadTexts: iapBeaconProbeFailureMacReset.setStatus('current')
iapBeaconProbeFailureArrayReboot = NotificationType((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 5, 4)).setObjects(("XIRRUS-MIB", "iapStatsIfaceName"))
if mibBuilder.loadTexts: iapBeaconProbeFailureArrayReboot.setStatus('current')
cfgModuleOID = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 50, 100, 1), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cfgModuleOID.setStatus('current')
proxyMgmtEnabled = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtEnabled.setStatus('current')
proxyMgmtCustom = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtCustom.setStatus('current')
proxyMgmtHttpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpEnabled.setStatus('current')
proxyMgmtHttpHost = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpHost.setStatus('current')
proxyMgmtHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpPort.setStatus('current')
proxyMgmtHttpUsername = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpUsername.setStatus('current')
proxyMgmtHttpPassword = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpPassword.setStatus('current')
proxyMgmtHttpType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("http", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpType.setStatus('current')
proxyMgmtHttpsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpsEnabled.setStatus('current')
proxyMgmtHttpsHost = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpsHost.setStatus('current')
proxyMgmtHttpsPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpsPort.setStatus('current')
proxyMgmtHttpsUsername = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpsUsername.setStatus('current')
proxyMgmtHttpsPassword = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpsPassword.setStatus('current')
proxyMgmtHttpsType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("https", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtHttpsType.setStatus('current')
proxyMgmtSocksEnabled = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSocksEnabled.setStatus('current')
proxyMgmtSocksIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 16), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSocksIpAddr.setStatus('current')
proxyMgmtSocksPort = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSocksPort.setStatus('current')
proxyMgmtSocksUsername = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSocksUsername.setStatus('current')
proxyMgmtSocksPassword = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSocksPassword.setStatus('current')
proxyMgmtSocksType = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("socks4", 2), ("socks5", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSocksType.setStatus('current')
proxyMgmtSubnet01 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet01.setStatus('current')
proxyMgmtMask01 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 22), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask01.setStatus('current')
proxyMgmtSubnet02 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet02.setStatus('current')
proxyMgmtMask02 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 24), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask02.setStatus('current')
proxyMgmtSubnet03 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet03.setStatus('current')
proxyMgmtMask03 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 26), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask03.setStatus('current')
proxyMgmtSubnet04 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 27), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet04.setStatus('current')
proxyMgmtMask04 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 28), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask04.setStatus('current')
proxyMgmtSubnet05 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 29), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet05.setStatus('current')
proxyMgmtMask05 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 30), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask05.setStatus('current')
proxyMgmtSubnet06 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 31), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet06.setStatus('current')
proxyMgmtMask06 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 32), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask06.setStatus('current')
proxyMgmtSubnet07 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 33), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet07.setStatus('current')
proxyMgmtMask07 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 34), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask07.setStatus('current')
proxyMgmtSubnet08 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 35), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet08.setStatus('current')
proxyMgmtMask08 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 36), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask08.setStatus('current')
proxyMgmtSubnet09 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 37), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet09.setStatus('current')
proxyMgmtMask09 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 38), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask09.setStatus('current')
proxyMgmtSubnet10 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 39), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtSubnet10.setStatus('current')
proxyMgmtMask10 = MibScalar((1, 3, 6, 1, 4, 1, 21013, 1, 2, 41, 40), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyMgmtMask10.setStatus('current')
mibBuilder.exportSymbols("XIRRUS-MIB", stationAssocEncType=stationAssocEncType, wdsStatsTxRate6Bytes=wdsStatsTxRate6Bytes, ssidRadiusSecServerSecret=ssidRadiusSecServerSecret, wdsStatsRxRate9Errors=wdsStatsRxRate9Errors, idsEAPFloodPeriod=idsEAPFloodPeriod, xd4_230Array=xd4_230Array, stationAssocRSSIa7=stationAssocRSSIa7, iapStatsRxRate48Bytes=iapStatsRxRate48Bytes, vlanDefaultNumber=vlanDefaultNumber, stationUnassociatedManufacturer=stationUnassociatedManufacturer, adminPrivSectionTable=adminPrivSectionTable, netflowEnable=netflowEnable, envCtrlHeatRPM2=envCtrlHeatRPM2, radiusUserIndex=radiusUserIndex, wdsStatsRxRate24Bytes=wdsStatsRxRate24Bytes, ethStatsTable=ethStatsTable, vlanStaAppStatsRxBytes=vlanStaAppStatsRxBytes, iapStatsRxRate48Retries=iapStatsRxRate48Retries, xr7230Array=xr7230Array, stationUnassociatedTimeRSSIa7=stationUnassociatedTimeRSSIa7, global11acAutoBond=global11acAutoBond, ssidWpaPassphrase=ssidWpaPassphrase, xd8_240Array=xd8_240Array, stationUnassociatedTablePeriod=stationUnassociatedTablePeriod, stationRadiusAuthFailure=stationRadiusAuthFailure, xr7626Array=xr7626Array, aclIndex=aclIndex, global11bgIAPSlotTime=global11bgIAPSlotTime, adminPrivSectionEntry=adminPrivSectionEntry, wdsClientLinkEntry=wdsClientLinkEntry, staAssurRSSIActive=staAssurRSSIActive, iapStatsTxUtilization=iapStatsTxUtilization, stationStatsRxRate18Bytes=stationStatsRxRate18Bytes, idsMICErrorAttackThreshold=idsMICErrorAttackThreshold, adminPrivilege=adminPrivilege, stationUnassociatedTimeRSSIabg1=stationUnassociatedTimeRSSIabg1, ethIPAddress=ethIPAddress, systemStpEnable=systemStpEnable, globalLoopbackTest=globalLoopbackTest, radiusStationMACFormat=radiusStationMACFormat, adminHistoryUsername=adminHistoryUsername, ethGateway=ethGateway, radiusSecServerSecretEnc=radiusSecServerSecretEnc, ssidRadiusAcctSecServerSecret=ssidRadiusAcctSecServerSecret, wprWhitelistGroupTableReset=wprWhitelistGroupTableReset, idsProbeReqFloodMode=idsProbeReqFloodMode, globalMulticastDnsFilteringTable=globalMulticastDnsFilteringTable, wdsStatsTxRate5Bytes=wdsStatsTxRate5Bytes, rfMonitorTimeshareStationThreshold=rfMonitorTimeshareStationThreshold, syslogSize=syslogSize, iapStatsRxRate12Errors=iapStatsRxRate12Errors, staAssurActiveAlarmTimestamp=staAssurActiveAlarmTimestamp, spanningTreeWDSClientLink2State=spanningTreeWDSClientLink2State, stationAssociationEntry=stationAssociationEntry, autoChannel=autoChannel, stationAssociationIPAddress=stationAssociationIPAddress, xr4447Array=xr4447Array, filterListTable=filterListTable, iapStatsRxRate1Retries=iapStatsRxRate1Retries, stationAssociationRSSIa9=stationAssociationRSSIa9, fastRoamingEnable=fastRoamingEnable, stationAssocMACAddress=stationAssocMACAddress, wdsStatsRxRate24Packets=wdsStatsRxRate24Packets, radiusPriServerPort=radiusPriServerPort, stationStatsRxRate18Errors=stationStatsRxRate18Errors, mdmAirWatchApiTimeout=mdmAirWatchApiTimeout, vlanStaAppCatStatsIndex=vlanStaAppCatStatsIndex, wdsStatsTxRate54Bytes=wdsStatsTxRate54Bytes, stationUnassociatedTimeRSSIabg4=stationUnassociatedTimeRSSIabg4, staAssurAuthFailuresTimestamp=staAssurAuthFailuresTimestamp, iapSsidToBssidMappingIAP=iapSsidToBssidMappingIAP, stationAssocUserName=stationAssocUserName, systemCompassHeading=systemCompassHeading, wprWhitelistSsidDomain=wprWhitelistSsidDomain, xh8_130Array=xh8_130Array, xr420hArray=xr420hArray, stationAssociationRxRate=stationAssociationRxRate, systemPostLoginBanner=systemPostLoginBanner, globalMulticastDnsFilteringName=globalMulticastDnsFilteringName, ssidWepKey1String=ssidWepKey1String, wdsStatsRxRate2Errors=wdsStatsRxRate2Errors, rogueDetectAutoBlockEnc=rogueDetectAutoBlockEnc, ssidRadiusPriServerIPAddress=ssidRadiusPriServerIPAddress, filterDstIPAddressMask=filterDstIPAddressMask, xh4_120Array=xh4_120Array, aclSsidTableReset=aclSsidTableReset, oauthTokenType=oauthTokenType, ssidMdmAuth=ssidMdmAuth, iapStatsRxRate5Packets=iapStatsRxRate5Packets, xr2226hArray=xr2226hArray, xh4_240Array=xh4_240Array, idsStationImpersonationThreshold=idsStationImpersonationThreshold, ssidWepKey3Size=ssidWepKey3Size, stationStatsRxRate12Bytes=stationStatsRxRate12Bytes, dns=dns, adminPrivSectionName=adminPrivSectionName, iapStatsEntry=iapStatsEntry, vlan=vlan, ssidAuthentication=ssidAuthentication, stationStatsRxErrors=stationStatsRxErrors, systemXirconEnable=systemXirconEnable, radiusUserTable=radiusUserTable, hardwareConfig=hardwareConfig, xr7630Array=xr7630Array, ssidRadiusAcctInterval=ssidRadiusAcctInterval, xr1236hArray=xr1236hArray, snmpAgentTrapPort=snmpAgentTrapPort, vlanStaAppCatStatsTxPackets=vlanStaAppCatStatsTxPackets, xn12Array=xn12Array, stationUnassociatedRSSI=stationUnassociatedRSSI, rogueDetectSSIDStatus=rogueDetectSSIDStatus, snmpAgentV3ReadOnlyUserPrivPassphrase=snmpAgentV3ReadOnlyUserPrivPassphrase, groupWprSharedSecret=groupWprSharedSecret, fpgaTable=fpgaTable, wdsRoamAvgWeight=wdsRoamAvgWeight, global11bgIAPAutoCellByChan=global11bgIAPAutoCellByChan, wdsStatsRxRate36Retries=wdsStatsRxRate36Retries, stationStatsTxRate12Retries=stationStatsTxRate12Retries, ntpSecondary=ntpSecondary, wdsClientLinkTable=wdsClientLinkTable, iapStatsRxRate5Bytes=iapStatsRxRate5Bytes, consoleTimeout=consoleTimeout, idsEventTimestamp=idsEventTimestamp, dnsSrv2=dnsSrv2, adminPrivLevelNumber=adminPrivLevelNumber, xa8_230Array=xa8_230Array, realtimeMonitorChannel=realtimeMonitorChannel, vlanStaAppStatsIndex=vlanStaAppStatsIndex, staAssurDistanceTimestamp=staAssurDistanceTimestamp, spectrumAnalysisDot11Busy=spectrumAnalysisDot11Busy, stationStatsTxRate9Bytes=stationStatsTxRate9Bytes, globalMulticastVlanForwardingTable=globalMulticastVlanForwardingTable, stationStatsRxRate48Packets=stationStatsRxRate48Packets, stationUnassocRSSIa4=stationUnassocRSSIa4, interfaceMACAddressTable=interfaceMACAddressTable, ledsActivityStatus=ledsActivityStatus, groupDaysOnTue=groupDaysOnTue, iapWdsClientLink=iapWdsClientLink, stationAppStatsGuid=stationAppStatsGuid, xr7247Array=xr7247Array, global11nTxChains=global11nTxChains, xd8_120Array=xd8_120Array, ssidLimitsEnable=ssidLimitsEnable, globalIAPBeaconDTIM=globalIAPBeaconDTIM, iapStatsRxRate36Retries=iapStatsRxRate36Retries, wdsStatsTxRate5Errors=wdsStatsTxRate5Errors, ssidTableClear=ssidTableClear, stationAppCatStatsTable=stationAppCatStatsTable, vlanStaAppCatStatsEntry=vlanStaAppCatStatsEntry, vlanMgmtAppCatStatsRxPackets=vlanMgmtAppCatStatsRxPackets, syslogEmailFromAddress=syslogEmailFromAddress, oauthTokenIndex=oauthTokenIndex, vlanUndefinedNumber=vlanUndefinedNumber, vlanStatsRxBytes=vlanStatsRxBytes, rogueDetectAPOrigTableRSSI=rogueDetectAPOrigTableRSSI, aclSsidRowStatus=aclSsidRowStatus, stationUnassocTimeRSSIa1=stationUnassocTimeRSSIa1, dateTimeZoneHours=dateTimeZoneHours, vlanStaAppCatStatsTxBytes=vlanStaAppCatStatsTxBytes, positionInfoAngle=positionInfoAngle, stationAssociationEncType=stationAssociationEncType, cdpInfoSoftware=cdpInfoSoftware, wdsStatsTxRate18Retries=wdsStatsTxRate18Retries, ssidRadiusTimeout=ssidRadiusTimeout, filterSetVlan=filterSetVlan, idsEventTablePeriod=idsEventTablePeriod, componentTable=componentTable, locationReportingOn=locationReportingOn, wdsStatsEntry=wdsStatsEntry, globalMulticastExcludeTable=globalMulticastExcludeTable, filterType=filterType, ssidLimitsTrafficLimitSta=ssidLimitsTrafficLimitSta, mdmAirWatchApiUsername=mdmAirWatchApiUsername, vlanPoolIndex=vlanPoolIndex, systemResetReason=systemResetReason, iapStatsTxRate36Packets=iapStatsTxRate36Packets, xr1136Array=xr1136Array, ethStatsRxFifoErrors=ethStatsRxFifoErrors, xr7636Array=xr7636Array, ssidLimitsTrafficLimitKbpsSta=ssidLimitsTrafficLimitKbpsSta, xr1120hArray=xr1120hArray, trapObjects=trapObjects, PYSNMP_MODULE_ID=xirrus, ethStatsIfaceName=ethStatsIfaceName, global11acGuardInterval=global11acGuardInterval, xr7236Array=xr7236Array, vlanMgmtAppStatsGuid=vlanMgmtAppStatsGuid, globalIAPShortRetry=globalIAPShortRetry, rogueDetectAPEntry=rogueDetectAPEntry, dhcpPoolMaxLease=dhcpPoolMaxLease, ssidLimitsIndex=ssidLimitsIndex, wdsStatsRxRate1Retries=wdsStatsRxRate1Retries, wdsStatsTxRate6Errors=wdsStatsTxRate6Errors, syslogServer=syslogServer, systemMIBVersion=systemMIBVersion, rates11aSet=rates11aSet, stationUnassociatedMACAddress=stationUnassociatedMACAddress, groupRowStatus=groupRowStatus, cdpInterval=cdpInterval, stationUnassociatedRSSIa5=stationUnassociatedRSSIa5, wdsStatsRxRate54Packets=wdsStatsRxRate54Packets, filterSrcIPAddress=filterSrcIPAddress, global11acMultiUserMimo=global11acMultiUserMimo, wdsStatsTxRate1Retries=wdsStatsTxRate1Retries, vlanStaAppStatsTable=vlanStaAppStatsTable, global11acEnable=global11acEnable, xh3_240Array=xh3_240Array, idsEventTable=idsEventTable, ssidRadiusSecServerPort=ssidRadiusSecServerPort, stationStatsEntry=stationStatsEntry, adminHistoryIndex=adminHistoryIndex, appListMemberIndex=appListMemberIndex, iapStatsRxRate36Errors=iapStatsRxRate36Errors, ssidWprLandingPage=ssidWprLandingPage, globalMulticastForwardingTable=globalMulticastForwardingTable, spanningTreeTable=spanningTreeTable, adminIndex=adminIndex, iapDot11Mode=iapDot11Mode, ssidHoneypotBroadcastRowStatus=ssidHoneypotBroadcastRowStatus, appListMemberApp=appListMemberApp, vlanNumber=vlanNumber, stationAssocRSSIa8=stationAssocRSSIa8, vlanStatsIndex=vlanStatsIndex, snmpAgentReadOnlyCommunity=snmpAgentReadOnlyCommunity, iapPresent=iapPresent, ssidRadiusAcctPriServerPort=ssidRadiusAcctPriServerPort, wprWhitelistGroupDomain=wprWhitelistGroupDomain, proxyMgmtHttpsType=proxyMgmtHttpsType, ssidRadiusAcctSecServerPort=ssidRadiusAcctSecServerPort, ssidHoneypotWhitelistEntry=ssidHoneypotWhitelistEntry, fastRoamingTargetEntry=fastRoamingTargetEntry, licenseFeatureIndex=licenseFeatureIndex, globalMulticastExcludeIpAddress=globalMulticastExcludeIpAddress, globalIAPEnable=globalIAPEnable, ethStatsTxPackets=ethStatsTxPackets, componentName=componentName, xh8_230Array=xh8_230Array, systemNetworkAssurance=systemNetworkAssurance, proxyMgmtHttpEnabled=proxyMgmtHttpEnabled, stationAppCatStatsRxBytes=stationAppCatStatsRxBytes, globalMulticastExcludeIndex=globalMulticastExcludeIndex, ethStatsRxFrameErrors=ethStatsRxFrameErrors, iapStatsRxRate24Packets=iapStatsRxRate24Packets, ssidRadiusSecServerIPAddress=ssidRadiusSecServerIPAddress, iapStatsTxUnassociated=iapStatsTxUnassociated, vlanMgmtAppStatsTxPackets=vlanMgmtAppStatsTxPackets, xa8_120Array=xa8_120Array, stationAppStatsTxBytes=stationAppStatsTxBytes, xa2_230Array=xa2_230Array, acl=acl, iapStatsTxRate12Retries=iapStatsTxRate12Retries, vlanMgmtAppCatStatsEntry=vlanMgmtAppCatStatsEntry, spanningTreeVlanName=spanningTreeVlanName, adminPasswordForm=adminPasswordForm)
mibBuilder.exportSymbols("XIRRUS-MIB", tunnelPriRemoteEndpoint=tunnelPriRemoteEndpoint, staAssuranceIndex=staAssuranceIndex, softwareUploadFailure=softwareUploadFailure, stationUnassocTimeRSSIa4=stationUnassocTimeRSSIa4, stationUnassociatedTable=stationUnassociatedTable, stationStatsRxBytes=stationStatsRxBytes, syslogEnable=syslogEnable, rates11aIndex=rates11aIndex, rogueDetectAPOrigTableType=rogueDetectAPOrigTableType, stationStatsRxRate12Retries=stationStatsRxRate12Retries, wdsStatsTxRate54Packets=wdsStatsTxRate54Packets, vlanDHCPBind=vlanDHCPBind, stationUnassocNetbiosName=stationUnassocNetbiosName, stationAssociationRSSIa8=stationAssociationRSSIa8, proxyMgmtMask01=proxyMgmtMask01, groupEnable=groupEnable, spectrumAnalysisBytes=spectrumAnalysisBytes, wdsStatsRxRate9Packets=wdsStatsRxRate9Packets, global11aIAPAutoCellMinTxPwr=global11aIAPAutoCellMinTxPwr, iapTable=iapTable, ssidRadiusPriServerPort=ssidRadiusPriServerPort, rogueDetectAutoBlockWhitelistTableReset=rogueDetectAutoBlockWhitelistTableReset, stationAssociationTimeRSSIa4=stationAssociationTimeRSSIa4, cfgChange=cfgChange, rates11bgStatus=rates11bgStatus, staAssurAssocTimeActive=staAssurAssocTimeActive, iapStatsTxRate12Errors=iapStatsTxRate12Errors, stationStatsRxRate54Packets=stationStatsRxRate54Packets, stationAssociationDeviceType=stationAssociationDeviceType, stationUnassociatedTimeRSSIa5=stationUnassociatedTimeRSSIa5, proxyMgmtSubnet04=proxyMgmtSubnet04, ssidWepKey1StringForm=ssidWepKey1StringForm, stationUnassociatedRSSIa4=stationUnassociatedRSSIa4, ethStatsEntry=ethStatsEntry, globalDot11hSupport=globalDot11hSupport, proxyFwd=proxyFwd, radiusAcctPriServerPort=radiusAcctPriServerPort, ssidAclEnable=ssidAclEnable, stationStatsTxRate24Retries=stationStatsTxRate24Retries, rates11nSet=rates11nSet, wdsStatsTxRate24Retries=wdsStatsTxRate24Retries, stationStatsTxRate9Retries=stationStatsTxRate9Retries, globalDscpMappingTable=globalDscpMappingTable, consoleParity=consoleParity, radiusPriServerHostname=radiusPriServerHostname, idsDisassocFloodMode=idsDisassocFloodMode, stationAppStatsTableClear=stationAppStatsTableClear, stationStatsTxRate1Errors=stationStatsTxRate1Errors, bondEntry=bondEntry, vlanPoolTable=vlanPoolTable, ssidDhcpOption=ssidDhcpOption, vlanStatsRxTotalErrors=vlanStatsRxTotalErrors, rogueDetectAPOrigTableManufacturer=rogueDetectAPOrigTableManufacturer, stationAssocTimeRSSIa8=stationAssocTimeRSSIa8, staAssurIPAddress=staAssurIPAddress, stationAssociationRSSIa3=stationAssociationRSSIa3, radius=radius, mdmAirWatchApiKey=mdmAirWatchApiKey, iapStatsRxUnassociated=iapStatsRxUnassociated, wdsClientLinkUsername=wdsClientLinkUsername, rogueDetectAutoBlockWhitelistChannel=rogueDetectAutoBlockWhitelistChannel, xr1247Array=xr1247Array, adminPassword=adminPassword, snmpAgentV3ReadWriteUserPrivPassphraseEnc=snmpAgentV3ReadWriteUserPrivPassphraseEnc, iapSsidToBssidMappingEntry=iapSsidToBssidMappingEntry, ethBond=ethBond, rogueDetectAPSecurity=rogueDetectAPSecurity, stationUnassociatedTime=stationUnassociatedTime, stationUnassociatedRSSIa3=stationUnassociatedRSSIa3, groupFilterList=groupFilterList, ssidWprFooterText=ssidWprFooterText, staAssuranceDeviceClass=staAssuranceDeviceClass, netflowCollectorPort=netflowCollectorPort, wdsHostLinkSource=wdsHostLinkSource, adminRadiusPriServerPort=adminRadiusPriServerPort, global11aIAPMaxIapStations=global11aIAPMaxIapStations, autoChannelList11bgTable=autoChannelList11bgTable, activeDirectoryWorkgroup=activeDirectoryWorkgroup, stationUnassociatedTimeRSSIa1=stationUnassociatedTimeRSSIa1, staAssuranceMACAddress=staAssuranceMACAddress, stationUnassocRSSIa12=stationUnassocRSSIa12, ids=ids, global11bgIAPChannelReset=global11bgIAPChannelReset, cdpInfoInterface=cdpInfoInterface, iapStatsRxRate2Bytes=iapStatsRxRate2Bytes, filterAppDescription=filterAppDescription, bondMirror=bondMirror, wepKeyString=wepKeyString, iapStatsRxRate18Errors=iapStatsRxRate18Errors, wdsStatsRxRate18Errors=wdsStatsRxRate18Errors, staAssuranceRetryRateActive=staAssuranceRetryRateActive, staAssuranceNetbiosName=staAssuranceNetbiosName, filterAppGuid=filterAppGuid, stationAssurancePeriod=stationAssurancePeriod, systemLicenseExpDate=systemLicenseExpDate, stationUnassociatedTimeRSSIa8=stationUnassociatedTimeRSSIa8, iapStatsTxRate5Packets=iapStatsTxRate5Packets, staAssurNetbiosName=staAssurNetbiosName, ssidActiveIAPs=ssidActiveIAPs, wdsClientLinkPasswordForm=wdsClientLinkPasswordForm, consoleStopBits=consoleStopBits, stationAssuranceEnable=stationAssuranceEnable, staAssuranceManufacturer=staAssuranceManufacturer, systemTempFahrenheit=systemTempFahrenheit, groupDaysOnWed=groupDaysOnWed, wdsStatsRxRate5Bytes=wdsStatsRxRate5Bytes, vlanIPAddress=vlanIPAddress, staAssuranceSNR=staAssuranceSNR, idsSeqNumAnomalyGap=idsSeqNumAnomalyGap, realtimeMonitorPackets=realtimeMonitorPackets, consoleByteSize=consoleByteSize, tunnelSsids=tunnelSsids, radiusAcctPriServerSecretEnc=radiusAcctPriServerSecretEnc, rfMonitorTimeshareTrafficThreshold=rfMonitorTimeshareTrafficThreshold, filterPort=filterPort, stationAssociationRSSIa7=stationAssociationRSSIa7, stationAssocTimeRSSIa12=stationAssocTimeRSSIa12, staAssuranceDistanceActive=staAssuranceDistanceActive, stationUnassociatedTimeRSSIa10=stationUnassociatedTimeRSSIa10, globalMulticastVlanForwardingEntry=globalMulticastVlanForwardingEntry, wpaPassphraseEnc=wpaPassphraseEnc, stationAssocHostname=stationAssocHostname, ssidRadiusAcctSecServerIPAddress=ssidRadiusAcctSecServerIPAddress, xd2_130Array=xd2_130Array, stationAssuranceSNR=stationAssuranceSNR, xa8_240Array=xa8_240Array, xd2_120Array=xd2_120Array, licenseFeatureEntry=licenseFeatureEntry, wdsStatsLinkName=wdsStatsLinkName, systemHttpsEnable=systemHttpsEnable, xh1_120Array=xh1_120Array, ssidTableReset=ssidTableReset, generalTraps=generalTraps, vlanStaAppStatsTimePeriod=vlanStaAppStatsTimePeriod, wprWhitelistSsidRowStatus=wprWhitelistSsidRowStatus, stationAssociationChannel=stationAssociationChannel, groupTrafficLimitKbpsSta=groupTrafficLimitKbpsSta, stationStatsTxRate5Packets=stationStatsTxRate5Packets, oauthTokenTable=oauthTokenTable, syslogEmailPasswordEnc=syslogEmailPasswordEnc, xr2230Array=xr2230Array, globalBroadcastRates=globalBroadcastRates, groupDaysOnFri=groupDaysOnFri, stationAppCatStatsIndex=stationAppCatStatsIndex, spanningTreeIndex=spanningTreeIndex, dhcpPoolDefaultLease=dhcpPoolDefaultLease, proxyMgmtHttpsHost=proxyMgmtHttpsHost, globalIAPTxPwr=globalIAPTxPwr, neighborArrayIndex=neighborArrayIndex, fastRoamingTargetRowStatus=fastRoamingTargetRowStatus, rogueDetectAPOrigTableIndex=rogueDetectAPOrigTableIndex, envCtrlHeatOn=envCtrlHeatOn, stationStatsTxRate5Errors=stationStatsTxRate5Errors, radiusPriServerSecret=radiusPriServerSecret, spectrumAnalysisTable=spectrumAnalysisTable, staAssuranceActiveAlarmTimestamp=staAssuranceActiveAlarmTimestamp, proxyMgmtSocksUsername=proxyMgmtSocksUsername, staAssuranceRSSIActive=staAssuranceRSSIActive, rogueDetectAPManufacturer=rogueDetectAPManufacturer, wdsHostLinkSSID=wdsHostLinkSSID, xr2430hArray=xr2430hArray, groupWprFooterText=groupWprFooterText, stationStatsTxRate48Retries=stationStatsTxRate48Retries, clusterArrayUsername=clusterArrayUsername, spanningTreeWDSClientLink1State=spanningTreeWDSClientLink1State, wdsStatsRxRate36Bytes=wdsStatsRxRate36Bytes, stationUnassocRSSIa6=stationUnassocRSSIa6, global11aIAPRTSThreshold=global11aIAPRTSThreshold, ssidBand=ssidBand, rates11aRate=rates11aRate, vlanUndefinedTable=vlanUndefinedTable, iapResetsBeacon=iapResetsBeacon, cdpInfoNativeVlan=cdpInfoNativeVlan, vlanStatsTxPackets=vlanStatsTxPackets, proxyMgmtHttpHost=proxyMgmtHttpHost, wdsStatsRxRate5Packets=wdsStatsRxRate5Packets, ssidWprSharedSecret=ssidWprSharedSecret, iapStatsRxUnicast=iapStatsRxUnicast, iapStatsRxRate2Packets=iapStatsRxRate2Packets, netflowCollectorHost=netflowCollectorHost, adminHistoryLogoutTime=adminHistoryLogoutTime, wdsStatsTxRate48Retries=wdsStatsTxRate48Retries, iapCellSize=iapCellSize, dhcpPoolRowStatus=dhcpPoolRowStatus, idsDisassocFloodThreshold=idsDisassocFloodThreshold, staAssurSNRTimestamp=staAssurSNRTimestamp, vlanStaAppStatsEntry=vlanStaAppStatsEntry, wdsClientLinkTarget=wdsClientLinkTarget, flashPartitionCorrupt=flashPartitionCorrupt, stationStatsRxRate36Bytes=stationStatsRxRate36Bytes, wifiTagChannel3=wifiTagChannel3, rates11bgRate=rates11bgRate, dhcpPoolIndex=dhcpPoolIndex, stationStatsRxRate1Bytes=stationStatsRxRate1Bytes, neighborArrayNumActiveSSIDs=neighborArrayNumActiveSSIDs, stationAppStatsTimePeriod=stationAppStatsTimePeriod, stationAssocRSSIa4=stationAssocRSSIa4, stationTraps=stationTraps, idsDeauthFloodMode=idsDeauthFloodMode, wdsHostLinkTable=wdsHostLinkTable, appListMemberTable=appListMemberTable, xr2235Array=xr2235Array, ssidLimitsActive=ssidLimitsActive, stationAssuranceTablePeriod=stationAssuranceTablePeriod, xh3_230Array=xh3_230Array, ssidWepKey4StringForm=ssidWepKey4StringForm, stationStatsTxRate2Bytes=stationStatsTxRate2Bytes, xr4426Array=xr4426Array, global11bgIAPAutoCellEnable=global11bgIAPAutoCellEnable, ssidWprScreenType=ssidWprScreenType, rogueDetect=rogueDetect, systemXirconPort=systemXirconPort, system=system, cdpInfoModel=cdpInfoModel, rogueDetectAPOrigTableSecurity=rogueDetectAPOrigTableSecurity, xd1_240Array=xd1_240Array, systemRDKMode=systemRDKMode, iapBeaconProbeFailureMacReset=iapBeaconProbeFailureMacReset, bootLoaderVersion=bootLoaderVersion, iapStatsTxDropped=iapStatsTxDropped, stationAssocEntry=stationAssocEntry, stationAssocManufacturer=stationAssocManufacturer, iapDriverVersion=iapDriverVersion, wpaEAP=wpaEAP, xr1230hArray=xr1230hArray, xr2447hArray=xr2447hArray, stationLocTable=stationLocTable, stationAppStatsMACAddress=stationAppStatsMACAddress, xa8_130Array=xa8_130Array, stationAppCatStatsTimePeriod=stationAppCatStatsTimePeriod, global11aIAPRxThreshold=global11aIAPRxThreshold, xh2_230Array=xh2_230Array, spectrumAnalysisErrorRate=spectrumAnalysisErrorRate, wprWhitelistSsidName=wprWhitelistSsidName, realtimeMonitorAverageRSSI=realtimeMonitorAverageRSSI, globalDscpMappingQos=globalDscpMappingQos, groupWprLandingPage=groupWprLandingPage, ssidDateOn=ssidDateOn, idsDeauthFloodThreshold=idsDeauthFloodThreshold, ssidFallback=ssidFallback, staAssuranceErrorRate=staAssuranceErrorRate, stationAssocCipher=stationAssocCipher, iapStatsRxRate9Packets=iapStatsRxRate9Packets, xd8_230Array=xd8_230Array, iapStatsTxRate11Packets=iapStatsTxRate11Packets, wdsAutoChannel=wdsAutoChannel, stationUnassociatedTimeRSSIa2=stationUnassociatedTimeRSSIa2, iapStatsTxRate36Errors=iapStatsTxRate36Errors, xr2236hArray=xr2236hArray, ssidLimitsEntry=ssidLimitsEntry, ssidVlan=ssidVlan, vlanTunnelState=vlanTunnelState, autoChannelList11bgEntry=autoChannelList11bgEntry, rogueDetectAutoBlockWhitelistIndex=rogueDetectAutoBlockWhitelistIndex)
mibBuilder.exportSymbols("XIRRUS-MIB", xr7620Array=xr7620Array, iapStatsTxRate54Bytes=iapStatsTxRate54Bytes, global11bgIAPPreamble=global11bgIAPPreamble, wdsClientLinkPassword=wdsClientLinkPassword, idsEventId=idsEventId, adminRadiusPriServerSecretEnc=adminRadiusPriServerSecretEnc, global11bg=global11bg, radiusServerExternal=radiusServerExternal, stationStatsTxRate11Errors=stationStatsTxRate11Errors, vlanStaAppStatsVlan=vlanStaAppStatsVlan, systemFipsMode=systemFipsMode, stationAssociationRSSI=stationAssociationRSSI, dhcpPoolTable=dhcpPoolTable, filterTableReset=filterTableReset, global11bgIAPMaxIapStations=global11bgIAPMaxIapStations, iapResetsSystem=iapResetsSystem, staAssuranceAssocTimeTimestamp=staAssuranceAssocTimeTimestamp, rogueDetectAPOrigTableChannel=rogueDetectAPOrigTableChannel, groupWprAuthType=groupWprAuthType, iapWdsLinkDistance=iapWdsLinkDistance, neighborArrayFastRoam=neighborArrayFastRoam, globalExtractIpAddrDhcpPeriod=globalExtractIpAddrDhcpPeriod, xr2436Array=xr2436Array, systemHostname=systemHostname, proxyFwdBlueCoatUrl=proxyFwdBlueCoatUrl, stationAssociationTimeRSSIa9=stationAssociationTimeRSSIa9, wpaTKIP=wpaTKIP, spectrumAnalysisPackets=spectrumAnalysisPackets, iapStatsRxRate54Packets=iapStatsRxRate54Packets, ssidWprLogoImage=ssidWprLogoImage, mdmAirWatchApiPasswordEnc=mdmAirWatchApiPasswordEnc, proxyMgmt=proxyMgmt, stationStatsRxRate1Errors=stationStatsRxRate1Errors, stationStatsTxRate6Retries=stationStatsTxRate6Retries, staAssuranceDataRate=staAssuranceDataRate, staAssurRSSI=staAssurRSSI, ethStatsRxBytes=ethStatsRxBytes, clusterArrayRowStatus=clusterArrayRowStatus, stationAssocUserAgent=stationAssocUserAgent, ssidEntry=ssidEntry, iapStatsRxTotalRetries=iapStatsRxTotalRetries, wpaPassphrase=wpaPassphrase, activeDirectoryDomainController=activeDirectoryDomainController, vlanMgmtAppCatStatsIndex=vlanMgmtAppCatStatsIndex, systemTelnetTimeout=systemTelnetTimeout, clusterArrayEntry=clusterArrayEntry, cdpEnable=cdpEnable, xa4_230Array=xa4_230Array, systemTempIndex=systemTempIndex, snmpAgentV3ReadOnlyUserAuthPassphrase=snmpAgentV3ReadOnlyUserAuthPassphrase, xa2_130Array=xa2_130Array, wprWhitelistSsidEntry=wprWhitelistSsidEntry, proxyMgmtSubnet06=proxyMgmtSubnet06, stationStatsTxRate5Bytes=stationStatsTxRate5Bytes, clusterArrayTableReset=clusterArrayTableReset, oauthTokenId=oauthTokenId, xs3700Array=xs3700Array, wdsStatsIndex=wdsStatsIndex, vlanUndefinedClear=vlanUndefinedClear, globalMulticastExcludeTableReset=globalMulticastExcludeTableReset, componentIndex=componentIndex, systemXirconTimeout=systemXirconTimeout, syslogPriority=syslogPriority, stationStatsRxRetries=stationStatsRxRetries, idsAssocFloodThreshold=idsAssocFloodThreshold, rogueDetectAPRSSI=rogueDetectAPRSSI, proxyMgmtHttpsPort=proxyMgmtHttpsPort, iapRxThreshold=iapRxThreshold, snmpAgentV3ReadWriteUserAuthPassphrase=snmpAgentV3ReadWriteUserAuthPassphrase, syslogIndex=syslogIndex, neighborArrayNumSSIDs=neighborArrayNumSSIDs, xd2_240Array=xd2_240Array, ssidWprIndex=ssidWprIndex, oauthTokenUserAgent=oauthTokenUserAgent, keepAlive=keepAlive, stationStatsTxRate9Packets=stationStatsTxRate9Packets, systemContactPhone=systemContactPhone, stationAssociationManufacturer=stationAssociationManufacturer, stationUnassocTimeRSSIa2=stationUnassocTimeRSSIa2, wprWhitelistGroupEntry=wprWhitelistGroupEntry, iapStatsTxRate24Retries=iapStatsTxRate24Retries, wdsStatsRxRate9Bytes=wdsStatsRxRate9Bytes, aclSsidIndex=aclSsidIndex, stationUnassocRSSIa10=stationUnassocRSSIa10, fastRoamingTargetMacAddress=fastRoamingTargetMacAddress, wdsStatsTxRate12Packets=wdsStatsTxRate12Packets, stationStatsTxRate54Packets=stationStatsTxRate54Packets, ntpSecondaryAuthKey=ntpSecondaryAuthKey, neighborArrayIPAddress=neighborArrayIPAddress, iapStatsRxRate2Retries=iapStatsRxRate2Retries, vlanStatsTxDropped=vlanStatsTxDropped, bondName=bondName, stationUnassociatedEntry=stationUnassociatedEntry, xr1126Array=xr1126Array, stationAssociationTimeRSSIa1=stationAssociationTimeRSSIa1, vlanMgmtAppStatsRxPackets=vlanMgmtAppStatsRxPackets, lldpHoldTime=lldpHoldTime, wdsRoamThreshold=wdsRoamThreshold, dhcpPoolEnable=dhcpPoolEnable, ssidRadiusSecServerSecretForm=ssidRadiusSecServerSecretForm, systemSshPort=systemSshPort, rogueDetectAPTimeDiscovered=rogueDetectAPTimeDiscovered, global11nGuardInterval=global11nGuardInterval, spanningTreeWDSHostLink4State=spanningTreeWDSHostLink4State, syslogEmailToAddress=syslogEmailToAddress, softwareConfig=softwareConfig, stationUnassociatedRSSIabg3=stationUnassociatedRSSIabg3, stationStatsRxRate6Bytes=stationStatsRxRate6Bytes, admin=admin, radiusAcctPriServerHostname=radiusAcctPriServerHostname, dnsSrv3=dnsSrv3, vlanMgmtAppCatStatsTxPackets=vlanMgmtAppCatStatsTxPackets, adminEntry=adminEntry, rates11bgTable=rates11bgTable, ledsActivityEntry=ledsActivityEntry, idsDeauthAttackThreshold=idsDeauthAttackThreshold, vlanStaAppStatsTablePeriod=vlanStaAppStatsTablePeriod, idsAssocFloodPeriod=idsAssocFloodPeriod, globalIAPReauthPeriod=globalIAPReauthPeriod, staAssurSNRActive=staAssurSNRActive, wdsStpEnable=wdsStpEnable, iapStatsTxRate18Errors=iapStatsTxRate18Errors, stationAssocRSSIabg1=stationAssocRSSIabg1, xr2220hArray=xr2220hArray, stationUnassocTable=stationUnassocTable, groupDaysOnMon=groupDaysOnMon, globalMulticastExcludeEntry=globalMulticastExcludeEntry, xa1_240Array=xa1_240Array, ssidLimitsDaysOnSun=ssidLimitsDaysOnSun, security=security, stationAssociationMACAddress=stationAssociationMACAddress, wdsStatsTxRate2Errors=wdsStatsTxRate2Errors, xr2225Array=xr2225Array, groupTrafficLimit=groupTrafficLimit, iapStatsTxRate54Retries=iapStatsTxRate54Retries, roamAssistDataRate=roamAssistDataRate, radiusAcctSecServerSecretEnc=radiusAcctSecServerSecretEnc, radiusSecServerPort=radiusSecServerPort, globalMulticastExcludeRowStatus=globalMulticastExcludeRowStatus, cdpInfoEntry=cdpInfoEntry, realtimeMonitorTable=realtimeMonitorTable, iapStatsRxRate5Retries=iapStatsRxRate5Retries, wdsStatsTxRate36Packets=wdsStatsTxRate36Packets, ethMTU=ethMTU, wprWhitelistGroupTable=wprWhitelistGroupTable, snmpAgentTrapHost4=snmpAgentTrapHost4, stationAssociationIndex=stationAssociationIndex, vlanStatsNumber=vlanStatsNumber, globalExtractStaInfoStatus=globalExtractStaInfoStatus, filterAppCatEntry=filterAppCatEntry, idsEAPFloodThreshold=idsEAPFloodThreshold, rogueDetectEnable=rogueDetectEnable, staAssuranceRSSITimestamp=staAssuranceRSSITimestamp, xa4_130Array=xa4_130Array, rfMonitorMode=rfMonitorMode, radiusDASPort=radiusDASPort, ssidIndex=ssidIndex, iapStatsRxOverruns=iapStatsRxOverruns, iapStatsTxRate11Retries=iapStatsTxRate11Retries, systemFanSpeed=systemFanSpeed, envCtrlCoolRPM3=envCtrlCoolRPM3, vlanStatsTxTotalErrors=vlanStatsTxTotalErrors, systemLicenseProductType=systemLicenseProductType, lldpRequestPower=lldpRequestPower, iapStatsRxRate54Bytes=iapStatsRxRate54Bytes, globalMulticastMode=globalMulticastMode, iapChannel=iapChannel, stationAssociationCipher=stationAssociationCipher, filterAppCatGuid=filterAppCatGuid, vlanStatsTable=vlanStatsTable, autoCellByChan=autoCellByChan, iapResetsPhy=iapResetsPhy, ssidWepKey4String=ssidWepKey4String, resetArray=resetArray, wpaRekey=wpaRekey, groupVlan=groupVlan, groupIndex=groupIndex, snmpAgentV3ReadWriteUserPrivPassphrase=snmpAgentV3ReadWriteUserPrivPassphrase, vlanMgmtAppStatsTable=vlanMgmtAppStatsTable, ssidWepKey3String=ssidWepKey3String, global11nRxChains=global11nRxChains, stationAssociationTimeRSSIa3=stationAssociationTimeRSSIa3, xs3900_1GArray=xs3900_1GArray, stationUnassociatedRSSIabg1=stationUnassociatedRSSIabg1, xr2420hArray=xr2420hArray, stationUnassocTime=stationUnassocTime, staAssurRetryRateActive=staAssurRetryRateActive, idsDisassocAttackThreshold=idsDisassocAttackThreshold, vlanMgmtAppCatStatsRxBytes=vlanMgmtAppCatStatsRxBytes, staAssuranceAlarmType=staAssuranceAlarmType, syslogEmailServer=syslogEmailServer, rogueDetectAPSSID=rogueDetectAPSSID, interfaceName=interfaceName, systemHttpsTimeout=systemHttpsTimeout, mdmAirWatchApiPassword=mdmAirWatchApiPassword, vlanEntry=vlanEntry, proxyMgmtHttpsPassword=proxyMgmtHttpsPassword, vlanUndefinedInfo=vlanUndefinedInfo, autoChannelList11bgStatus=autoChannelList11bgStatus, stationStatsRxRate36Retries=stationStatsRxRate36Retries, idsEventChannel=idsEventChannel, stationAppCatStatsTxPackets=stationAppCatStatsTxPackets, autoCellMinTxPwr=autoCellMinTxPwr, adminTableReset=adminTableReset, globalMaxStations=globalMaxStations, globalWfaMode=globalWfaMode, staAssuranceTimestamp=staAssuranceTimestamp, ethStatsIfaceSpeed=ethStatsIfaceSpeed, adminLogin=adminLogin, radiusAcctEnable=radiusAcctEnable, iapStatsTxRate36Bytes=iapStatsTxRate36Bytes, global11acMaxMCS1SS=global11acMaxMCS1SS, iapStatsTxTotalRetries=iapStatsTxTotalRetries, stationAppStatsTablePeriod=stationAppStatsTablePeriod, iapStatsRxRate11Packets=iapStatsRxRate11Packets, wpr=wpr, ssidWprUrl=ssidWprUrl, stationUnassociatedNetbiosName=stationUnassociatedNetbiosName, filterSrcInvertSense=filterSrcInvertSense, filterListRowStatus=filterListRowStatus, stationAssociationTimeRSSIa2=stationAssociationTimeRSSIa2, iapStatsRxRate18Packets=iapStatsRxRate18Packets, spanningTreeWDSHostLink2State=spanningTreeWDSHostLink2State, xr1120Array=xr1120Array, rogueDetectAPOrigTableTimeLastActive=rogueDetectAPOrigTableTimeLastActive, proxyMgmtCustom=proxyMgmtCustom, stationAppCatStatsTxBytes=stationAppCatStatsTxBytes, stationUnassociatedRSSIa10=stationUnassociatedRSSIa10, iapStatsTxRate2Errors=iapStatsTxRate2Errors, vlanStaAppCatStatsTable=vlanStaAppCatStatsTable, softwareVersion=softwareVersion, proxyMgmtEnabled=proxyMgmtEnabled, wdsStatsRxRetries=wdsStatsRxRetries, stationAssociationUserName=stationAssociationUserName, globalMulticastDnsFilteringEntry=globalMulticastDnsFilteringEntry, tunnelTableReset=tunnelTableReset, xr2425Array=xr2425Array, syslogTerServer=syslogTerServer, ssidRadiusPriServerSecret=ssidRadiusPriServerSecret, filterListLength=filterListLength, wdsStatsRxRate12Retries=wdsStatsRxRate12Retries, stationStatsTxErrors=stationStatsTxErrors, global11bgIAPRxThreshold=global11bgIAPRxThreshold, stationStatsRxRate48Retries=stationStatsRxRate48Retries, global11acMaxMCS4SS=global11acMaxMCS4SS, groupWprSplashEnable=groupWprSplashEnable, idsEventAvgPackets=idsEventAvgPackets, stationAssuranceDataRate=stationAssuranceDataRate, idsSeqNumAnomalyMode=idsSeqNumAnomalyMode, adminHistoryInterface=adminHistoryInterface, proxyMgmtSubnet01=proxyMgmtSubnet01, statistics=statistics, staAssurErrorRateTimestamp=staAssurErrorRateTimestamp, snmpAgentEnable=snmpAgentEnable)
mibBuilder.exportSymbols("XIRRUS-MIB", stationAssociationRSSIabg4=stationAssociationRSSIabg4, radiusUserPassword=radiusUserPassword, realtimeMonitorIndex=realtimeMonitorIndex, stationAssocRSSIa6=stationAssocRSSIa6, stationStatsTxRate1Packets=stationStatsTxRate1Packets, syslogMessage=syslogMessage, stationAssociationVLAN=stationAssociationVLAN, globalMulticastForwardingRowStatus=globalMulticastForwardingRowStatus, staAssurRetryRate=staAssurRetryRate, wdsStatsRxRate2Bytes=wdsStatsRxRate2Bytes, stationAssocRSSIa5=stationAssocRSSIa5, stationStatsTxBytes=stationStatsTxBytes, global11bgIAPCellSize=global11bgIAPCellSize, radiusDASEventTimestamp=radiusDASEventTimestamp, globalSharpCell=globalSharpCell, wprWhitelistGroupIndex=wprWhitelistGroupIndex, stationStatsTable=stationStatsTable, groupWprEnable=groupWprEnable, staAssurDistance=staAssurDistance, neighborArrayTable=neighborArrayTable, ntpSecondaryAuthKeyEnc=ntpSecondaryAuthKeyEnc, rogueDetectAutoBlockRSSI=rogueDetectAutoBlockRSSI, groupQOS=groupQOS, stationAssociationRSSIa12=stationAssociationRSSIa12, vlanTunnelServer=vlanTunnelServer, xa4_240Array=xa4_240Array, iapName=iapName, vlanStatsTxCollisions=vlanStatsTxCollisions, xr1130hArray=xr1130hArray, stationAssocRSSIa12=stationAssocRSSIa12, dhcpPoolRangeEndIP=dhcpPoolRangeEndIP, dnsDomain=dnsDomain, realtimeMonitorAverageDataRate=realtimeMonitorAverageDataRate, stationStatsRxRate36Packets=stationStatsRxRate36Packets, xa2_240Array=xa2_240Array, ssidExpiration=ssidExpiration, filterPortRange=filterPortRange, xr630Array=xr630Array, global11aIAPFragThreshold=global11aIAPFragThreshold, stations=stations, stationAssociationRSSIabg2=stationAssociationRSSIabg2, stationAssocRSSIa9=stationAssocRSSIa9, stationAssocChannel=stationAssocChannel, envCtrlFanFail=envCtrlFanFail, staAssurErrorRateActive=staAssurErrorRateActive, vlanStatsRxFrameErrors=vlanStatsRxFrameErrors, interfaceMACAddress=interfaceMACAddress, vlanStaAppCatStatsRxPackets=vlanStaAppCatStatsRxPackets, oauthTableReset=oauthTableReset, consoleMgmt=consoleMgmt, wepKeySize=wepKeySize, stationStatsTxRate54Retries=stationStatsTxRate54Retries, rates11bgEntry=rates11bgEntry, stationAssocTxRate=stationAssocTxRate, vlanStaAppCatStatsTimePeriod=vlanStaAppCatStatsTimePeriod, wdsStatsTxRate1Bytes=wdsStatsTxRate1Bytes, radiusTimeout=radiusTimeout, syslogLevelConsole=syslogLevelConsole, stationStatsTxRate2Packets=stationStatsTxRate2Packets, iapStatsRxRate36Packets=iapStatsRxRate36Packets, wdsStatsRxRate24Retries=wdsStatsRxRate24Retries, xr4826Array=xr4826Array, iapSsidToBssidMappingIndex=iapSsidToBssidMappingIndex, wdsStatsRxRate11Packets=wdsStatsRxRate11Packets, oauthTokenScope=oauthTokenScope, radiusAcctPriServerIPAddress=radiusAcctPriServerIPAddress, rogueDetectSSIDIndex=rogueDetectSSIDIndex, systemLicenseVersion=systemLicenseVersion, globalMulticastForwardingIpAddress=globalMulticastForwardingIpAddress, xh1_240Array=xh1_240Array, stationAssociationKeyMgmt=stationAssociationKeyMgmt, idsDurationAttackThreshold=idsDurationAttackThreshold, stationAssocTimeRSSIa6=stationAssocTimeRSSIa6, stationStatsTxRate24Packets=stationStatsTxRate24Packets, ethStatsTxCollisions=ethStatsTxCollisions, stationAssocTimeRSSIa10=stationAssocTimeRSSIa10, staAssuranceTime=staAssuranceTime, global11bgIAPAutoChannelEnable=global11bgIAPAutoChannelEnable, ethStatsTxCarrierErrors=ethStatsTxCarrierErrors, vlanUndefinedIndex=vlanUndefinedIndex, filterListEntry=filterListEntry, ssidHoneypotBroadcastIndex=ssidHoneypotBroadcastIndex, dhcpPoolTableReset=dhcpPoolTableReset, snmpAgentV3ReadWriteUser=snmpAgentV3ReadWriteUser, spanningTreeGigLinkState=spanningTreeGigLinkState, ssidName=ssidName, systemTelnetEnable=systemTelnetEnable, filterSrcSsid=filterSrcSsid, wdsStatsTxRate48Bytes=wdsStatsTxRate48Bytes, realtimeMonitorNoiseFloor=realtimeMonitorNoiseFloor, iapChannelBond160Mhz=iapChannelBond160Mhz, staAssuranceAssocTimeActive=staAssuranceAssocTimeActive, stationStatsRxRate6Retries=stationStatsRxRate6Retries, licenseFeatureTable=licenseFeatureTable, filterAppListIndex=filterAppListIndex, wdsStatsTxRate36Errors=wdsStatsTxRate36Errors, idsDurationAttackEnable=idsDurationAttackEnable, vlanMgmtAppStatsVlan=vlanMgmtAppStatsVlan, wdsStatsRxRate1Packets=wdsStatsRxRate1Packets, ssidWepDefaultKeyID=ssidWepDefaultKeyID, proxyMgmtSocksEnabled=proxyMgmtSocksEnabled, stationStatsMACAddress=stationStatsMACAddress, stationAssocRSSIa2=stationAssocRSSIa2, iapStatsRxRate12Retries=iapStatsRxRate12Retries, stationStatsTxRate1Retries=stationStatsTxRate1Retries, iapStatsRxRate2Errors=iapStatsRxRate2Errors, tunnelRowStatus=tunnelRowStatus, ssidWprBackground=ssidWprBackground, groupName=groupName, stationStatsRxRate9Bytes=stationStatsRxRate9Bytes, vlanIPMask=vlanIPMask, iapStatsTxBroadcast=iapStatsTxBroadcast, syslogStationUrlLog=syslogStationUrlLog, filterMoveUp=filterMoveUp, stationUnassociatedRSSIabg2=stationUnassociatedRSSIabg2, stationAssociationRSSIa1=stationAssociationRSSIa1, radioMixInvalid=radioMixInvalid, systemTempComponent=systemTempComponent, proxyMgmtSubnet02=proxyMgmtSubnet02, ssidLimitsDaysOnWed=ssidLimitsDaysOnWed, licenseFeatureDesc=licenseFeatureDesc, adminPrivLevelTable=adminPrivLevelTable, iapStatsRxRate18Retries=iapStatsRxRate18Retries, staAssuranceDeviceType=staAssuranceDeviceType, xr6826Array=xr6826Array, vlanMgmtAppCatStatsGuid=vlanMgmtAppCatStatsGuid, filterAppListGuid=filterAppListGuid, stationAssocNetbiosName=stationAssocNetbiosName, iapTraps=iapTraps, syslogEmailPort=syslogEmailPort, groupWprAuthTimeout=groupWprAuthTimeout, staAssurRSSITimestamp=staAssurRSSITimestamp, autoChannelSchedule=autoChannelSchedule, positionInfoMount=positionInfoMount, aclSsidName=aclSsidName, global11nEnable=global11nEnable, ssidWpaPSK=ssidWpaPSK, iapStatsRxDropped=iapStatsRxDropped, stationStatsTxRate24Bytes=stationStatsTxRate24Bytes, xsArray=xsArray, rogueDetectAPOrigTableBSSID=rogueDetectAPOrigTableBSSID, iapStatsRxRate48Packets=iapStatsRxRate48Packets, proxyMgmtHttpsEnabled=proxyMgmtHttpsEnabled, clusterArrayIPAddress=clusterArrayIPAddress, staAssurDataRateActive=staAssurDataRateActive, stationAssuranceTable=stationAssuranceTable, ssid=ssid, stationUnassociatedTimeRSSIa9=stationUnassociatedTimeRSSIa9, idsEventIAP=idsEventIAP, positionInfoX=positionInfoX, stationUnassocRSSI=stationUnassocRSSI, rogueDetectSSIDRowStatus=rogueDetectSSIDRowStatus, stationStatsRxRate2Errors=stationStatsRxRate2Errors, iapDescription=iapDescription, stationAssociationTime=stationAssociationTime, autoCellEnable=autoCellEnable, stationLocRSSI=stationLocRSSI, stationStatsRxRate5Packets=stationStatsRxRate5Packets, iapMaxStationsYear=iapMaxStationsYear, globalMulticastForwardingEntry=globalMulticastForwardingEntry, licenseFeatureStatus=licenseFeatureStatus, stationStatsRxPackets=stationStatsRxPackets, xr7226Array=xr7226Array, filterDstMacAddressMask=filterDstMacAddressMask, fpgaName=fpgaName, systemSshTimeout=systemSshTimeout, stationStatsTxRate24Errors=stationStatsTxRate24Errors, globalMulticastForwardingIndex=globalMulticastForwardingIndex, xr4820Array=xr4820Array, globalMulticastDnsFilteringRowStatus=globalMulticastDnsFilteringRowStatus, xd1_230Array=xd1_230Array, wdsStatsRxRate6Retries=wdsStatsRxRate6Retries, iapStatsRxRate36Bytes=iapStatsRxRate36Bytes, fastRoaming=fastRoaming, autoChannelEnable=autoChannelEnable, xd8_130Array=xd8_130Array, ethStatsTxTotalErrors=ethStatsTxTotalErrors, position=position, globalMulticastVlanForwardingRowStatus=globalMulticastVlanForwardingRowStatus, snmpAgentTrapAuth=snmpAgentTrapAuth, wdsStatsTxRate36Bytes=wdsStatsTxRate36Bytes, groupTrafficLimitSta=groupTrafficLimitSta, radiusCalledStationIdFormat=radiusCalledStationIdFormat, ssidRadiusAcctPriServerSecret=ssidRadiusAcctPriServerSecret, syslogEmailUsername=syslogEmailUsername, iapStatsRxRate24Retries=iapStatsRxRate24Retries, stationStatsRxRate11Bytes=stationStatsRxRate11Bytes, idsDeauthFloodPeriod=idsDeauthFloodPeriod, oauthTokenGrantType=oauthTokenGrantType, mdmAirWatchApiAccessError=mdmAirWatchApiAccessError, spanningTreeEntry=spanningTreeEntry, syslogLevel=syslogLevel, stationStatsRxRate2Bytes=stationStatsRxRate2Bytes, console=console, ssidHoneypotWhitelistSSID=ssidHoneypotWhitelistSSID, global11bgIAPTxPwr=global11bgIAPTxPwr, stationStatsRxRate36Errors=stationStatsRxRate36Errors, stationUnassocRSSIabg3=stationUnassocRSSIabg3, filter=filter, global11acWave2Capability=global11acWave2Capability, iapStatsRxBytes=iapStatsRxBytes, vlanStaAppStatsRxPackets=vlanStaAppStatsRxPackets, wdsStatsTxRate2Packets=wdsStatsTxRate2Packets, ssidLimitsStationLimit=ssidLimitsStationLimit, adminTraps=adminTraps, roamAssistThreshold=roamAssistThreshold, wpa=wpa, realtimeMonitorNoise=realtimeMonitorNoise, iapStatsTxRate5Retries=iapStatsTxRate5Retries, spectrumAnalysisIndex=spectrumAnalysisIndex, stationAssociationTable=stationAssociationTable, idsBeaconFloodMode=idsBeaconFloodMode, systemReset=systemReset, neighborArrayNumIAPsUp=neighborArrayNumIAPsUp, fpgaEntry=fpgaEntry, radiusAcctSecServerIPAddress=radiusAcctSecServerIPAddress, ssidLimitsDaysOnMon=ssidLimitsDaysOnMon, stationUnassocTimeRSSIa3=stationUnassocTimeRSSIa3, iapStatsTxRate9Errors=iapStatsTxRate9Errors, radiusPriServerSecretEnc=radiusPriServerSecretEnc, groupRoamingLayer=groupRoamingLayer, stationStatsRxRate54Errors=stationStatsRxRate54Errors, filterPackets=filterPackets, wdsStatsTxRate24Errors=wdsStatsTxRate24Errors, stationAssociationTimeRSSIabg4=stationAssociationTimeRSSIabg4, systemRemoteConfigFile=systemRemoteConfigFile, groupTimeOn=groupTimeOn, softwareUpgradeFailure=softwareUpgradeFailure, filterTimeOn=filterTimeOn, stationAssociationTimeRSSIa8=stationAssociationTimeRSSIa8, filterAppEntry=filterAppEntry, stationStatsIndex=stationStatsIndex, filterDstVlan=filterDstVlan, systemLoginReauthPeriod=systemLoginReauthPeriod, stationUnassocTimeRSSIa9=stationUnassocTimeRSSIa9, bondMode=bondMode, wdsStatsTable=wdsStatsTable, staAssurDataRateTimestamp=staAssurDataRateTimestamp, wprWhitelistGroupRowStatus=wprWhitelistGroupRowStatus, proxyMgmtHttpUsername=proxyMgmtHttpUsername, stationAssociationOperatingMode=stationAssociationOperatingMode, fastRoamingPeerMode=fastRoamingPeerMode, proxyMgmtMask06=proxyMgmtMask06, ntpSecondaryAuthType=ntpSecondaryAuthType, stationAssocDeviceSource=stationAssocDeviceSource, tunnelSecRemoteEndpoint=tunnelSecRemoteEndpoint, stationAssociationTxRate=stationAssociationTxRate, staAssurDataRate=staAssurDataRate, stationStatsTxRate12Errors=stationStatsTxRate12Errors, ntpSecondaryAuthKeyID=ntpSecondaryAuthKeyID, stationAssociationIAP=stationAssociationIAP, softwareUpgradeSuccess=softwareUpgradeSuccess, stationStatsRxRate2Retries=stationStatsRxRate2Retries, vlanNativeNumber=vlanNativeNumber)
mibBuilder.exportSymbols("XIRRUS-MIB", xr1126hArray=xr1126hArray, iapStatsTxRate2Bytes=iapStatsTxRate2Bytes, systemStandbyEnable=systemStandbyEnable, vlanStaAppCatStatsGuid=vlanStaAppCatStatsGuid, networkMap=networkMap, aclTableReset=aclTableReset, adminRadiusSecServerSecret=adminRadiusSecServerSecret, xr7647Array=xr7647Array, stationAssocTimeRSSIa5=stationAssocTimeRSSIa5, xs3500_512Array=xs3500_512Array, iapIndex=iapIndex, xr1230Array=xr1230Array, groupDaysOnSat=groupDaysOnSat, iapStatsNoiseDenominator=iapStatsNoiseDenominator, groupDeviceID=groupDeviceID, iapBeaconProbeFailureArrayReboot=iapBeaconProbeFailureArrayReboot, location=location, iapStatsRxRate6Packets=iapStatsRxRate6Packets, clusterArrayIndex=clusterArrayIndex, stationStatsTxRate18Bytes=stationStatsTxRate18Bytes, rates11nMCSIndex=rates11nMCSIndex, cdpHoldTime=cdpHoldTime, iapStatsTxRate6Bytes=iapStatsTxRate6Bytes, ssidTunnel=ssidTunnel, groupVlanPool=groupVlanPool, xr4830Array=xr4830Array, iapMaxStationsWeek=iapMaxStationsWeek, snmpAgentV3ReadOnlyUser=snmpAgentV3ReadOnlyUser, tunnelVlanList=tunnelVlanList, wdsStatsRxRate48Errors=wdsStatsRxRate48Errors, filterSrcType=filterSrcType, xh1_130Array=xh1_130Array, vlanTunnelSecret=vlanTunnelSecret, vlanStaAppCatStatsVlan=vlanStaAppCatStatsVlan, xn8Array=xn8Array, staAssuranceActiveAlarmType=staAssuranceActiveAlarmType, systemStatusLed=systemStatusLed, envCtrlHeatRPM1=envCtrlHeatRPM1, global11bgIAPAutoCellOverlap=global11bgIAPAutoCellOverlap, iapResetsMonitor=iapResetsMonitor, proxyMgmtHttpsUsername=proxyMgmtHttpsUsername, staAssuranceSNRActive=staAssuranceSNRActive, stationAssuranceTableClear=stationAssuranceTableClear, ssidLimitsDaysOnFri=ssidLimitsDaysOnFri, iapStatsTxCTS=iapStatsTxCTS, filterTrafficLimitType=filterTrafficLimitType, ethDefault=ethDefault, systemMaxAuthAttempts=systemMaxAuthAttempts, ethStatsRxMulticast=ethStatsRxMulticast, autoChannelPowerUp=autoChannelPowerUp, iapStatsTxRate1Bytes=iapStatsTxRate1Bytes, timeLastBoot=timeLastBoot, proxyMgmtMask03=proxyMgmtMask03, proxyMgmtSubnet10=proxyMgmtSubnet10, stationStatsTxRate6Errors=stationStatsTxRate6Errors, globalDscpMappingMode=globalDscpMappingMode, iapStatsRxManagement=iapStatsRxManagement, rogueDetectAPOrigTablePeriod=rogueDetectAPOrigTablePeriod, stationAssociationRSSIa10=stationAssociationRSSIa10, rates11aEntry=rates11aEntry, globalDot11wProtectedManagement=globalDot11wProtectedManagement, aclSsidTable=aclSsidTable, global11acTxBeamForming=global11acTxBeamForming, globalDot11kSupport=globalDot11kSupport, stationAssocIAP=stationAssocIAP, wdsStatsRxRate11Bytes=wdsStatsRxRate11Bytes, syslogTable=syslogTable, stationAssocIPAddress=stationAssocIPAddress, aclSsidEntry=aclSsidEntry, systemTelnetPort=systemTelnetPort, stationStatsRxRate6Errors=stationStatsRxRate6Errors, adminHistoryEntry=adminHistoryEntry, snmpAgent=snmpAgent, activeDirectoryLeave=activeDirectoryLeave, tunnelFailoverInterval=tunnelFailoverInterval, aclMacAddress=aclMacAddress, autoChannelList11aTable=autoChannelList11aTable, iapStatsTxRate48Packets=iapStatsTxRate48Packets, vlanMgmtAppCatStatsTimePeriod=vlanMgmtAppCatStatsTimePeriod, stationUnassocRSSIa2=stationUnassocRSSIa2, iapStatsTxRate18Retries=iapStatsTxRate18Retries, proxyMgmtMask10=proxyMgmtMask10, idsBeaconFloodThreshold=idsBeaconFloodThreshold, filterEnable=filterEnable, globalArpFilter=globalArpFilter, radiusAcctSecServerPort=radiusAcctSecServerPort, dateTimeZoneMins=dateTimeZoneMins, ssidHoneypotWhitelistTableReset=ssidHoneypotWhitelistTableReset, iapStatsTxRate9Retries=iapStatsTxRate9Retries, global11nBondedChannelWidth5GHz=global11nBondedChannelWidth5GHz, stationStatsRxRate9Retries=stationStatsRxRate9Retries, ssidHoneypotBroadcastTableReset=ssidHoneypotBroadcastTableReset, roamAssist=roamAssist, ssidHoneypotBroadcastEntry=ssidHoneypotBroadcastEntry, scdFirmwareVersion=scdFirmwareVersion, iapBondedChannel=iapBondedChannel, xr4420Array=xr4420Array, groupEntry=groupEntry, stationAppStatsIndex=stationAppStatsIndex, iapStatsTxRate54Packets=iapStatsTxRate54Packets, adminPrivSectionLevel=adminPrivSectionLevel, iapStatsTxRate12Bytes=iapStatsTxRate12Bytes, stationUnassociatedTimeRSSIabg3=stationUnassociatedTimeRSSIabg3, stationUnassocTimeRSSIabg1=stationUnassocTimeRSSIabg1, stationAssuranceDistance=stationAssuranceDistance, ledsActivityIndex=ledsActivityIndex, filterList=filterList, staAssuranceSNRTimestamp=staAssuranceSNRTimestamp, timeThisBoot=timeThisBoot, rogueDetectSSIDTable=rogueDetectSSIDTable, global11aIAPEnable=global11aIAPEnable, roamAssistEnable=roamAssistEnable, stationAssociationTimeRSSIa7=stationAssociationTimeRSSIa7, vlanRowStatus=vlanRowStatus, global11bgIAPMaxStations=global11bgIAPMaxStations, iapStatsTxRate2Retries=iapStatsTxRate2Retries, groupWprUrl=groupWprUrl, idsMICErrorAttackPeriod=idsMICErrorAttackPeriod, proxyMgmtSocksPort=proxyMgmtSocksPort, oauthTokenCode=oauthTokenCode, stationLocPositionY=stationLocPositionY, radiusUserEntry=radiusUserEntry, idsEventCurPackets=idsEventCurPackets, systemContactName=systemContactName, groupFallback=groupFallback, snmpAgentTrapPort4=snmpAgentTrapPort4, stationAssurance=stationAssurance, stationStatsTxRate9Errors=stationStatsTxRate9Errors, stationAppStatsEntry=stationAppStatsEntry, iapStatsTxRate18Packets=iapStatsTxRate18Packets, iapChannelMode=iapChannelMode, autoCell=autoCell, filterAppListDesc=filterAppListDesc, stationAssocTimeRSSIabg4=stationAssocTimeRSSIabg4, filterSrcIPAddressMask=filterSrcIPAddressMask, tunnelDhcpOption=tunnelDhcpOption, iapStatsTxSingleRetries=iapStatsTxSingleRetries, wepKeyNum=wepKeyNum, neighborArrayEntry=neighborArrayEntry, systemStandbyTarget=systemStandbyTarget, ssidRadiusAcctPriServerSecretForm=ssidRadiusAcctPriServerSecretForm, systemSshEnable=systemSshEnable, ssidWprTable=ssidWprTable, stationAssociationDeviceSourceIndex=stationAssociationDeviceSourceIndex, ssidRadiusPriServerHostname=ssidRadiusPriServerHostname, wdsStatsTxRate9Retries=wdsStatsTxRate9Retries, ssidTable=ssidTable, iapStatsRxRate1Packets=iapStatsRxRate1Packets, wdsStatsRxRate12Bytes=wdsStatsRxRate12Bytes, autoChannelList11bgIndex=autoChannelList11bgIndex, lldpEnable=lldpEnable, global11bgIAPAutoCellPeriod=global11bgIAPAutoCellPeriod, stationUnassociatedRxRate=stationUnassociatedRxRate, iapStatsRxRate5Errors=iapStatsRxRate5Errors, iapStatsTxMulticast=iapStatsTxMulticast, staAssurActiveAlarmType=staAssurActiveAlarmType, wdsStatsTxRate5Retries=wdsStatsTxRate5Retries, vlanMgmtAppStatsTablePeriod=vlanMgmtAppStatsTablePeriod, wdsStatsRxPackets=wdsStatsRxPackets, oauthTokenRowStatus=oauthTokenRowStatus, xd2_230Array=xd2_230Array, filterLayer=filterLayer, encDoorClosed=encDoorClosed, global11a=global11a, rogueDetectAutoBlockType=rogueDetectAutoBlockType, systemRemoteImage=systemRemoteImage, stationAssociationDeviceSource=stationAssociationDeviceSource, filterDays=filterDays, ssidRadiusPriServerSecretForm=ssidRadiusPriServerSecretForm, dhcpPoolName=dhcpPoolName, iapBondedChannelList=iapBondedChannelList, stationStatsTxRate48Errors=stationStatsTxRate48Errors, xr2220Array=xr2220Array, iapStatsRxRate11Bytes=iapStatsRxRate11Bytes, syslogLevelPriServer=syslogLevelPriServer, systemSaveCfg=systemSaveCfg, iapStatsTxRate9Bytes=iapStatsTxRate9Bytes, stationStatsRxRate5Bytes=stationStatsRxRate5Bytes, systemNetworkAssurancePeriod=systemNetworkAssurancePeriod, dhcpPoolEntry=dhcpPoolEntry, ssidWprSsidName=ssidWprSsidName, radiusUserTableReset=radiusUserTableReset, global11bgIAPFragThreshold=global11bgIAPFragThreshold, filterAppListTable=filterAppListTable, ssidHoneypotWhitelistTable=ssidHoneypotWhitelistTable, snmpAgentTrapPort2=snmpAgentTrapPort2, stationAssocSSID=stationAssocSSID, proxyFwdProxyType=proxyFwdProxyType, snmpAgentV3PrivProtocol=snmpAgentV3PrivProtocol, xa3_230Array=xa3_230Array, wdsStatsTxRate24Bytes=wdsStatsTxRate24Bytes, iapStatsTxRate48Bytes=iapStatsTxRate48Bytes, locationReportingPeriod=locationReportingPeriod, dhcpPoolDNSServer2=dhcpPoolDNSServer2, ssidWepKey1Size=ssidWepKey1Size, wdsStatsTxRate24Packets=wdsStatsTxRate24Packets, iapStatsTxRate12Packets=iapStatsTxRate12Packets, lldpInterval=lldpInterval, snmpAgentV3ReadWriteUserAuthPassphraseEnc=snmpAgentV3ReadWriteUserAuthPassphraseEnc, radiusUserRowStatus=radiusUserRowStatus, ntpPrimaryAuthKeyID=ntpPrimaryAuthKeyID, rogueDetectAutoBlockWhitelistEntry=rogueDetectAutoBlockWhitelistEntry, iapStatsRxFragments=iapStatsRxFragments, ssidRadiusAcctSecServerSecretForm=ssidRadiusAcctSecServerSecretForm, leds=leds, wprWhitelistSsidIndex=wprWhitelistSsidIndex, globalIAPMaxPhones=globalIAPMaxPhones, globalMulticastForwardingTableReset=globalMulticastForwardingTableReset, wdsStatsTxRate12Bytes=wdsStatsTxRate12Bytes, iapAntenna=iapAntenna, proxyMgmtSocksPassword=proxyMgmtSocksPassword, vlanMgmtAppStatsTimePeriod=vlanMgmtAppStatsTimePeriod, syslog=syslog, xr2226Array=xr2226Array, filterSrcMacAddress=filterSrcMacAddress, globalMulticastDnsFilteringTableReset=globalMulticastDnsFilteringTableReset, stationStatsRxRate48Errors=stationStatsRxRate48Errors, roamAssistPeriod=roamAssistPeriod, stationUnassociatedRSSIa12=stationUnassociatedRSSIa12, stationStatsTxRate48Packets=stationStatsTxRate48Packets, wdsStatsRxRate12Errors=wdsStatsRxRate12Errors, tunnelEntry=tunnelEntry, ethTable=ethTable, ssidWprAuthTimeout=ssidWprAuthTimeout, spectrumAnalysisChannel=spectrumAnalysisChannel, xh2_130Array=xh2_130Array, stationStatsTxRate48Bytes=stationStatsTxRate48Bytes, vlanStatsTxBytes=vlanStatsTxBytes, neighborArrayModel=neighborArrayModel, filterPriority=filterPriority, stationAssurTable=stationAssurTable, ssidWepKey2String=ssidWepKey2String, autoChannelList11aStatus=autoChannelList11aStatus, ssidRadiusAcctPriServerHostname=ssidRadiusAcctPriServerHostname, wifiTagChannel1=wifiTagChannel1, groupTableReset=groupTableReset, arrayModel=arrayModel, filterRowStatus=filterRowStatus, rfMonitor=rfMonitor, global11aIAPAutoCellEnable=global11aIAPAutoCellEnable, xa1_230Array=xa1_230Array, rates11n=rates11n, groupStationLimit=groupStationLimit, wdsStatsRxRate18Bytes=wdsStatsRxRate18Bytes, ntpPrimaryAuthKey=ntpPrimaryAuthKey, envCtrlSoftwareVersion=envCtrlSoftwareVersion, stationAssocTimeRSSIa9=stationAssocTimeRSSIa9, xr2235hArray=xr2235hArray, radiusUserID=radiusUserID, stationAssocMediaType=stationAssocMediaType, iapStatsTxRate18Bytes=iapStatsTxRate18Bytes, stationAssociationRSSIa6=stationAssociationRSSIa6, idsAuthFloodMode=idsAuthFloodMode, vlanStatsRxPackets=vlanStatsRxPackets)
mibBuilder.exportSymbols("XIRRUS-MIB", ssidWpaPassphraseForm=ssidWpaPassphraseForm, adminHistoryTable=adminHistoryTable, iapStatsTxBeacons=iapStatsTxBeacons, idsAuthFloodPeriod=idsAuthFloodPeriod, rogueDetectAPTable=rogueDetectAPTable, stationAssociationTimeRSSIa5=stationAssociationTimeRSSIa5, aclTable=aclTable, proxyMgmtHttpPort=proxyMgmtHttpPort, xs3500Array=xs3500Array, globalExtractStaInfoType=globalExtractStaInfoType, xd3_230Array=xd3_230Array, stationStatsTxRate11Packets=stationStatsTxRate11Packets, xr4430Array=xr4430Array, rfMonitorTimeshareScanInterval=rfMonitorTimeshareScanInterval, idsNullProbeRespPeriod=idsNullProbeRespPeriod, wprWhitelistSsidTable=wprWhitelistSsidTable, radiusNasIdentifier=radiusNasIdentifier, systemPreLoginBanner=systemPreLoginBanner, stationStatsTimePeriod=stationStatsTimePeriod, syslogConsole=syslogConsole, vlanStatsRxDropped=vlanStatsRxDropped, snmpAgentTrapHost=snmpAgentTrapHost, ssidWepKey4Size=ssidWepKey4Size, stationStatsRxRate18Packets=stationStatsRxRate18Packets, fastRoamingLayer=fastRoamingLayer, wdsStatsRxRate48Retries=wdsStatsRxRate48Retries, wdsStatsTxRate12Retries=wdsStatsTxRate12Retries, rogueDetectSSIDEntry=rogueDetectSSIDEntry, global11aIAPAutoCellPeriod=global11aIAPAutoCellPeriod, systemArrayInfo=systemArrayInfo, xr2247Array=xr2247Array, autoChannelList11aIndex=autoChannelList11aIndex, staAssurSNR=staAssurSNR, stationAssocRSSIabg2=stationAssocRSSIabg2, proxyMgmtSocksType=proxyMgmtSocksType, staAssuranceDataRateActive=staAssuranceDataRateActive, realtimeMonitorSignalToNoiseRatio=realtimeMonitorSignalToNoiseRatio, stationAssociationRSSIa5=stationAssociationRSSIa5, filterApplication=filterApplication, stationAssocBand=stationAssocBand, envCtrlCoolRPM2=envCtrlCoolRPM2, rogueDetectAPOrigTableBand=rogueDetectAPOrigTableBand, ssidDateOff=ssidDateOff, groupWprBackground=groupWprBackground, cdpInfoIndex=cdpInfoIndex, xn4Array=xn4Array, xmManage=xmManage, xr2426Array=xr2426Array, adminTableClear=adminTableClear, global11aIAPAutoCellByChan=global11aIAPAutoCellByChan, filterTrackApps=filterTrackApps, vlanPoolRowStatus=vlanPoolRowStatus, iapStatsRxRate12Bytes=iapStatsRxRate12Bytes, ethLED=ethLED, staAssurDeviceType=staAssurDeviceType, xr1220hArray=xr1220hArray, stationStatsRxRate5Errors=stationStatsRxRate5Errors, rates11a=rates11a, xa1_120Array=xa1_120Array, rates11bgSet=rates11bgSet, syslogLevelTerServer=syslogLevelTerServer, dhcpPoolDNSServer1=dhcpPoolDNSServer1, iapStatsRxBroadcast=iapStatsRxBroadcast, idsImpersonation=idsImpersonation, stationStatsTxRate36Packets=stationStatsTxRate36Packets, ssidRadiusAcctEnable=ssidRadiusAcctEnable, wdsClientLinkEnable=wdsClientLinkEnable, adminUsername=adminUsername, dhcpPoolDNSDomain=dhcpPoolDNSDomain, stationUnassociatedRSSIabg4=stationUnassociatedRSSIabg4, filterLog=filterLog, wepKeyTable=wepKeyTable, tunnelFailoverNumFailures=tunnelFailoverNumFailures, wdsHostLinkState=wdsHostLinkState, iapStatsIfaceName=iapStatsIfaceName, stationAppStatsRxPackets=stationAppStatsRxPackets, xr6820Array=xr6820Array, syslogSecServerPort=syslogSecServerPort, wdsStatsRxRate54Retries=wdsStatsRxRate54Retries, globalMulticastVlanForwardingIndex=globalMulticastVlanForwardingIndex, vlanStaAppStatsTxPackets=vlanStaAppStatsTxPackets, proxyMgmtMask07=proxyMgmtMask07, wdsStatsTxErrors=wdsStatsTxErrors, systemResetCode=systemResetCode, iapEnable=iapEnable, activeDirectoryRealm=activeDirectoryRealm, ssidLimitsDaysOnSat=ssidLimitsDaysOnSat, vlanStatsName=vlanStatsName, products=products, ethStatsIfaceDuplex=ethStatsIfaceDuplex, filterTable=filterTable, systemLicenseFeatures=systemLicenseFeatures, filterDstGroup=filterDstGroup, envCtrlTemperature=envCtrlTemperature, stationAssocTimeRSSIabg3=stationAssocTimeRSSIabg3, stationAppStatsTxPackets=stationAppStatsTxPackets, vlanMgmtAppStatsRxBytes=vlanMgmtAppStatsRxBytes, global11ac=global11ac, iapStatsTxRate2Packets=iapStatsTxRate2Packets, xr6836Array=xr6836Array, ssidHoneypotWhitelistIndex=ssidHoneypotWhitelistIndex, stationAssociationMediaType=stationAssociationMediaType, idsEventPeriod=idsEventPeriod, vlanGateway=vlanGateway, iapStatsTxRate1Retries=iapStatsTxRate1Retries, stationAssocRxRate=stationAssocRxRate, positionInfoScale=positionInfoScale, iapStatsRxFragErrors=iapStatsRxFragErrors, globalIAPBeaconRate=globalIAPBeaconRate, proxyMgmtHttpPassword=proxyMgmtHttpPassword, stationUnassocRSSIa3=stationUnassocRSSIa3, staAssuranceRSSI=staAssuranceRSSI, autoChannelList11bgSet=autoChannelList11bgSet, tunnelType=tunnelType, stationUnassocRSSIa5=stationUnassocRSSIa5, systemLicenseMaxNumIAPs=systemLicenseMaxNumIAPs, groupActive=groupActive, wprWhitelistGroupName=wprWhitelistGroupName, realtimeMonitorEntry=realtimeMonitorEntry, xa3_240Array=xa3_240Array, autoChannelList11bg=autoChannelList11bg, filterDstIface=filterDstIface, rogueDetectAPIndex=rogueDetectAPIndex, globalStaAuthTimeout=globalStaAuthTimeout, cdpInfoHostname=cdpInfoHostname, idsAPImpersonationThreshold=idsAPImpersonationThreshold, stationAppCatStatsGuid=stationAppCatStatsGuid, systemTempTable=systemTempTable, filterName=filterName, xr2435hArray=xr2435hArray, global11bgIAPgProtect=global11bgIAPgProtect, envCtrl=envCtrl, iapStatsTxRate5Bytes=iapStatsTxRate5Bytes, cluster=cluster, adminRadiusSecServerPort=adminRadiusSecServerPort, radiusAcctSecServerHostname=radiusAcctSecServerHostname, dnsUseDhcp=dnsUseDhcp, mdmAirWatchApiPollPeriod=mdmAirWatchApiPollPeriod, adminLogout=adminLogout, ethStatsRxDropped=ethStatsRxDropped, globalNumStations=globalNumStations, iapMacAddress=iapMacAddress, xr1226hArray=xr1226hArray, ssidLimitsTrafficLimit=ssidLimitsTrafficLimit, wdsStatsRxRate24Errors=wdsStatsRxRate24Errors, ssidDhcpPool=ssidDhcpPool, iapStatsIndex=iapStatsIndex, filterSrcVlan=filterSrcVlan, mdmAirWatchRedirectURL=mdmAirWatchRedirectURL, ssidLimitsTrafficLimitKbps=ssidLimitsTrafficLimitKbps, neighborArrayHostname=neighborArrayHostname, filterEntry=filterEntry, proxyMgmtSubnet03=proxyMgmtSubnet03, filterTrafficLimit=filterTrafficLimit, iapStatsTxRate9Packets=iapStatsTxRate9Packets, rates11bgIndex=rates11bgIndex, proxyMgmtHttpType=proxyMgmtHttpType, xr2247hArray=xr2247hArray, wdsStatsRxRate1Bytes=wdsStatsRxRate1Bytes, stationAssocTable=stationAssocTable, stationUnassocMediaType=stationUnassocMediaType, xs16Array=xs16Array, xh4_130Array=xh4_130Array, globalExtractStaInfoEntry=globalExtractStaInfoEntry, stationStatsTxRate18Retries=stationStatsTxRate18Retries, xa2_120Array=xa2_120Array, envCtrlTraps=envCtrlTraps, ssidEncryption=ssidEncryption, wdsHostLinkEntry=wdsHostLinkEntry, wdsStatsTxRate9Errors=wdsStatsTxRate9Errors, envCtrlCoolRPM4=envCtrlCoolRPM4, softwareUploadSuccess=softwareUploadSuccess, wdsStatsRxRate36Errors=wdsStatsRxRate36Errors, clusterArrayCluster=clusterArrayCluster, iapStatsRxRate6Bytes=iapStatsRxRate6Bytes, stationAssuranceRetryRate=stationAssuranceRetryRate, systemActivationInterval=systemActivationInterval, iapStatsRxTotalErrors=iapStatsRxTotalErrors, radiusFailoverTimeout=radiusFailoverTimeout, wdsClientLinkIndex=wdsClientLinkIndex, iapStatsTxManagement=iapStatsTxManagement, wdsStatsRxRate54Errors=wdsStatsRxRate54Errors, staAssuranceDistance=staAssuranceDistance, stationAssocDeviceClass=stationAssocDeviceClass, stationUnassociatedRSSIa7=stationUnassociatedRSSIa7, stationStatsTxRate36Retries=stationStatsTxRate36Retries, rogueDetectAPOrigTable=rogueDetectAPOrigTable, systemHttpsPort=systemHttpsPort, filterSrcIface=filterSrcIface, groupDaysOnSun=groupDaysOnSun, stationUnassociatedRSSIa2=stationUnassociatedRSSIa2, globalDscpMappingIndex=globalDscpMappingIndex, idsDosAttack=idsDosAttack, xr530hArray=xr530hArray, ssidRadiusSecServerHostname=ssidRadiusSecServerHostname, stationAssociationRSSIa4=stationAssociationRSSIa4, stationAssuranceErrorRate=stationAssuranceErrorRate, wdsStatsRxRate48Packets=wdsStatsRxRate48Packets, rates11nEntry=rates11nEntry, stationDeauthMacAddress=stationDeauthMacAddress, groupDhcpPool=groupDhcpPool, vlanUndefinedEntry=vlanUndefinedEntry, xh4_230Array=xh4_230Array, stationAssocTimeRSSIa3=stationAssocTimeRSSIa3, tunnelName=tunnelName, stationUnassocRSSIa8=stationUnassocRSSIa8, filterSrcGroup=filterSrcGroup, idsAssocFloodMode=idsAssocFloodMode, neighborArrayNumStationsAssoc=neighborArrayNumStationsAssoc, radiusAcctPriServerSecret=radiusAcctPriServerSecret, ssidWpaUPSKServerConnError=ssidWpaUPSKServerConnError, iapMaxStationsDay=iapMaxStationsDay, filterDstType=filterDstType, idsEventTime=idsEventTime, wdsStatsTxRate48Errors=wdsStatsTxRate48Errors, neighborArrayInRange=neighborArrayInRange, vlanStatsTxCarrierErrors=vlanStatsTxCarrierErrors, stationStatsTxRate6Bytes=stationStatsTxRate6Bytes, syslogEmailPassword=syslogEmailPassword, ssidWprHeaderText=ssidWprHeaderText, iapStatsTimePeriod=iapStatsTimePeriod, rogueDetectSSIDName=rogueDetectSSIDName, rogueDetectAutoBlockWhitelistTable=rogueDetectAutoBlockWhitelistTable, fastRoamingTargetTable=fastRoamingTargetTable, ssidHoneypotBroadcastSSID=ssidHoneypotBroadcastSSID, stationStatsRxRate9Errors=stationStatsRxRate9Errors, iapStatsTxTotalErrors=iapStatsTxTotalErrors, stationAppCatStatsMACAddress=stationAppCatStatsMACAddress, clusterArrayPasswordForm=clusterArrayPasswordForm, rogueDetectAPStatus=rogueDetectAPStatus, snmpAgentV3ReadOnlyUserAuthPassphraseEnc=snmpAgentV3ReadOnlyUserAuthPassphraseEnc, globalExtractStaInfoIndex=globalExtractStaInfoIndex, dhcpPoolDNSServer3=dhcpPoolDNSServer3, globalAutoBandEnable=globalAutoBandEnable, stationUnassociatedIndex=stationUnassociatedIndex, stationUnassocRSSIabg2=stationUnassocRSSIabg2, xd1_130Array=xd1_130Array, idsDisassocAttackEnable=idsDisassocAttackEnable, consoleBaud=consoleBaud, stationUnassocRSSIabg4=stationUnassocRSSIabg4, aclSsidMacAddress=aclSsidMacAddress, autoChannelList11aChannel=autoChannelList11aChannel, iapStatsRxMulticast=iapStatsRxMulticast, vlanFastRoaming=vlanFastRoaming, staAssurAlarmType=staAssurAlarmType, xr2435Array=xr2435Array, adminRowStatus=adminRowStatus, groupWprHttpsEnable=groupWprHttpsEnable, filterListIndex=filterListIndex, fpgaIndex=fpgaIndex, stationStatsTxRate36Errors=stationStatsTxRate36Errors, ssidRadiusAcctPriServerIPAddress=ssidRadiusAcctPriServerIPAddress, stationAssocRSSI=stationAssocRSSI, iapWifiMode=iapWifiMode)
mibBuilder.exportSymbols("XIRRUS-MIB", ssidWepKey3StringForm=ssidWepKey3StringForm, staAssuranceIPAddress=staAssuranceIPAddress, iapStatsTxRTSRetries=iapStatsTxRTSRetries, stationUnassocTimeRSSIabg3=stationUnassocTimeRSSIabg3, xr430hArray=xr430hArray, iapStatsRxEncErrors=iapStatsRxEncErrors, netflow=netflow, systemContactEmail=systemContactEmail, stationAppStatsRxBytes=stationAppStatsRxBytes, snmpAgentV3ReadOnlyUserPrivPassphraseEnc=snmpAgentV3ReadOnlyUserPrivPassphraseEnc, stationAssocTimeRSSIabg1=stationAssocTimeRSSIabg1, filterListName=filterListName, globalIAPInactiveTime=globalIAPInactiveTime, idsNullProbeRespThreshold=idsNullProbeRespThreshold, groupWprServerType=groupWprServerType, iapMaxStationsMonth=iapMaxStationsMonth, ethMgmt=ethMgmt, ethStatsIfaceLink=ethStatsIfaceLink, iap=iap, staAssurDeviceClass=staAssurDeviceClass, idsEventMacAddress=idsEventMacAddress, stationStatsRxRate1Packets=stationStatsRxRate1Packets, vlanMgmtAppCatStatsTxBytes=vlanMgmtAppCatStatsTxBytes, ssidRadiusAcctSecServerHostname=ssidRadiusAcctSecServerHostname, iapStatsTxRate1Packets=iapStatsTxRate1Packets, globalMulticastDnsFilteringIndex=globalMulticastDnsFilteringIndex, wdsStatsTxRate18Packets=wdsStatsTxRate18Packets, iapStatsRxDuplicates=iapStatsRxDuplicates, xr1136hArray=xr1136hArray, global11aIAPChannelReset=global11aIAPChannelReset, autoChannelList11aEntry=autoChannelList11aEntry, tunnel=tunnel, wdsClientLinkMaxIAPs=wdsClientLinkMaxIAPs, adminRadiusPriServer=adminRadiusPriServer, global11bgIAPRTSThreshold=global11bgIAPRTSThreshold, snmpAgentTrapHost2=snmpAgentTrapHost2, stationStatsTxRate54Bytes=stationStatsTxRate54Bytes, groupTable=groupTable, ethPortMode=ethPortMode, staAssuranceErrorRateActive=staAssuranceErrorRateActive, idsEventEntry=idsEventEntry, systemGroupName=systemGroupName, aclEnable=aclEnable, iapResetsMac=iapResetsMac, stationAssociationNetbiosName=stationAssociationNetbiosName, vlanTableReset=vlanTableReset, idsEventIndex=idsEventIndex, snmpAgentReadOnlyCommunityEnc=snmpAgentReadOnlyCommunityEnc, stationStatsRxRate12Errors=stationStatsRxRate12Errors, xr2230hArray=xr2230hArray, global11nAutoBond=global11nAutoBond, stationStatsRxRate11Errors=stationStatsRxRate11Errors, idsAPImpersonationEnable=idsAPImpersonationEnable, tunnelLocalEndpoint=tunnelLocalEndpoint, oauthTokenExpiration=oauthTokenExpiration, stationStatsRxRate54Retries=stationStatsRxRate54Retries, ssidWprScreenTimeout=ssidWprScreenTimeout, wdsStatsRxRate11Retries=wdsStatsRxRate11Retries, iapStatsTxRate11Bytes=iapStatsTxRate11Bytes, clusterArrayHostname=clusterArrayHostname, rates11nMCSStatus=rates11nMCSStatus, ethStatsRxTotalErrors=ethStatsRxTotalErrors, interfaceMACAddressIndex=interfaceMACAddressIndex, positionInfoMap=positionInfoMap, iapMaxStationsHour=iapMaxStationsHour, stationAssocRSSIabg4=stationAssocRSSIabg4, iapStatsRxRate18Bytes=iapStatsRxRate18Bytes, wdsStatsRxRate12Packets=wdsStatsRxRate12Packets, ethAutoneg=ethAutoneg, ledsActivityPacketType=ledsActivityPacketType, globalDscpMappingEntry=globalDscpMappingEntry, stationUnassocRSSIa9=stationUnassocRSSIa9, proxyMgmtMask08=proxyMgmtMask08, stationAssociationRSSIa11=stationAssociationRSSIa11, systemXmsControl=systemXmsControl, xr7220Array=xr7220Array, snmpAgentKeepAlive=snmpAgentKeepAlive, autoChannelList11aSet=autoChannelList11aSet, radiusAcctSecServerSecret=radiusAcctSecServerSecret, vlanStatsRxFifoErrors=vlanStatsRxFifoErrors, globalWmmPowerSave=globalWmmPowerSave, iapStatsRxRate1Errors=iapStatsRxRate1Errors, wdsStatsTxRate48Packets=wdsStatsTxRate48Packets, snmpAgentV3Enable=snmpAgentV3Enable, groupRadiusFilterID=groupRadiusFilterID, iapBeaconProbeFailure=iapBeaconProbeFailure, stationAssociationTimeRSSIabg2=stationAssociationTimeRSSIabg2, bondActiveVlans=bondActiveVlans, stationAssociationTimeRSSIa11=stationAssociationTimeRSSIa11, spectrumAnalysisNoiseFloor=spectrumAnalysisNoiseFloor, xr1147hArray=xr1147hArray, realtimeMonitorIfaceName=realtimeMonitorIfaceName, xr1226Array=xr1226Array, xr2236Array=xr2236Array, spanningTreeWDSHostLink1State=spanningTreeWDSHostLink1State, ssidLimitsTable=ssidLimitsTable, wifiTagEnable=wifiTagEnable, xd4_120Array=xd4_120Array, snmpAgentEngineID=snmpAgentEngineID, filterAppTable=filterAppTable, idsEventSSID=idsEventSSID, stationAssocDeviceSourceIndex=stationAssocDeviceSourceIndex, vlanStatsTxFifoErrors=vlanStatsTxFifoErrors, idsProbeReqFloodPeriod=idsProbeReqFloodPeriod, iapStatsTxBytes=iapStatsTxBytes, wdsStatsRxErrors=wdsStatsRxErrors, fastRoamingTargetIndex=fastRoamingTargetIndex, ssidLimitsDaysOnThu=ssidLimitsDaysOnThu, adminPrivLevelEntry=adminPrivLevelEntry, filterAppIndex=filterAppIndex, autoChannelList11bgChannel=autoChannelList11bgChannel, snmpAgentTrapHost3=snmpAgentTrapHost3, spectrumAnalysisAverageDataRate=spectrumAnalysisAverageDataRate, xd4_240Array=xd4_240Array, wep=wep, radiusSecServerHostname=radiusSecServerHostname, filterBytes=filterBytes, iapStatsTxRate48Retries=iapStatsTxRate48Retries, filterIndex=filterIndex, iapStatsRxRate24Bytes=iapStatsRxRate24Bytes, stationUnassocTimeRSSIa7=stationUnassocTimeRSSIa7, adminRadiusPriServerSecret=adminRadiusPriServerSecret, iapSsidToBssidMappingBSSID=iapSsidToBssidMappingBSSID, snmpAgentRestart=snmpAgentRestart, snmpAgentReadWriteCommunityEnc=snmpAgentReadWriteCommunityEnc, stationUnassocTimeRSSIabg2=stationUnassocTimeRSSIabg2, filterAppCatTable=filterAppCatTable, xr520hArray=xr520hArray, stationStatsRxRate11Retries=stationStatsRxRate11Retries, ssidLimitsTimeOn=ssidLimitsTimeOn, ntpPrimaryAuthType=ntpPrimaryAuthType, proxyMgmtSubnet09=proxyMgmtSubnet09, stationUnassociatedRSSIa6=stationUnassociatedRSSIa6, globalIAPMaxStations=globalIAPMaxStations, filterAppCatIndex=filterAppCatIndex, stationStatsTxRate12Bytes=stationStatsTxRate12Bytes, global11aIAPAutoCellOverlap=global11aIAPAutoCellOverlap, staAssurMACAddress=staAssurMACAddress, ssidFilterList=ssidFilterList, stationAssociationRSSIabg3=stationAssociationRSSIabg3, filterDstMacAddress=filterDstMacAddress, realtimeMonitorDot11Busy=realtimeMonitorDot11Busy, wdsStatsRxRate2Retries=wdsStatsRxRate2Retries, spectrumAnalysisEntry=spectrumAnalysisEntry, rogueDetectAPIPAddress=rogueDetectAPIPAddress, rates11bg=rates11bg, idsEAPFloodMode=idsEAPFloodMode, stationAssocVLAN=stationAssocVLAN, global11bgIAPgOnly=global11bgIAPgOnly, groupWprSplashTimeout=groupWprSplashTimeout, ssidDefaultSecurity=ssidDefaultSecurity, vlanPoolEntry=vlanPoolEntry, global11n=global11n, iapStatsTable=iapStatsTable, bondTable=bondTable, systemTempCelsius=systemTempCelsius, stationAssocTimeRSSIabg2=stationAssocTimeRSSIabg2, wdsStatsRxRate36Packets=wdsStatsRxRate36Packets, activeDirectoryJoin=activeDirectoryJoin, stationLocPositionZ=stationLocPositionZ, spanningTreeWDSHostLink3State=spanningTreeWDSHostLink3State, stationUnassocTxRate=stationUnassocTxRate, componentPart=componentPart, adminPrivLevelName=adminPrivLevelName, ethEnable=ethEnable, autoCellPeriod=autoCellPeriod, adminRadiusAuthType=adminRadiusAuthType, stationStatsTxRate1Bytes=stationStatsTxRate1Bytes, syslogPriServerPort=syslogPriServerPort, xh8_240Array=xh8_240Array, ssidLimitsTimeOff=ssidLimitsTimeOff, fastRoamingTargetHostname=fastRoamingTargetHostname, staAssuranceAuthFailuresActive=staAssuranceAuthFailuresActive, fastRoamingTargetType=fastRoamingTargetType, rogueDetectSSIDTableReset=rogueDetectSSIDTableReset, staAssurAuthFailures=staAssurAuthFailures, iapStatsTxRate36Retries=iapStatsTxRate36Retries, wdsStatsRxRate6Packets=wdsStatsRxRate6Packets, ntpPrimary=ntpPrimary, wdsStatsRxRate18Retries=wdsStatsRxRate18Retries, ssidRadiusFailoverTimeout=ssidRadiusFailoverTimeout, ethStatsRxPackets=ethStatsRxPackets, stationStatsRxRate11Packets=stationStatsRxRate11Packets, xr4436Array=xr4436Array, iapStatsRxRate54Errors=iapStatsRxRate54Errors, wdsStatsTxRetries=wdsStatsTxRetries, proxyMgmtMask04=proxyMgmtMask04, stationAssociationTimeRSSIa12=stationAssociationTimeRSSIa12, iapStatsRxRate9Retries=iapStatsRxRate9Retries, stationStatsRxRate5Retries=stationStatsRxRate5Retries, wifiTagUdpPort=wifiTagUdpPort, stationStatsTxRate2Errors=stationStatsTxRate2Errors, adminRadiusTimeout=adminRadiusTimeout, aclRowStatus=aclRowStatus, wpaAES=wpaAES, radiusEnable=radiusEnable, global11acMaxMCS2SS=global11acMaxMCS2SS, spanningTreeWDSClientLink3State=spanningTreeWDSClientLink3State, stationStatsRxRate12Packets=stationStatsRxRate12Packets, iapStatsRxRate1Bytes=iapStatsRxRate1Bytes, wdsStatsTxRate54Errors=wdsStatsTxRate54Errors, globalPublicSafety=globalPublicSafety, xs8Array=xs8Array, rogueDetectAPBSSID=rogueDetectAPBSSID, dnsSrv1=dnsSrv1, idsEvilTwinAttackEnable=idsEvilTwinAttackEnable, radiusAcctInterval=radiusAcctInterval, vlanStatsTxCompressed=vlanStatsTxCompressed, globalMulticastVlanForwardingVlanNumber=globalMulticastVlanForwardingVlanNumber, vlanStatsEntry=vlanStatsEntry, dhcpPoolNAT=dhcpPoolNAT, ssidWepKey2StringForm=ssidWepKey2StringForm, pysmi_global=pysmi_global, stationUnassociatedTimeRSSIa4=stationUnassociatedTimeRSSIa4, ssidWprEnable=ssidWprEnable, stationUnassociatedRSSIa9=stationUnassociatedRSSIa9, vlanMgmtAppCatStatsVlan=vlanMgmtAppCatStatsVlan, groupWprScreenType=groupWprScreenType, groupWprSharedSecretForm=groupWprSharedSecretForm, groupTimeOff=groupTimeOff, stationStatsTxRate54Errors=stationStatsTxRate54Errors, ethStatsTxDropped=ethStatsTxDropped, adminHistoryLoginTime=adminHistoryLoginTime, rogueDetectAPChannel=rogueDetectAPChannel, rogueDetectAPTimeLastActive=rogueDetectAPTimeLastActive, ssidVlanPool=ssidVlanPool, iapStatsTxRate11Errors=iapStatsTxRate11Errors, stationUnassociatedRSSIa8=stationUnassociatedRSSIa8, stationAssocTimeRSSIa4=stationAssocTimeRSSIa4, iapStatsRxRate48Errors=iapStatsRxRate48Errors, activeDirectoryUser=activeDirectoryUser, vlanStaAppStatsGuid=vlanStaAppStatsGuid, adminRadiusSecServer=adminRadiusSecServer, envCtrlCoolRPM1=envCtrlCoolRPM1, stationACLFailure=stationACLFailure, idsStationImpersonationPeriod=idsStationImpersonationPeriod, globalIAPCellSize=globalIAPCellSize, stationAssocKeyMgmt=stationAssocKeyMgmt, stationStatsRxRate24Retries=stationStatsRxRate24Retries, wdsStatsTxRate2Retries=wdsStatsTxRate2Retries, xh8_120Array=xh8_120Array, stationAssociationHostname=stationAssociationHostname, stationUnassociatedRSSIa1=stationUnassociatedRSSIa1, systemLocation=systemLocation, groupDaysOnThu=groupDaysOnThu, ssidRadiusEnable=ssidRadiusEnable, systemReboot=systemReboot, stationAppCatStatsEntry=stationAppCatStatsEntry, locationReportingKey=locationReportingKey, staAssurErrorRate=staAssurErrorRate, stationStatsTxRate2Retries=stationStatsTxRate2Retries, group=group, global11nBondedChannelWidth2GHz=global11nBondedChannelWidth2GHz, stationUnassociatedTimeRSSIa11=stationUnassociatedTimeRSSIa11)
mibBuilder.exportSymbols("XIRRUS-MIB", stationStatsTxRate12Packets=stationStatsTxRate12Packets, envCtrlHumidity=envCtrlHumidity, xh1_230Array=xh1_230Array, idsEventMaxPackets=idsEventMaxPackets, envCtrlTempUnder=envCtrlTempUnder, staAssuranceAssocTime=staAssuranceAssocTime, xa4_120Array=xa4_120Array, wdsStatsTxBytes=wdsStatsTxBytes, staAssurManufacturer=staAssurManufacturer, stationAssuranceEntry=stationAssuranceEntry, iapStatsRxCTS=iapStatsRxCTS, vlanMgmtAppStatsTxBytes=vlanMgmtAppStatsTxBytes, globalIPv6Filter=globalIPv6Filter, iapStatsRxRate24Errors=iapStatsRxRate24Errors, stationUnassociatedTimeRSSIa6=stationUnassociatedTimeRSSIa6, wifiTagChannel2=wifiTagChannel2, wdsStatsTxRate12Errors=wdsStatsTxRate12Errors, proxyMgmtMask05=proxyMgmtMask05, dhcpPoolMask=dhcpPoolMask, neighborArrayUptime=neighborArrayUptime, wdsStatsTxRate5Packets=wdsStatsTxRate5Packets, stationUnassocTimeRSSIa6=stationUnassocTimeRSSIa6, systemRemoteServer=systemRemoteServer, xr2447Array=xr2447Array, xr6847Array=xr6847Array, dhcp=dhcp, locationReportingUrl=locationReportingUrl, iapStatsTxRate6Packets=iapStatsTxRate6Packets, vlanPoolName=vlanPoolName, wepDefaultKeyID=wepDefaultKeyID, wdsStatsTxRate9Packets=wdsStatsTxRate9Packets, iapStatsNoiseTotal=iapStatsNoiseTotal, wdsStatsRxRate18Packets=wdsStatsRxRate18Packets, interfaceMACAddressEntry=interfaceMACAddressEntry, positionInfoZ=positionInfoZ, xr1247hArray=xr1247hArray, dateTime=dateTime, xr2436hArray=xr2436hArray, ntp=ntp, wifiTag=wifiTag, rogueDetectAPType=rogueDetectAPType, stationAssocRSSIa10=stationAssocRSSIa10, wdsStatsTxRate36Retries=wdsStatsTxRate36Retries, adminTable=adminTable, xn16Array=xn16Array, ssidWepKey2Size=ssidWepKey2Size, stationUnassociatedTimeRSSIa12=stationUnassociatedTimeRSSIa12, vlanStaAppStatsTxBytes=vlanStaAppStatsTxBytes, encDoorOpened=encDoorOpened, proxyMgmtMask02=proxyMgmtMask02, tunnelIndex=tunnelIndex, stationUnassocRSSIa11=stationUnassocRSSIa11, vlanPoolListMember=vlanPoolListMember, iapStatsRxPackets=iapStatsRxPackets, vlanStatsRxCompressed=vlanStatsRxCompressed, xr630hArray=xr630hArray, staAssuranceAuthFailuresTimestamp=staAssuranceAuthFailuresTimestamp, stationStatsTxRate36Bytes=stationStatsTxRate36Bytes, componentEntry=componentEntry, iapStatsRxRate6Errors=iapStatsRxRate6Errors, iapStatsTxRate6Errors=iapStatsTxRate6Errors, stationAssociationBand=stationAssociationBand, adminPrivSectionIndex=adminPrivSectionIndex, licenseFeatureName=licenseFeatureName, stationAssuranceAssocTime=stationAssuranceAssocTime, idsDeauthAttackEnable=idsDeauthAttackEnable, idsProbeReqFloodThreshold=idsProbeReqFloodThreshold, wdsStatsRxRate2Packets=wdsStatsRxRate2Packets, wdsStatsTxRate6Packets=wdsStatsTxRate6Packets, filterAppListEntry=filterAppListEntry, systemPCIAuditMode=systemPCIAuditMode, stationAssocTimeRSSIa7=stationAssocTimeRSSIa7, stationStatsTxRate11Retries=stationStatsTxRate11Retries, xr1130Array=xr1130Array, xd3_240Array=xd3_240Array, staAssuranceErrorRateTimestamp=staAssuranceErrorRateTimestamp, cfgModuleOID=cfgModuleOID, xr620hArray=xr620hArray, idsDurationAttackNAV=idsDurationAttackNAV, rates11aStatus=rates11aStatus, iapStatsTxRate24Bytes=iapStatsTxRate24Bytes, stationLocMACAddress=stationLocMACAddress, stationStatsTxRate5Retries=stationStatsTxRate5Retries, ssidQOS=ssidQOS, iapStatsRxRate6Retries=iapStatsRxRate6Retries, globalDscpMappingDscp=globalDscpMappingDscp, iapStatsTxMultipleRetries=iapStatsTxMultipleRetries, spanningTreeWDSClientLink4State=spanningTreeWDSClientLink4State, wdsStatsRxRate1Errors=wdsStatsRxRate1Errors, systemLicenseKey=systemLicenseKey, globalLoadBalancing=globalLoadBalancing, stationAssociationTimeRSSIa10=stationAssociationTimeRSSIa10, global11aIAPAutoChannelEnable=global11aIAPAutoChannelEnable, staAssurAssocTimeTimestamp=staAssurAssocTimeTimestamp, globalIAPChannelReset=globalIAPChannelReset, filterDstSsid=filterDstSsid, staAssuranceAuthFailures=staAssuranceAuthFailures, ethStatsTxCompressed=ethStatsTxCompressed, stationUnassociatedMediaType=stationUnassociatedMediaType, idsDisassocFloodPeriod=idsDisassocFloodPeriod, filterListReset=filterListReset, stationAssocRSSIa11=stationAssocRSSIa11, stationStatsRxRate24Packets=stationStatsRxRate24Packets, staAssuranceDataRateTimestamp=staAssuranceDataRateTimestamp, ethIndex=ethIndex, vlanStatsRxMulticast=vlanStatsRxMulticast, ssidWprServerType=ssidWprServerType, rates11aTable=rates11aTable, filterDstInvertSense=filterDstInvertSense, ssidHoneypotWhitelistRowStatus=ssidHoneypotWhitelistRowStatus, filterSetIP=filterSetIP, ssidHoneypotBroadcastTable=ssidHoneypotBroadcastTable, adminRadius=adminRadius, xr520Array=xr520Array, stationStatsTxRate6Packets=stationStatsTxRate6Packets, autoChannelList11a=autoChannelList11a, stationAssocRSSIabg3=stationAssocRSSIabg3, wdsStatsRxRate48Bytes=wdsStatsRxRate48Bytes, stationStatsTxPackets=stationStatsTxPackets, envCtrlHumidOver=envCtrlHumidOver, stationAssociationTimeRSSIa6=stationAssociationTimeRSSIa6, adminRadiusEnable=adminRadiusEnable, staAssuranceDistanceTimestamp=staAssuranceDistanceTimestamp, iapWdsHostLink=iapWdsHostLink, stationAssocDeviceType=stationAssocDeviceType, ssidLimitsSsidName=ssidLimitsSsidName, staAssurDistanceActive=staAssurDistanceActive, iapStatsRxRate12Packets=iapStatsRxRate12Packets, idsStationImpersonationEnable=idsStationImpersonationEnable, iapStatsTxRate1Errors=iapStatsTxRate1Errors, snmpAgentTrapPort3=snmpAgentTrapPort3, xr2420Array=xr2420Array, traps=traps, vlanIndex=vlanIndex, wdsStatsTxRate1Packets=wdsStatsTxRate1Packets, syslogLevelSecServer=syslogLevelSecServer, wdsStatsRxBytes=wdsStatsRxBytes, wdsStatsRxRate54Bytes=wdsStatsRxRate54Bytes, syslogSecServer=syslogSecServer, filterSetDSCP=filterSetDSCP, iapStatsTxRTSFailures=iapStatsTxRTSFailures, stationUnassocTimeRSSIabg4=stationUnassocTimeRSSIabg4, oauth=oauth, idsDisassocAttackPeriod=idsDisassocAttackPeriod, stationUnassocTimeRSSIa8=stationUnassocTimeRSSIa8, syslogEntry=syslogEntry, iapStatsRxRate11Errors=iapStatsRxRate11Errors, clusterArrayPassword=clusterArrayPassword, stationUnassocRSSIa7=stationUnassocRSSIa7, global11aIAPTxPwr=global11aIAPTxPwr, filterProtocol=filterProtocol, wdsClientLinkTableReset=wdsClientLinkTableReset, idsMICErrorAttackEnable=idsMICErrorAttackEnable, radiusPriServerIPAddress=radiusPriServerIPAddress, wprWhitelistSsidTableReset=wprWhitelistSsidTableReset, rogueDetectAPOrigTableEntry=rogueDetectAPOrigTableEntry, staAssurTimestamp=staAssurTimestamp, iapChannelBondMode=iapChannelBondMode, xr4847Array=xr4847Array, activeDirectoryPassword=activeDirectoryPassword, idsBeaconFloodPeriod=idsBeaconFloodPeriod, oauthTokenEntry=oauthTokenEntry, tunnelMTU=tunnelMTU, xs3900Array=xs3900Array, stationLocPositionX=stationLocPositionX, stationStatsRxRate18Retries=stationStatsRxRate18Retries, filterDstIPAddress=filterDstIPAddress, idsNullProbeRespEnable=idsNullProbeRespEnable, stationUnassocRxRate=stationUnassocRxRate, proxyMgmtMask09=proxyMgmtMask09, idsAPImpersonationPeriod=idsAPImpersonationPeriod, radiusSecServerSecret=radiusSecServerSecret, vlanMgmtAppStatsIndex=vlanMgmtAppStatsIndex, adminPrivilegeLevel=adminPrivilegeLevel, stationUnassocMACAddress=stationUnassocMACAddress, stationAssociationUserAgent=stationAssociationUserAgent, idsAuthFloodThreshold=idsAuthFloodThreshold, ethEntry=ethEntry, iapStatsTxUnicast=iapStatsTxUnicast, stationUnassocRSSIabg1=stationUnassocRSSIabg1, wepKeyEntry=wepKeyEntry, vlanStatsTimePeriod=vlanStatsTimePeriod, vlanPoolTableReset=vlanPoolTableReset, bondIndex=bondIndex, groupWprHeaderText=groupWprHeaderText, stationStatsRxRate48Bytes=stationStatsRxRate48Bytes, staAssurAssocTime=staAssurAssocTime, vlanMgmtAppCatStatsTable=vlanMgmtAppCatStatsTable, global11bgIAPAutoCellMinTxPwr=global11bgIAPAutoCellMinTxPwr, wdsStatsTxRate11Bytes=wdsStatsTxRate11Bytes, filterStateful=filterStateful, fastRoamingTargetArrayTableReset=fastRoamingTargetArrayTableReset, stationUnassocTimeRSSIa10=stationUnassocTimeRSSIa10, autoCellOverlap=autoCellOverlap, stationLocEntry=stationLocEntry, ethernet=ethernet, groupWprLogoImage=groupWprLogoImage, stationAssurEntry=stationAssurEntry, iapStatsTxPackets=iapStatsTxPackets, globalCountryCode=globalCountryCode, proxyFwdNetBoxBlueUrl=proxyFwdNetBoxBlueUrl, iapStatsTxRate48Errors=iapStatsTxRate48Errors, neighborArrayLocation=neighborArrayLocation, clusterArrayTable=clusterArrayTable, fpgaSWVersion=fpgaSWVersion, vlanTable=vlanTable, wdsStatsRxRate5Retries=wdsStatsRxRate5Retries, proxyMgmtSocksIpAddr=proxyMgmtSocksIpAddr, tunnelTable=tunnelTable, cdpInfoIPAddress=cdpInfoIPAddress, xs12Array=xs12Array, xr2430Array=xr2430Array, vlanName=vlanName, appListMemberGuid=appListMemberGuid, stationStatsRxRate1Retries=stationStatsRxRate1Retries, stationUnassociatedTimeRSSIa3=stationUnassociatedTimeRSSIa3, systemUptime=systemUptime, rogueDetectAPOrigTableTimeDiscovered=rogueDetectAPOrigTableTimeDiscovered, wdsStatsRxRate6Bytes=wdsStatsRxRate6Bytes, positionInfoY=positionInfoY, ethStatsTxFifoErrors=ethStatsTxFifoErrors, stationAssociationRSSIa2=stationAssociationRSSIa2, stationStatsTxRate11Bytes=stationStatsTxRate11Bytes, tunnelEnable=tunnelEnable, vlanStaAppCatStatsRxBytes=vlanStaAppCatStatsRxBytes, iapStatsRxRTS=iapStatsRxRTS, stationStatsRxRate9Packets=stationStatsRxRate9Packets, stationStatsRxRate6Packets=stationStatsRxRate6Packets, radiusUserPasswordForm=radiusUserPasswordForm, ledsEnable=ledsEnable, iapStatsTxRate6Retries=iapStatsTxRate6Retries, filterTimeOff=filterTimeOff, wdsHostLinkNumIAPs=wdsHostLinkNumIAPs, global11acMaxMCS3SS=global11acMaxMCS3SS, rogueDetectSSIDMatch=rogueDetectSSIDMatch, ethIPMask=ethIPMask, staAssuranceRetryRateTimestamp=staAssuranceRetryRateTimestamp, filterAppListRowStatus=filterAppListRowStatus, dateTimeDSTAdjust=dateTimeDSTAdjust, globalMulticastVlanForwardingTableReset=globalMulticastVlanForwardingTableReset, ssidWprHttpsPassthru=ssidWprHttpsPassthru, systemActivation=systemActivation, fastRoamingTargetIpAddress=fastRoamingTargetIpAddress, xr2425hArray=xr2425hArray, iapStatsRxRate9Bytes=iapStatsRxRate9Bytes, stationStatsRxRate2Packets=stationStatsRxRate2Packets, filterAppCategory=filterAppCategory, rogueDetectAPOrigTableSSID=rogueDetectAPOrigTableSSID, adminRadiusSecServerSecretEnc=adminRadiusSecServerSecretEnc, staAssurTime=staAssurTime, wdsStatsTxRate11Errors=wdsStatsTxRate11Errors, adminHistoryIPAddress=adminHistoryIPAddress, spanningTreeVlanNumber=spanningTreeVlanNumber, ssidWprAuthType=ssidWprAuthType)
mibBuilder.exportSymbols("XIRRUS-MIB", roamAssistDevices=roamAssistDevices, syslogStationFormat=syslogStationFormat, envCtrlTempOver=envCtrlTempOver, stationAssuranceAuthFailures=stationAssuranceAuthFailures, syslogTerServerPort=syslogTerServerPort, wds=wds, global11aIAPMaxStations=global11aIAPMaxStations, radiusSecServerIPAddress=radiusSecServerIPAddress, ethStatsIndex=ethStatsIndex, syslogTimestamp=syslogTimestamp, dhcpRenewFailure=dhcpRenewFailure, spectrumAnalysisSignalToNoiseRatio=spectrumAnalysisSignalToNoiseRatio, stationAssocRSSIa3=stationAssocRSSIa3, wdsStatsRxRate5Errors=wdsStatsRxRate5Errors, envCtrlCoolOn=envCtrlCoolOn, iapBeaconProbeFailurePhyReset=iapBeaconProbeFailurePhyReset, ssidBroadcast=ssidBroadcast, stationAssociationRSSIabg1=stationAssociationRSSIabg1, wdsClientLinkSSID=wdsClientLinkSSID, ssidWprHttpsEnable=ssidWprHttpsEnable, stationAssociationSSID=stationAssociationSSID, snmpAgentReadWriteCommunity=snmpAgentReadWriteCommunity, systemCrashInfo=systemCrashInfo, filterAppCatDescription=filterAppCatDescription, globalIAPSta2Sta=globalIAPSta2Sta, wepKeyStringForm=wepKeyStringForm, iapStatsRxCRCErrors=iapStatsRxCRCErrors, wpaPSK=wpaPSK, iapStatsRxRate11Retries=iapStatsRxRate11Retries, globalMgmt=globalMgmt, filterSetQOS=filterSetQOS, stationAssocTime=stationAssocTime, stationStatsRxRate24Errors=stationStatsRxRate24Errors, stationStatsTxRate18Packets=stationStatsTxRate18Packets, ledsActivityTable=ledsActivityTable, iapChannelBond80Mhz=iapChannelBond80Mhz, wdsStatsTxRate54Retries=wdsStatsTxRate54Retries, lldp=lldp, componentSerial=componentSerial, xirrus=xirrus, staAssurAuthFailuresActive=staAssurAuthFailuresActive, positionInfoScope=positionInfoScope, stationAppStatsTable=stationAppStatsTable, ssidWpaAES=ssidWpaAES, stationAssociationDeviceClass=stationAssociationDeviceClass, stationUnassociatedTimeRSSIabg2=stationUnassociatedTimeRSSIabg2, wdsStatsRxRate9Retries=wdsStatsRxRate9Retries, stationAssocTimeRSSIa1=stationAssocTimeRSSIa1, wdsStatsTxRate1Errors=wdsStatsTxRate1Errors, xr4836Array=xr4836Array, stationAppCatStatsRxPackets=stationAppCatStatsRxPackets, iapStatsTxFragments=iapStatsTxFragments, envCtrlArrayOn=envCtrlArrayOn, radiusDASTimeWindow=radiusDASTimeWindow, stationUnassocEntry=stationUnassocEntry, componentDate=componentDate, stationUnassocManufacturer=stationUnassocManufacturer, filterListEnable=filterListEnable, ethDHCPBind=ethDHCPBind, staAssurRetryRateTimestamp=staAssurRetryRateTimestamp, realtimeMonitorErrorRate=realtimeMonitorErrorRate, vlanTunnelPort=vlanTunnelPort, rates11nTable=rates11nTable, stationUnassocTimeRSSIa12=stationUnassocTimeRSSIa12, interface=interface, stationAssocTimeRSSIa11=stationAssocTimeRSSIa11, vlanMgmtAppStatsEntry=vlanMgmtAppStatsEntry, realtimeMonitorBytes=realtimeMonitorBytes, radiusUserGroup=radiusUserGroup, xr530Array=xr530Array, iapNumStations=iapNumStations, vlanMgmt=vlanMgmt, wdsAllowStations=wdsAllowStations, wdsStatsTxRate18Errors=wdsStatsTxRate18Errors, iapStatsTxRTS=iapStatsTxRTS, spectrumAnalysisAverageRSSI=spectrumAnalysisAverageRSSI, iapStatsTxRate54Errors=iapStatsTxRate54Errors, proxyMgmtSubnet08=proxyMgmtSubnet08, radiusServerAD=radiusServerAD, staAssuranceRetryRate=staAssuranceRetryRate, stationUnassociatedRSSIa11=stationUnassociatedRSSIa11, stationAssociationTimeRSSIabg3=stationAssociationTimeRSSIabg3, filterMoveDown=filterMoveDown, spectrumAnalysisNoise=spectrumAnalysisNoise, stationAssocTimeRSSIa2=stationAssocTimeRSSIa2, wdsStatsTxRate11Packets=wdsStatsTxRate11Packets, wdsStatsRxRate11Errors=wdsStatsRxRate11Errors, stationStatsTxRate18Errors=stationStatsTxRate18Errors, wdsStatsTxPackets=wdsStatsTxPackets, iapStatsTxRate24Packets=iapStatsTxRate24Packets, rebootArray=rebootArray, wdsStatsTxRate18Bytes=wdsStatsTxRate18Bytes, xs3700_1GArray=xs3700_1GArray, iapStatsRxBeacons=iapStatsRxBeacons, stationUnassocTimeRSSIa5=stationUnassocTimeRSSIa5, iapTxPwr=iapTxPwr, radiusServerInternal=radiusServerInternal, vlanTunnelSecretForm=vlanTunnelSecretForm, stationStatsRxRate54Bytes=stationStatsRxRate54Bytes, appListMemberEntry=appListMemberEntry, xr620Array=xr620Array, ethStatsRxCompressed=ethStatsRxCompressed, ethStatsIfaceStatus=ethStatsIfaceStatus, iapStatsRxRate54Retries=iapStatsRxRate54Retries, dhcpPoolRangeStartIP=dhcpPoolRangeStartIP, ssidWpaUPSKCacheTimeout=ssidWpaUPSKCacheTimeout, iapStatsTxRate5Errors=iapStatsTxRate5Errors, ssidRowStatus=ssidRowStatus, proxyMgmtSubnet07=proxyMgmtSubnet07, ethDuplex=ethDuplex, idsDurationAttackPeriod=idsDurationAttackPeriod, systemHttpsCertificate=systemHttpsCertificate, mdmAirWatchApiURL=mdmAirWatchApiURL, ethName=ethName, wdsHostLinkIndex=wdsHostLinkIndex, ethStatsTimePeriod=ethStatsTimePeriod, xr1220Array=xr1220Array, oauthTokenClientId=oauthTokenClientId, ssidWpaEAP=ssidWpaEAP, global11aIAPCellSize=global11aIAPCellSize, wdsStatsRxRate6Errors=wdsStatsRxRate6Errors, global11bgIAPEnable=global11bgIAPEnable, ssidWprSharedSecretForm=ssidWprSharedSecretForm, aclEntry=aclEntry, iapEntry=iapEntry, groupTrafficLimitKbps=groupTrafficLimitKbps, iapSsidToBssidMappingSSID=iapSsidToBssidMappingSSID, stationStatsTxRetries=stationStatsTxRetries, xh2_240Array=xh2_240Array, wdsStatsTxRate11Retries=wdsStatsTxRate11Retries, globalExtractStaInfoTable=globalExtractStaInfoTable, iapSpatialStreams=iapSpatialStreams, wdsStatsTxRate2Bytes=wdsStatsTxRate2Bytes, syslogTimeFormat=syslogTimeFormat, stationAssociationTimeRSSIabg1=stationAssociationTimeRSSIabg1, ethStatsTxBytes=ethStatsTxBytes, ntpPrimaryAuthKeyEnc=ntpPrimaryAuthKeyEnc, radiusUserSSID=radiusUserSSID, iapStatsTxACKFailures=iapStatsTxACKFailures, iapStatsRxRate9Errors=iapStatsRxRate9Errors, syslogEmailLevel=syslogEmailLevel, xd1_120Array=xd1_120Array, snmpAgentV3AuthType=snmpAgentV3AuthType, xd4_130Array=xd4_130Array, rogueDetectAPOrigTableIPAddress=rogueDetectAPOrigTableIPAddress, iapStatsTxRate24Errors=iapStatsTxRate24Errors, wdsStatsTxRate6Retries=wdsStatsTxRate6Retries, dateTimeSet=dateTimeSet, mdm=mdm, licenseUpdate=licenseUpdate, wdsStatsTxRate9Bytes=wdsStatsTxRate9Bytes, globalIAPLongRetry=globalIAPLongRetry, cdpInfoTable=cdpInfoTable, cdp=cdp, xr1147Array=xr1147Array, xr1236Array=xr1236Array, stationAssocRSSIa1=stationAssocRSSIa1, xr2225hArray=xr2225hArray, iapSsidToBssidMappingTable=iapSsidToBssidMappingTable, systemTempEntry=systemTempEntry, stationAssuranceRSSI=stationAssuranceRSSI, xs4Array=xs4Array, ntpEnable=ntpEnable, xh2_120Array=xh2_120Array, globalIAPRxThreshold=globalIAPRxThreshold, filterSrcMacAddressMask=filterSrcMacAddressMask, ssidLimitsDaysOnTue=ssidLimitsDaysOnTue, xr6830Array=xr6830Array, ssidWprEntry=ssidWprEntry, proxyMgmtSubnet05=proxyMgmtSubnet05, wifiTagEkahauServer=wifiTagEkahauServer, fpgaBootVersion=fpgaBootVersion, ssidWpaTKIP=ssidWpaTKIP, stationUnassocRSSIa1=stationUnassocRSSIa1, dhcpPoolGateway=dhcpPoolGateway, appListMemberRowStatus=appListMemberRowStatus, cdpInfoCapabilities=cdpInfoCapabilities, iapType=iapType, stationStatsRxRate24Bytes=stationStatsRxRate24Bytes, rogueDetectAPOrigTableActive=rogueDetectAPOrigTableActive, stationUnassocTimeRSSIa11=stationUnassocTimeRSSIa11, stationUnassociatedTxRate=stationUnassociatedTxRate, xr2426hArray=xr2426hArray, xa1_130Array=xa1_130Array, rogueDetectAutoBlockWhitelistRowStatus=rogueDetectAutoBlockWhitelistRowStatus, idsDeauthAttackPeriod=idsDeauthAttackPeriod, ssidRoamingLayer=ssidRoamingLayer, ethSpeed=ethSpeed)
