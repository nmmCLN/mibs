#
# PySNMP MIB module CTRON-PRIORITY-EXTENSIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-PRIORITY-EXTENSIONS-MIB
# Produced by pysmi-1.1.8 at Mon Jan  9 10:29:47 2023
# On host fv-az244-152 platform Linux version 5.15.0-1024-azure by user runner
# Using Python version 3.10.9 (main, Dec  7 2022, 08:16:13) [GCC 11.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ctPriorityExt, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctPriorityExt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, TimeTicks, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, Unsigned32, IpAddress, MibIdentifier, iso, Counter64, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "IpAddress", "MibIdentifier", "iso", "Counter64", "Gauge32", "NotificationType")
TextualConvention, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress")
ctPriorityExtTxQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 1))
ctPriorityExtTXQueueTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 1, 1), )
if mibBuilder.loadTexts: ctPriorityExtTXQueueTable.setStatus('mandatory')
ctPriorityExtTXQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 1, 1, 1), ).setIndexNames((0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtSlotNum"), (0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtInterfaceNum"))
if mibBuilder.loadTexts: ctPriorityExtTXQueueEntry.setStatus('mandatory')
ctPriorityExtSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtSlotNum.setStatus('mandatory')
ctPriorityExtInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtInterfaceNum.setStatus('mandatory')
ctPriorityExtNumTXQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtNumTXQueues.setStatus('mandatory')
ctPriorityExtMACConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2))
ctPriorityExtMACStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtMACStatus.setStatus('mandatory')
ctPriorityExtNumMACEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtNumMACEntries.setStatus('mandatory')
ctPriorityExtMaxNumMACEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtMaxNumMACEntries.setStatus('mandatory')
ctPriorityExtMaxNumPktTypesPerMACEntry = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtMaxNumPktTypesPerMACEntry.setStatus('mandatory')
ctPriorityExtMACTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5), )
if mibBuilder.loadTexts: ctPriorityExtMACTable.setStatus('mandatory')
ctPriorityExtMACEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5, 1), ).setIndexNames((0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtMACAddr"), (0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtAddrType"), (0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtMACPktType"), (0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtMACVlanId"))
if mibBuilder.loadTexts: ctPriorityExtMACEntry.setStatus('mandatory')
ctPriorityExtMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5, 1, 1), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtMACAddr.setStatus('mandatory')
ctPriorityExtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("destAddr", 1), ("srcAddr", 2), ("destOrSource", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtAddrType.setStatus('mandatory')
ctPriorityExtMACPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtMACPktType.setStatus('mandatory')
ctPriorityExtMACVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtMACVlanId.setStatus('mandatory')
ctPriorityExtMACPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100))).clone(namedValues=NamedValues(("priority0", 1), ("priority1", 2), ("priority2", 3), ("priority3", 4), ("priority4", 5), ("priority5", 6), ("priority6", 7), ("priority7", 8), ("delete", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtMACPriority.setStatus('mandatory')
ctPriorityExtPktTypeConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3))
ctPriorityExtPktTypeStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtPktTypeStatus.setStatus('mandatory')
ctPriorityExtNumPktTypeEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtNumPktTypeEntries.setStatus('mandatory')
ctPriorityExtMaxNumPktTypeEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtMaxNumPktTypeEntries.setStatus('mandatory')
ctPriorityExtPktTypeTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 4), )
if mibBuilder.loadTexts: ctPriorityExtPktTypeTable.setStatus('mandatory')
ctPriorityExtPktTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 4, 1), ).setIndexNames((0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtPktType"), (0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtPktTypeVlanId"))
if mibBuilder.loadTexts: ctPriorityExtPktTypeEntry.setStatus('mandatory')
ctPriorityExtPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtPktType.setStatus('mandatory')
ctPriorityExtPktTypeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtPktTypeVlanId.setStatus('mandatory')
ctPriorityExtPktTypePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100))).clone(namedValues=NamedValues(("priority0", 1), ("priority1", 2), ("priority2", 3), ("priority3", 4), ("priority4", 5), ("priority5", 6), ("priority6", 7), ("priority7", 8), ("delete", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtPktTypePriority.setStatus('mandatory')
ctPriorityExtPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4))
ctPriorityExtPortStatus = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtPortStatus.setStatus('mandatory')
ctPriorityExtPortTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 2), )
if mibBuilder.loadTexts: ctPriorityExtPortTable.setStatus('mandatory')
ctPriorityExtPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 2, 1), ).setIndexNames((0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtPortSlotNum"), (0, "CTRON-PRIORITY-EXTENSIONS-MIB", "ctPriorityExtPortInterfaceNum"))
if mibBuilder.loadTexts: ctPriorityExtPortEntry.setStatus('mandatory')
ctPriorityExtPortSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtPortSlotNum.setStatus('mandatory')
ctPriorityExtPortInterfaceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPriorityExtPortInterfaceNum.setStatus('mandatory')
ctPriorityExtPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("priority0", 1), ("priority1", 2), ("priority2", 3), ("priority3", 4), ("priority4", 5), ("priority5", 6), ("priority6", 7), ("priority7", 8))).clone('priority0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtPortPriority.setStatus('mandatory')
ctPriorityExtFwdInboundPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 14, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctPriorityExtFwdInboundPriority.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-PRIORITY-EXTENSIONS-MIB", ctPriorityExtNumMACEntries=ctPriorityExtNumMACEntries, ctPriorityExtPktTypeEntry=ctPriorityExtPktTypeEntry, ctPriorityExtPortConfig=ctPriorityExtPortConfig, ctPriorityExtInterfaceNum=ctPriorityExtInterfaceNum, ctPriorityExtPktTypePriority=ctPriorityExtPktTypePriority, ctPriorityExtPortSlotNum=ctPriorityExtPortSlotNum, ctPriorityExtPktTypeTable=ctPriorityExtPktTypeTable, ctPriorityExtMACTable=ctPriorityExtMACTable, ctPriorityExtPortPriority=ctPriorityExtPortPriority, ctPriorityExtTXQueueTable=ctPriorityExtTXQueueTable, ctPriorityExtNumPktTypeEntries=ctPriorityExtNumPktTypeEntries, ctPriorityExtTxQueue=ctPriorityExtTxQueue, ctPriorityExtSlotNum=ctPriorityExtSlotNum, ctPriorityExtMACStatus=ctPriorityExtMACStatus, ctPriorityExtAddrType=ctPriorityExtAddrType, ctPriorityExtMaxNumMACEntries=ctPriorityExtMaxNumMACEntries, ctPriorityExtPktTypeVlanId=ctPriorityExtPktTypeVlanId, ctPriorityExtPortStatus=ctPriorityExtPortStatus, ctPriorityExtMACConfig=ctPriorityExtMACConfig, ctPriorityExtMACEntry=ctPriorityExtMACEntry, ctPriorityExtFwdInboundPriority=ctPriorityExtFwdInboundPriority, ctPriorityExtMACPriority=ctPriorityExtMACPriority, ctPriorityExtMACVlanId=ctPriorityExtMACVlanId, ctPriorityExtPortEntry=ctPriorityExtPortEntry, ctPriorityExtTXQueueEntry=ctPriorityExtTXQueueEntry, ctPriorityExtPktType=ctPriorityExtPktType, ctPriorityExtPktTypeStatus=ctPriorityExtPktTypeStatus, ctPriorityExtMaxNumPktTypeEntries=ctPriorityExtMaxNumPktTypeEntries, ctPriorityExtMaxNumPktTypesPerMACEntry=ctPriorityExtMaxNumPktTypesPerMACEntry, ctPriorityExtMACAddr=ctPriorityExtMACAddr, ctPriorityExtNumTXQueues=ctPriorityExtNumTXQueues, ctPriorityExtPortInterfaceNum=ctPriorityExtPortInterfaceNum, ctPriorityExtPktTypeConfig=ctPriorityExtPktTypeConfig, ctPriorityExtPortTable=ctPriorityExtPortTable, ctPriorityExtMACPktType=ctPriorityExtMACPktType)
