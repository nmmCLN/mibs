#
# PySNMP MIB module CTRON-WAN-IMUX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-WAN-IMUX-MIB
# Produced by pysmi-1.1.8 at Tue Sep 12 12:53:43 2023
# On host fv-az575-466 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ctWanServices, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctWanServices")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, Unsigned32, Bits, TimeTicks, Counter64, ModuleIdentity, IpAddress, Counter32, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "Unsigned32", "Bits", "TimeTicks", "Counter64", "ModuleIdentity", "IpAddress", "Counter32", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ctWanMux = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1))
ctWANMuxGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 1))
ctWANMuxMaxNumGroups = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWANMuxMaxNumGroups.setStatus('mandatory')
ctWanMuxAdmin = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMuxAdmin.setStatus('mandatory')
ctWanMuxGroupTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2), )
if mibBuilder.loadTexts: ctWanMuxGroupTable.setStatus('mandatory')
ctWanMuxGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2, 1), ).setIndexNames((0, "CTRON-WAN-IMUX-MIB", "ctWanMuxGroupId"))
if mibBuilder.loadTexts: ctWanMuxGroupEntry.setStatus('mandatory')
ctWanMuxGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxGroupId.setStatus('mandatory')
ctWanMuxGroupAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMuxGroupAdmin.setStatus('mandatory')
ctWanMuxGroupNumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxGroupNumChannels.setStatus('mandatory')
ctWanMuxGroupAddChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMuxGroupAddChannel.setStatus('mandatory')
ctWanMuxGroupDelChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMuxGroupDelChannel.setStatus('mandatory')
ctWanMuxChannelTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3), )
if mibBuilder.loadTexts: ctWanMuxChannelTable.setStatus('mandatory')
ctWanMuxChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1), ).setIndexNames((0, "CTRON-WAN-IMUX-MIB", "ctWanMuxChannelGroupId"), (0, "CTRON-WAN-IMUX-MIB", "ctWanMuxChannelId"))
if mibBuilder.loadTexts: ctWanMuxChannelEntry.setStatus('mandatory')
ctWanMuxChannelGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelGroupId.setStatus('mandatory')
ctWanMuxChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelId.setStatus('mandatory')
ctWanMuxChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelIfIndex.setStatus('mandatory')
ctWanMuxChannelPhysNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelPhysNum.setStatus('mandatory')
ctWanMuxChannelBwAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelBwAvail.setStatus('mandatory')
ctWanMuxChannelByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelByteCount.setStatus('mandatory')
ctWanMuxChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMuxChannelStatus.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-WAN-IMUX-MIB", ctWanMuxChannelIfIndex=ctWanMuxChannelIfIndex, ctWanMuxChannelByteCount=ctWanMuxChannelByteCount, ctWanMuxGroupEntry=ctWanMuxGroupEntry, ctWanMuxChannelStatus=ctWanMuxChannelStatus, ctWANMuxGeneralGroup=ctWANMuxGeneralGroup, ctWANMuxMaxNumGroups=ctWANMuxMaxNumGroups, ctWanMuxAdmin=ctWanMuxAdmin, ctWanMuxChannelTable=ctWanMuxChannelTable, ctWanMuxGroupTable=ctWanMuxGroupTable, ctWanMuxChannelEntry=ctWanMuxChannelEntry, ctWanMuxChannelId=ctWanMuxChannelId, ctWanMuxChannelPhysNum=ctWanMuxChannelPhysNum, ctWanMuxGroupId=ctWanMuxGroupId, ctWanMuxGroupAdmin=ctWanMuxGroupAdmin, ctWanMuxGroupAddChannel=ctWanMuxGroupAddChannel, ctWanMuxGroupDelChannel=ctWanMuxGroupDelChannel, ctWanMux=ctWanMux, ctWanMuxChannelGroupId=ctWanMuxChannelGroupId, ctWanMuxChannelBwAvail=ctWanMuxChannelBwAvail, ctWanMuxGroupNumChannels=ctWanMuxGroupNumChannels)
