#
# PySNMP MIB module CTRON-PPC-BAD-PACKETS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-PPC-BAD-PACKETS-MIB
# Produced by pysmi-1.1.8 at Mon Sep 19 07:27:05 2022
# On host fv-az215-626 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ctFWDebug, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctFWDebug")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Gauge32, Integer32, Unsigned32, iso, Bits, IpAddress, ModuleIdentity, ObjectIdentity, MibIdentifier, NotificationType, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "Integer32", "Unsigned32", "iso", "Bits", "IpAddress", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "NotificationType", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ctPPCBadPkts = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1))
ctPPCBadPktsTotalTx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTotalTx.setStatus('mandatory')
ctPPCBadPktsTotalRx = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTotalRx.setStatus('mandatory')
ctPPCBadPktsTxTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 3), )
if mibBuilder.loadTexts: ctPPCBadPktsTxTable.setStatus('mandatory')
ctPPCBadPktsTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 3, 1), ).setIndexNames((0, "CTRON-PPC-BAD-PACKETS-MIB", "ctPPCBadPktsTxIndex"))
if mibBuilder.loadTexts: ctPPCBadPktsTxEntry.setStatus('mandatory')
ctPPCBadPktsTxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTxIndex.setStatus('mandatory')
ctPPCBadPktsTxQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTxQueues.setStatus('mandatory')
ctPPCBadPktsTxFulls = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTxFulls.setStatus('mandatory')
ctPPCBadPktsTxQDepthTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 4), )
if mibBuilder.loadTexts: ctPPCBadPktsTxQDepthTable.setStatus('mandatory')
ctPPCBadPktsTxQDepthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 4, 1), ).setIndexNames((0, "CTRON-PPC-BAD-PACKETS-MIB", "ctPPCBadPktsTxQIndex"), (0, "CTRON-PPC-BAD-PACKETS-MIB", "ctPPCBadPktsQ"))
if mibBuilder.loadTexts: ctPPCBadPktsTxQDepthEntry.setStatus('mandatory')
ctPPCBadPktsTxQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTxQIndex.setStatus('mandatory')
ctPPCBadPktsQ = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsQ.setStatus('mandatory')
ctPPCBadPktsTxQDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsTxQDepth.setStatus('mandatory')
ctPPCBadPktsRxTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5), )
if mibBuilder.loadTexts: ctPPCBadPktsRxTable.setStatus('mandatory')
ctPPCBadPktsRxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1), ).setIndexNames((0, "CTRON-PPC-BAD-PACKETS-MIB", "ctPPCBadPktsRxIndex"))
if mibBuilder.loadTexts: ctPPCBadPktsRxEntry.setStatus('mandatory')
ctPPCBadPktsRxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxIndex.setStatus('mandatory')
ctPPCBadPktsRxTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxTotalErrors.setStatus('mandatory')
ctPPCBadPktsRxDescHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxDescHigh.setStatus('mandatory')
ctPPCBadPktsRxDescLow = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxDescLow.setStatus('mandatory')
ctPPCBadPktsRxDaSa0 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxDaSa0.setStatus('mandatory')
ctPPCBadPktsRxDaSa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxDaSa1.setStatus('mandatory')
ctPPCBadPktsRxDaSa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxDaSa2.setStatus('mandatory')
ctPPCBadPktsRxData = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 29, 1, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctPPCBadPktsRxData.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-PPC-BAD-PACKETS-MIB", ctPPCBadPkts=ctPPCBadPkts, ctPPCBadPktsRxTable=ctPPCBadPktsRxTable, ctPPCBadPktsTxQDepth=ctPPCBadPktsTxQDepth, ctPPCBadPktsTxQDepthTable=ctPPCBadPktsTxQDepthTable, ctPPCBadPktsRxData=ctPPCBadPktsRxData, ctPPCBadPktsRxDescHigh=ctPPCBadPktsRxDescHigh, ctPPCBadPktsRxDaSa0=ctPPCBadPktsRxDaSa0, ctPPCBadPktsTxQIndex=ctPPCBadPktsTxQIndex, ctPPCBadPktsTxQDepthEntry=ctPPCBadPktsTxQDepthEntry, ctPPCBadPktsRxIndex=ctPPCBadPktsRxIndex, ctPPCBadPktsTxEntry=ctPPCBadPktsTxEntry, ctPPCBadPktsTxTable=ctPPCBadPktsTxTable, ctPPCBadPktsTxFulls=ctPPCBadPktsTxFulls, ctPPCBadPktsTotalTx=ctPPCBadPktsTotalTx, ctPPCBadPktsRxDaSa2=ctPPCBadPktsRxDaSa2, ctPPCBadPktsQ=ctPPCBadPktsQ, ctPPCBadPktsTxQueues=ctPPCBadPktsTxQueues, ctPPCBadPktsRxDaSa1=ctPPCBadPktsRxDaSa1, ctPPCBadPktsRxEntry=ctPPCBadPktsRxEntry, ctPPCBadPktsRxDescLow=ctPPCBadPktsRxDescLow, ctPPCBadPktsTxIndex=ctPPCBadPktsTxIndex, ctPPCBadPktsRxTotalErrors=ctPPCBadPktsRxTotalErrors, ctPPCBadPktsTotalRx=ctPPCBadPktsTotalRx)
