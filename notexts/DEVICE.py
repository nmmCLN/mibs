#
# PySNMP MIB module DEVICE (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/peplink/DEVICE
# Produced by pysmi-1.1.8 at Thu Sep  8 10:23:41 2022
# On host fv-az205-597 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, MibIdentifier, iso, ModuleIdentity, Bits, Counter32, enterprises, IpAddress, TimeTicks, NotificationType, Gauge32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "iso", "ModuleIdentity", "Bits", "Counter32", "enterprises", "IpAddress", "TimeTicks", "NotificationType", "Gauge32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity")
TruthValue, TextualConvention, RowStatus, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "MacAddress", "DisplayString")
peplink = MibIdentifier((1, 3, 6, 1, 4, 1, 23695))
productMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200))
generalMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1))
deviceMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1))
deviceInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1))
if mibBuilder.loadTexts: deviceInfo.setLastUpdated('201711150000Z')
if mibBuilder.loadTexts: deviceInfo.setOrganization('PEPLINK')
deviceInfoSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 1))
deviceModel = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceModel.setStatus('current')
deviceSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSerialNumber.setStatus('current')
deviceFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceFirmwareVersion.setStatus('current')
deviceInfoTime = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 2))
deviceSystemTime = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 2, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSystemTime.setStatus('current')
deviceSystemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 2, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceSystemUpTime.setStatus('current')
deviceInfoUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 3))
deviceCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceCpuLoad.setStatus('current')
deviceTotalMemory = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceTotalMemory.setStatus('current')
deviceMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceMemoryUsage.setStatus('current')
deviceInfoHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4))
devicePSUTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1), )
if mibBuilder.loadTexts: devicePSUTable.setStatus('current')
devicePSUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1, 1), ).setIndexNames((0, "DEVICE", "devicePSUId"))
if mibBuilder.loadTexts: devicePSUEntry.setStatus('current')
devicePSUId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePSUId.setStatus('current')
devicePSUStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("error", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePSUStatus.setStatus('current')
deviceCurrentPower = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceCurrentPower.setStatus('current')
deviceMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceMaxPower.setStatus('current')
devicePSUPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePSUPercentage.setStatus('current')
deviceFanTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 2), )
if mibBuilder.loadTexts: deviceFanTable.setStatus('current')
deviceFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 2, 1), ).setIndexNames((0, "DEVICE", "deviceFanId"))
if mibBuilder.loadTexts: deviceFanEntry.setStatus('current')
deviceFanId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceFanId.setStatus('current')
deviceFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("error", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceFanStatus.setStatus('current')
deviceFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceFanSpeed.setStatus('current')
devicePowerSourceTable = MibTable((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 3), )
if mibBuilder.loadTexts: devicePowerSourceTable.setStatus('current')
devicePowerSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 3, 1), ).setIndexNames((0, "DEVICE", "devicePowerSourceId"))
if mibBuilder.loadTexts: devicePowerSourceEntry.setStatus('current')
devicePowerSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePowerSourceId.setStatus('current')
devicePowerSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePowerSourceName.setStatus('current')
devicePowerSourceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noCableDetected", 0), ("connected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: devicePowerSourceStatus.setStatus('current')
deviceInfoTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 4))
deviceTemperatureCelsius = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 4, 1), Gauge32()).setUnits('mC').setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceTemperatureCelsius.setStatus('current')
deviceTemperatureFahrenheit = MibScalar((1, 3, 6, 1, 4, 1, 23695, 200, 1, 1, 1, 4, 4, 2), Gauge32()).setUnits('mF').setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceTemperatureFahrenheit.setStatus('current')
mibBuilder.exportSymbols("DEVICE", PYSNMP_MODULE_ID=deviceInfo, deviceCurrentPower=deviceCurrentPower, peplink=peplink, deviceFanTable=deviceFanTable, deviceCpuLoad=deviceCpuLoad, deviceInfo=deviceInfo, deviceMaxPower=deviceMaxPower, deviceInfoTemperature=deviceInfoTemperature, deviceMemoryUsage=deviceMemoryUsage, devicePowerSourceStatus=devicePowerSourceStatus, deviceSystemTime=deviceSystemTime, deviceMib=deviceMib, devicePowerSourceName=devicePowerSourceName, devicePowerSourceId=devicePowerSourceId, devicePSUStatus=devicePSUStatus, deviceFirmwareVersion=deviceFirmwareVersion, deviceSerialNumber=deviceSerialNumber, deviceFanSpeed=deviceFanSpeed, devicePSUPercentage=devicePSUPercentage, devicePowerSourceEntry=devicePowerSourceEntry, deviceTemperatureFahrenheit=deviceTemperatureFahrenheit, deviceFanId=deviceFanId, devicePowerSourceTable=devicePowerSourceTable, generalMib=generalMib, devicePSUId=devicePSUId, deviceTemperatureCelsius=deviceTemperatureCelsius, deviceFanStatus=deviceFanStatus, deviceSystemUpTime=deviceSystemUpTime, devicePSUTable=devicePSUTable, deviceInfoSystem=deviceInfoSystem, productMib=productMib, devicePSUEntry=devicePSUEntry, deviceInfoHardware=deviceInfoHardware, deviceTotalMemory=deviceTotalMemory, deviceInfoUsage=deviceInfoUsage, deviceInfoTime=deviceInfoTime, deviceFanEntry=deviceFanEntry, deviceModel=deviceModel)
