#
# PySNMP MIB module COLUBRIS-USAGE-INFORMATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/hpmsm/COLUBRIS-USAGE-INFORMATION-MIB.my
# Produced by pysmi-1.1.8 at Thu Apr 27 10:03:42 2023
# On host fv-az338-106 platform Linux version 5.15.0-1036-azure by user runner
# Using Python version 3.10.11 (main, Apr  6 2023, 07:59:08) [GCC 11.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
colubrisMgmtV2, = mibBuilder.importSymbols("COLUBRIS-SMI", "colubrisMgmtV2")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Integer32, Bits, Counter32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter64, Gauge32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Integer32", "Bits", "Counter32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter64", "Gauge32", "IpAddress", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
colubrisUsageInformationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 8744, 5, 21))
if mibBuilder.loadTexts: colubrisUsageInformationMIB.setLastUpdated('200605230000Z')
if mibBuilder.loadTexts: colubrisUsageInformationMIB.setOrganization('Colubris Networks, Inc.')
colubrisUsageInformationMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1))
coUsageInformationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1))
coUsInfoUpTime = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoUpTime.setStatus('current')
coUsInfoLoadAverage1Min = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoLoadAverage1Min.setStatus('current')
coUsInfoLoadAverage5Min = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoLoadAverage5Min.setStatus('current')
coUsInfoLoadAverage15Min = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoLoadAverage15Min.setStatus('current')
coUsInfoCpuUseNow = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 5), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoCpuUseNow.setStatus('current')
coUsInfoCpuUse5Sec = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 6), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoCpuUse5Sec.setStatus('current')
coUsInfoCpuUse10Sec = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 7), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoCpuUse10Sec.setStatus('current')
coUsInfoCpuUse20Sec = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 8), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoCpuUse20Sec.setStatus('current')
coUsInfoRamTotal = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 9), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoRamTotal.setStatus('current')
coUsInfoRamFree = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 10), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoRamFree.setStatus('current')
coUsInfoRamBuffer = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 11), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoRamBuffer.setStatus('current')
coUsInfoRamCached = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 12), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoRamCached.setStatus('current')
coUsInfoStorageUsePermanent = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 13), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoStorageUsePermanent.setStatus('current')
coUsInfoStorageUseTemporary = MibScalar((1, 3, 6, 1, 4, 1, 8744, 5, 21, 1, 1, 14), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coUsInfoStorageUseTemporary.setStatus('current')
colubrisUsageInformationMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 2))
colubrisUsageInformationMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 2, 0))
colubrisUsageInformationMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 3))
colubrisUsageInformationMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 3, 1))
colubrisUsageInformationMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 8744, 5, 21, 3, 2))
colubrisUsageInformationMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 8744, 5, 21, 3, 1, 1)).setObjects(("COLUBRIS-USAGE-INFORMATION-MIB", "colubrisUsageInformationMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisUsageInformationMIBCompliance = colubrisUsageInformationMIBCompliance.setStatus('current')
colubrisUsageInformationMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 8744, 5, 21, 3, 2, 1)).setObjects(("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoUpTime"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoLoadAverage1Min"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoLoadAverage5Min"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoLoadAverage15Min"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoCpuUseNow"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoCpuUse5Sec"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoCpuUse10Sec"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoCpuUse20Sec"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoRamTotal"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoRamFree"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoRamBuffer"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoRamCached"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoStorageUsePermanent"), ("COLUBRIS-USAGE-INFORMATION-MIB", "coUsInfoStorageUseTemporary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    colubrisUsageInformationMIBGroup = colubrisUsageInformationMIBGroup.setStatus('current')
mibBuilder.exportSymbols("COLUBRIS-USAGE-INFORMATION-MIB", coUsageInformationGroup=coUsageInformationGroup, colubrisUsageInformationMIBObjects=colubrisUsageInformationMIBObjects, colubrisUsageInformationMIBCompliances=colubrisUsageInformationMIBCompliances, colubrisUsageInformationMIBNotifications=colubrisUsageInformationMIBNotifications, coUsInfoRamBuffer=coUsInfoRamBuffer, coUsInfoCpuUseNow=coUsInfoCpuUseNow, colubrisUsageInformationMIBGroup=colubrisUsageInformationMIBGroup, coUsInfoCpuUse10Sec=coUsInfoCpuUse10Sec, coUsInfoRamTotal=coUsInfoRamTotal, colubrisUsageInformationMIB=colubrisUsageInformationMIB, coUsInfoLoadAverage1Min=coUsInfoLoadAverage1Min, coUsInfoLoadAverage5Min=coUsInfoLoadAverage5Min, coUsInfoRamCached=coUsInfoRamCached, colubrisUsageInformationMIBConformance=colubrisUsageInformationMIBConformance, colubrisUsageInformationMIBGroups=colubrisUsageInformationMIBGroups, coUsInfoStorageUsePermanent=coUsInfoStorageUsePermanent, colubrisUsageInformationMIBNotificationPrefix=colubrisUsageInformationMIBNotificationPrefix, coUsInfoLoadAverage15Min=coUsInfoLoadAverage15Min, coUsInfoCpuUse20Sec=coUsInfoCpuUse20Sec, PYSNMP_MODULE_ID=colubrisUsageInformationMIB, coUsInfoStorageUseTemporary=coUsInfoStorageUseTemporary, coUsInfoRamFree=coUsInfoRamFree, colubrisUsageInformationMIBCompliance=colubrisUsageInformationMIBCompliance, coUsInfoUpTime=coUsInfoUpTime, coUsInfoCpuUse5Sec=coUsInfoCpuUse5Sec)
