#
# PySNMP MIB module SL-SNTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/packetlight/SL-SNTP-MIB
# Produced by pysmi-1.1.8 at Wed Jun 29 13:40:01 2022
# On host fv-az128-12 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
slMain, = mibBuilder.importSymbols("SL-MAIN-MIB", "slMain")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, TimeTicks, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, Gauge32, Integer32, ModuleIdentity, Counter32, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "Gauge32", "Integer32", "ModuleIdentity", "Counter32", "Bits", "Unsigned32", "MibIdentifier")
TextualConvention, DisplayString, TimeStamp, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp", "RowStatus", "TruthValue")
slSntp = ModuleIdentity((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21))
if mibBuilder.loadTexts: slSntp.setLastUpdated('200007240000Z')
if mibBuilder.loadTexts: slSntp.setOrganization('PacketLight Networks Ltd.')
slSntpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1))
slSntpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 2))
slSntpConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("unicast", 2), ("broadcast", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigMode.setStatus('current')
slSntpConfigPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigPollInterval.setStatus('current')
slSntpConfigRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 3), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigRetryCount.setStatus('current')
slSntpConfigTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigTimeZone.setStatus('current')
slSntpConfigDayLightSaving = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigDayLightSaving.setStatus('current')
slSntpConfigFractTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigFractTimeZone.setStatus('current')
slSntpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10), )
if mibBuilder.loadTexts: slSntpConfigTable.setStatus('current')
slSntpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1), ).setIndexNames((0, "SL-SNTP-MIB", "slSntpConfigAddress"))
if mibBuilder.loadTexts: slSntpConfigEntry.setStatus('current')
slSntpConfigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slSntpConfigAddress.setStatus('current')
slSntpConfigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slSntpConfigVersion.setStatus('current')
slSntpConfigPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slSntpConfigPriority.setStatus('current')
slSntpConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: slSntpConfigRowStatus.setStatus('current')
slSntpConfigMaxVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigMaxVariance.setStatus('current')
slSntpConfigVariance = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slSntpConfigVariance.setStatus('current')
slSntpConfigVarianceDetectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slSntpConfigVarianceDetectEnable.setStatus('current')
slSntpConfigServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("disconnected", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slSntpConfigServerStatus.setStatus('current')
slSntpPeerFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 2, 1)).setObjects(("SL-SNTP-MIB", "slSntpConfigAddress"))
if mibBuilder.loadTexts: slSntpPeerFailureTrap.setStatus('current')
slSntpConfigVarianceTrap = NotificationType((1, 3, 6, 1, 4, 1, 4515, 1, 3, 21, 2, 2)).setObjects(("SL-SNTP-MIB", "slSntpConfigAddress"), ("SL-SNTP-MIB", "slSntpConfigMaxVariance"), ("SL-SNTP-MIB", "slSntpConfigVariance"))
if mibBuilder.loadTexts: slSntpConfigVarianceTrap.setStatus('current')
mibBuilder.exportSymbols("SL-SNTP-MIB", slSntpConfigRowStatus=slSntpConfigRowStatus, slSntpConfigPriority=slSntpConfigPriority, slSntpConfigTable=slSntpConfigTable, slSntpConfigMode=slSntpConfigMode, slSntpTraps=slSntpTraps, slSntpConfigDayLightSaving=slSntpConfigDayLightSaving, slSntpConfigVarianceTrap=slSntpConfigVarianceTrap, slSntpConfigVariance=slSntpConfigVariance, slSntpConfigTimeZone=slSntpConfigTimeZone, slSntpConfigMaxVariance=slSntpConfigMaxVariance, slSntpConfigVarianceDetectEnable=slSntpConfigVarianceDetectEnable, slSntpConfigFractTimeZone=slSntpConfigFractTimeZone, slSntp=slSntp, slSntpConfigEntry=slSntpConfigEntry, slSntpConfigVersion=slSntpConfigVersion, slSntpPeerFailureTrap=slSntpPeerFailureTrap, slSntpConfigAddress=slSntpConfigAddress, PYSNMP_MODULE_ID=slSntp, slSntpConfigServerStatus=slSntpConfigServerStatus, slSntpConfigRetryCount=slSntpConfigRetryCount, slSntpConfig=slSntpConfig, slSntpConfigPollInterval=slSntpConfigPollInterval)
