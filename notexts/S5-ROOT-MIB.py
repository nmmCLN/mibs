#
# PySNMP MIB module S5-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nortel/S5-ROOT-MIB
# Produced by pysmi-1.1.8 at Thu Sep 15 10:07:35 2022
# On host fv-az196-500 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, IpAddress, NotificationType, Unsigned32, iso, Integer32, MibIdentifier, ModuleIdentity, Bits, ObjectIdentity, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "IpAddress", "NotificationType", "Unsigned32", "iso", "Integer32", "MibIdentifier", "ModuleIdentity", "Bits", "ObjectIdentity", "Gauge32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
series5000, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "series5000")
s5RootMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 1, 6, 0))
s5RootMib.setRevisions(('2004-07-20 00:00',))
if mibBuilder.loadTexts: s5RootMib.setLastUpdated('200407200000Z')
if mibBuilder.loadTexts: s5RootMib.setOrganization('Nortel Networks')
s5reg = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 1))
s5Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2))
s5EthTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 1))
s5TokTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 2))
s5FddTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 3))
s5ChaTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 4))
s5ComTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 5))
s5EcellTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 6))
atmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 7))
remoteLoginTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 8))
stpChangeTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 2, 9))
s5Chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 3))
s5Agent = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4))
s5Com = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 5))
s5Eth = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 6))
s5Tok = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 7))
s5Fddi = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 8))
s5EnTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 9))
s5TrTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 10))
s5FdTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 11))
s5EnMsTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 13))
s5AtmTop = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 14))
s5IfExt = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 15))
bnLogMsg = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 16))
s5Tcs = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 17))
mibBuilder.exportSymbols("S5-ROOT-MIB", s5Tcs=s5Tcs, s5Chassis=s5Chassis, s5Tok=s5Tok, s5Fddi=s5Fddi, s5EnMsTop=s5EnMsTop, s5Eth=s5Eth, PYSNMP_MODULE_ID=s5RootMib, atmTraps=atmTraps, s5FdTop=s5FdTop, s5ComTrap=s5ComTrap, s5EnTop=s5EnTop, s5Agent=s5Agent, s5Traps=s5Traps, s5EcellTrap=s5EcellTrap, remoteLoginTrap=remoteLoginTrap, s5TrTop=s5TrTop, s5reg=s5reg, s5TokTrap=s5TokTrap, stpChangeTrap=stpChangeTrap, s5Com=s5Com, s5IfExt=s5IfExt, s5FddTrap=s5FddTrap, s5ChaTrap=s5ChaTrap, s5EthTrap=s5EthTrap, s5RootMib=s5RootMib, bnLogMsg=bnLogMsg, s5AtmTop=s5AtmTop)
