#
# PySNMP MIB module BARCO-CLICKSHARE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/barco/BARCO-CLICKSHARE-MIB
# Produced by pysmi-1.1.8 at Mon Jan  9 10:25:35 2023
# On host fv-az244-152 platform Linux version 5.15.0-1024-azure by user runner
# Using Python version 3.10.9 (main, Dec  7 2022, 08:16:13) [GCC 11.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, Unsigned32, NotificationType, ObjectIdentity, ModuleIdentity, Bits, enterprises, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, Counter32, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Bits", "enterprises", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "Counter32", "IpAddress", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
clickShare = ModuleIdentity((1, 3, 6, 1, 4, 1, 7312, 2468))
clickShare.setRevisions(('2018-12-04 09:00',))
if mibBuilder.loadTexts: clickShare.setLastUpdated('201812040900Z')
if mibBuilder.loadTexts: clickShare.setOrganization('Barco ClickShare')
barco = MibIdentifier((1, 3, 6, 1, 4, 1, 7312))
events = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 0))
baseUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 1))
deviceInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1))
sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2))
alarmCpuTemperature = NotificationType((1, 3, 6, 1, 4, 1, 7312, 2468, 0, 1))
if mibBuilder.loadTexts: alarmCpuTemperature.setStatus('current')
alarmCaseFanSpeed = NotificationType((1, 3, 6, 1, 4, 1, 7312, 2468, 0, 2))
if mibBuilder.loadTexts: alarmCaseFanSpeed.setStatus('current')
alarmProcessNotRunning = NotificationType((1, 3, 6, 1, 4, 1, 7312, 2468, 0, 3))
if mibBuilder.loadTexts: alarmProcessNotRunning.setStatus('current')
diRoomName = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diRoomName.setStatus('current')
diWelcomeMessage = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diWelcomeMessage.setStatus('current')
diLocation = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diLocation.setStatus('current')
diArticleCode = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diArticleCode.setStatus('current')
diSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diSerialNumber.setStatus('current')
diUptime = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diUptime.setStatus('current')
diTotalUptime = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diTotalUptime.setStatus('current')
sensorCaseFanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCaseFanSpeed.setStatus('current')
sensorCpuFanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCpuFanSpeed.setStatus('current')
sensorCpuTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCpuTemperature.setStatus('current')
sensorCpuTemperatureThreshold = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCpuTemperatureThreshold.setStatus('current')
clickShareMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2469))
clickShareMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2469, 1))
clickShareMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2469, 2))
clickShareMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 7312, 2469, 1, 1)).setObjects(("BARCO-CLICKSHARE-MIB", "deviceInfoGroup"), ("BARCO-CLICKSHARE-MIB", "sensorsGroup"), ("BARCO-CLICKSHARE-MIB", "eventsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clickShareMIBCompliance = clickShareMIBCompliance.setStatus('current')
deviceInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7312, 2469, 2, 1)).setObjects(("BARCO-CLICKSHARE-MIB", "diRoomName"), ("BARCO-CLICKSHARE-MIB", "diWelcomeMessage"), ("BARCO-CLICKSHARE-MIB", "diLocation"), ("BARCO-CLICKSHARE-MIB", "diArticleCode"), ("BARCO-CLICKSHARE-MIB", "diSerialNumber"), ("BARCO-CLICKSHARE-MIB", "diUptime"), ("BARCO-CLICKSHARE-MIB", "diTotalUptime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    deviceInfoGroup = deviceInfoGroup.setStatus('current')
sensorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7312, 2469, 2, 2)).setObjects(("BARCO-CLICKSHARE-MIB", "sensorCaseFanSpeed"), ("BARCO-CLICKSHARE-MIB", "sensorCpuFanSpeed"), ("BARCO-CLICKSHARE-MIB", "sensorCpuTemperature"), ("BARCO-CLICKSHARE-MIB", "sensorCpuTemperatureThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sensorsGroup = sensorsGroup.setStatus('current')
eventsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 7312, 2469, 2, 99)).setObjects(("BARCO-CLICKSHARE-MIB", "alarmCpuTemperature"), ("BARCO-CLICKSHARE-MIB", "alarmCaseFanSpeed"), ("BARCO-CLICKSHARE-MIB", "alarmProcessNotRunning"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventsGroup = eventsGroup.setStatus('current')
mibBuilder.exportSymbols("BARCO-CLICKSHARE-MIB", PYSNMP_MODULE_ID=clickShare, sensorCpuTemperature=sensorCpuTemperature, alarmCaseFanSpeed=alarmCaseFanSpeed, diSerialNumber=diSerialNumber, deviceInfoGroup=deviceInfoGroup, diRoomName=diRoomName, eventsGroup=eventsGroup, clickShare=clickShare, diUptime=diUptime, clickShareMIBCompliance=clickShareMIBCompliance, sensorCaseFanSpeed=sensorCaseFanSpeed, diTotalUptime=diTotalUptime, clickShareMIB=clickShareMIB, events=events, barco=barco, clickShareMIBGroups=clickShareMIBGroups, deviceInfo=deviceInfo, baseUnit=baseUnit, diLocation=diLocation, sensorCpuFanSpeed=sensorCpuFanSpeed, sensorCpuTemperatureThreshold=sensorCpuTemperatureThreshold, alarmProcessNotRunning=alarmProcessNotRunning, diWelcomeMessage=diWelcomeMessage, clickShareMIBCompliances=clickShareMIBCompliances, alarmCpuTemperature=alarmCpuTemperature, diArticleCode=diArticleCode, sensors=sensors, sensorsGroup=sensorsGroup)
