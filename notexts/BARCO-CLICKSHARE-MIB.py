#
# PySNMP MIB module BARCO-CLICKSHARE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/barco/BARCO-CLICKSHARE-MIB
# Produced by pysmi-1.1.11 at Wed Apr  3 13:55:59 2024
# On host fv-az1200-481 platform Linux version 6.5.0-1016-azure by user runner
# Using Python version 3.10.14 (main, Mar 20 2024, 15:15:25) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, ModuleIdentity, Counter32, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, Unsigned32, Bits, Gauge32, iso, ObjectIdentity, NotificationType, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ModuleIdentity", "Counter32", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "Unsigned32", "Bits", "Gauge32", "iso", "ObjectIdentity", "NotificationType", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
clickShare = ModuleIdentity((1, 3, 6, 1, 4, 1, 7312, 2468))
clickShare.setRevisions(('2018-12-04 09:00',))
if mibBuilder.loadTexts: clickShare.setLastUpdated('201812040900Z')
if mibBuilder.loadTexts: clickShare.setOrganization('Barco ClickShare')
barco = MibIdentifier((1, 3, 6, 1, 4, 1, 7312))
events = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 0))
baseUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 1))
deviceInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1))
sensors = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2))
alarmCpuTemperature = NotificationType((1, 3, 6, 1, 4, 1, 7312, 2468, 0, 1))
if mibBuilder.loadTexts: alarmCpuTemperature.setStatus('current')
alarmCaseFanSpeed = NotificationType((1, 3, 6, 1, 4, 1, 7312, 2468, 0, 2))
if mibBuilder.loadTexts: alarmCaseFanSpeed.setStatus('current')
alarmProcessNotRunning = NotificationType((1, 3, 6, 1, 4, 1, 7312, 2468, 0, 3))
if mibBuilder.loadTexts: alarmProcessNotRunning.setStatus('current')
diRoomName = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diRoomName.setStatus('current')
diWelcomeMessage = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diWelcomeMessage.setStatus('current')
diLocation = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diLocation.setStatus('current')
diArticleCode = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diArticleCode.setStatus('current')
diSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diSerialNumber.setStatus('current')
diUptime = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diUptime.setStatus('current')
diTotalUptime = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diTotalUptime.setStatus('current')
sensorCaseFanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCaseFanSpeed.setStatus('current')
sensorCpuFanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCpuFanSpeed.setStatus('current')
sensorCpuTemperature = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCpuTemperature.setStatus('current')
sensorCpuTemperatureThreshold = MibScalar((1, 3, 6, 1, 4, 1, 7312, 2468, 1, 2, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorCpuTemperatureThreshold.setStatus('current')
clickShareMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2469))
clickShareMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2469, 1))
clickShareMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7312, 2469, 2))
clickShareMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 7312, 2469, 1, 1)).setObjects(("BARCO-CLICKSHARE-MIB", "deviceInfoGroup"), ("BARCO-CLICKSHARE-MIB", "sensorsGroup"), ("BARCO-CLICKSHARE-MIB", "eventsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    clickShareMIBCompliance = clickShareMIBCompliance.setStatus('current')
deviceInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7312, 2469, 2, 1)).setObjects(("BARCO-CLICKSHARE-MIB", "diRoomName"), ("BARCO-CLICKSHARE-MIB", "diWelcomeMessage"), ("BARCO-CLICKSHARE-MIB", "diLocation"), ("BARCO-CLICKSHARE-MIB", "diArticleCode"), ("BARCO-CLICKSHARE-MIB", "diSerialNumber"), ("BARCO-CLICKSHARE-MIB", "diUptime"), ("BARCO-CLICKSHARE-MIB", "diTotalUptime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    deviceInfoGroup = deviceInfoGroup.setStatus('current')
sensorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 7312, 2469, 2, 2)).setObjects(("BARCO-CLICKSHARE-MIB", "sensorCaseFanSpeed"), ("BARCO-CLICKSHARE-MIB", "sensorCpuFanSpeed"), ("BARCO-CLICKSHARE-MIB", "sensorCpuTemperature"), ("BARCO-CLICKSHARE-MIB", "sensorCpuTemperatureThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sensorsGroup = sensorsGroup.setStatus('current')
eventsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 7312, 2469, 2, 99)).setObjects(("BARCO-CLICKSHARE-MIB", "alarmCpuTemperature"), ("BARCO-CLICKSHARE-MIB", "alarmCaseFanSpeed"), ("BARCO-CLICKSHARE-MIB", "alarmProcessNotRunning"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    eventsGroup = eventsGroup.setStatus('current')
mibBuilder.exportSymbols("BARCO-CLICKSHARE-MIB", sensorCpuFanSpeed=sensorCpuFanSpeed, events=events, deviceInfoGroup=deviceInfoGroup, baseUnit=baseUnit, clickShareMIB=clickShareMIB, barco=barco, sensorCpuTemperature=sensorCpuTemperature, alarmCpuTemperature=alarmCpuTemperature, sensorCpuTemperatureThreshold=sensorCpuTemperatureThreshold, diRoomName=diRoomName, deviceInfo=deviceInfo, alarmProcessNotRunning=alarmProcessNotRunning, diLocation=diLocation, diSerialNumber=diSerialNumber, sensors=sensors, diUptime=diUptime, sensorsGroup=sensorsGroup, alarmCaseFanSpeed=alarmCaseFanSpeed, diArticleCode=diArticleCode, clickShareMIBGroups=clickShareMIBGroups, clickShareMIBCompliance=clickShareMIBCompliance, PYSNMP_MODULE_ID=clickShare, sensorCaseFanSpeed=sensorCaseFanSpeed, clickShareMIBCompliances=clickShareMIBCompliances, diTotalUptime=diTotalUptime, eventsGroup=eventsGroup, diWelcomeMessage=diWelcomeMessage, clickShare=clickShare)
