#
# PySNMP MIB module RAPID-IPSEC-SA-MON-MIB-EXT (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nortel/RAPID-IPSEC-SA-MON-MIB-EXT
# Produced by pysmi-1.1.8 at Thu Sep  7 13:31:25 2023
# On host fv-az422-951 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
IpsecDoiIdentType, IpsecDoiSecProtocolId, IpsecDoiAhTransform, IpsecDoiEspTransform, IpsecDoiAuthAlgorithm, IpsecDoiIpcompTransform, IpsecDoiEncapsulationMode = mibBuilder.importSymbols("IPSEC-ISAKMP-IKE-DOI-TC", "IpsecDoiIdentType", "IpsecDoiSecProtocolId", "IpsecDoiAhTransform", "IpsecDoiEspTransform", "IpsecDoiAuthAlgorithm", "IpsecDoiIpcompTransform", "IpsecDoiEncapsulationMode")
rapidstream, = mibBuilder.importSymbols("RAPID-MIB", "rapidstream")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, enterprises, IpAddress, TimeTicks, Counter32, ObjectIdentity, NotificationType, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "enterprises", "IpAddress", "TimeTicks", "Counter32", "ObjectIdentity", "NotificationType", "Integer32", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
rsIpsecSaMonModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 4355, 3))
rsIpsecSaMonModule.setRevisions(('2000-03-21 12:00', '2002-11-01 12:00',))
if mibBuilder.loadTexts: rsIpsecSaMonModule.setLastUpdated('200003211200Z')
if mibBuilder.loadTexts: rsIpsecSaMonModule.setOrganization('WatchGuard Technologies, Inc.')
class IpsecSaCreatorIdent(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("static", 1), ("ike", 2), ("other", 3))

class IpsecIpv6Address(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:2x:2x:2x:2x:2x:1d.1d.1d.1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

rsIpsecSaMonitorMIB = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1))
if mibBuilder.loadTexts: rsIpsecSaMonitorMIB.setStatus('current')
rsSaTables = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1))
if mibBuilder.loadTexts: rsSaTables.setStatus('current')
rsSaStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2))
if mibBuilder.loadTexts: rsSaStatistics.setStatus('current')
rsSaErrors = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3))
if mibBuilder.loadTexts: rsSaErrors.setStatus('current')
rsSaTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4))
if mibBuilder.loadTexts: rsSaTraps.setStatus('current')
rsSaTrapObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 5))
if mibBuilder.loadTexts: rsSaTrapObjects.setStatus('current')
rsSaTrapControl = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6))
if mibBuilder.loadTexts: rsSaTrapControl.setStatus('current')
rsSaGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 7))
if mibBuilder.loadTexts: rsSaGroups.setStatus('current')
rsSaConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 3, 1, 8))
if mibBuilder.loadTexts: rsSaConformance.setStatus('current')
rsIpsecSaEspInTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1), )
if mibBuilder.loadTexts: rsIpsecSaEspInTable.setStatus('current')
rsIpsecSaEspInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1), ).setIndexNames((0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspInAddress"), (0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspInSpi"))
if mibBuilder.loadTexts: rsIpsecSaEspInEntry.setStatus('current')
rsIpsecSaEspInAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInAddress.setStatus('current')
rsIpsecSaEspInSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInSpi.setStatus('current')
rsIpsecSaEspInDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInDestId.setStatus('current')
rsIpsecSaEspInDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInDestIdType.setStatus('current')
rsIpsecSaEspInSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInSourceId.setStatus('current')
rsIpsecSaEspInSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInSourceIdType.setStatus('current')
rsIpsecSaEspInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInProtocol.setStatus('current')
rsIpsecSaEspInDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInDestPort.setStatus('current')
rsIpsecSaEspInSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInSourcePort.setStatus('current')
rsIpsecSaEspInCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInCreator.setStatus('current')
rsIpsecSaEspInEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInEncapsulation.setStatus('current')
rsIpsecSaEspInEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 12), IpsecDoiEspTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInEncAlg.setStatus('current')
rsIpsecSaEspInEncKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65531))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInEncKeyLength.setStatus('current')
rsIpsecSaEspInAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 14), IpsecDoiAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInAuthAlg.setStatus('current')
rsIpsecSaEspInLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 15), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInLimitSeconds.setStatus('current')
rsIpsecSaEspInLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 16), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInLimitKbytes.setStatus('current')
rsIpsecSaEspInAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInAccSeconds.setStatus('current')
rsIpsecSaEspInAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 18), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInAccKbytes.setStatus('current')
rsIpsecSaEspInUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 19), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInUserOctets.setStatus('current')
rsIpsecSaEspInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInPackets.setStatus('current')
rsIpsecSaEspInDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInDecryptErrors.setStatus('current')
rsIpsecSaEspInAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInAuthErrors.setStatus('current')
rsIpsecSaEspInReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInReplayErrors.setStatus('current')
rsIpsecSaEspInPolicyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInPolicyErrors.setStatus('current')
rsIpsecSaEspInPadErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInPadErrors.setStatus('current')
rsIpsecSaEspInOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspInOtherReceiveErrors.setStatus('current')
rsIpsecSaAhInTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2), )
if mibBuilder.loadTexts: rsIpsecSaAhInTable.setStatus('current')
rsIpsecSaAhInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1), ).setIndexNames((0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhInAddress"), (0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhInSpi"))
if mibBuilder.loadTexts: rsIpsecSaAhInEntry.setStatus('current')
rsIpsecSaAhInAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInAddress.setStatus('current')
rsIpsecSaAhInSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInSpi.setStatus('current')
rsIpsecSaAhInDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInDestId.setStatus('current')
rsIpsecSaAhInDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInDestIdType.setStatus('current')
rsIpsecSaAhInSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInSourceId.setStatus('current')
rsIpsecSaAhInSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInSourceIdType.setStatus('current')
rsIpsecSaAhInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInProtocol.setStatus('current')
rsIpsecSaAhInDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInDestPort.setStatus('current')
rsIpsecSaAhInSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInSourcePort.setStatus('current')
rsIpsecSaAhInCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInCreator.setStatus('current')
rsIpsecSaAhInEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInEncapsulation.setStatus('current')
rsIpsecSaAhInAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 12), IpsecDoiAhTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInAuthAlg.setStatus('current')
rsIpsecSaAhInLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 13), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInLimitSeconds.setStatus('current')
rsIpsecSaAhInLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 14), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInLimitKbytes.setStatus('current')
rsIpsecSaAhInAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 15), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInAccSeconds.setStatus('current')
rsIpsecSaAhInAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 16), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInAccKbytes.setStatus('current')
rsIpsecSaAhInUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 17), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInUserOctets.setStatus('current')
rsIpsecSaAhInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInPackets.setStatus('current')
rsIpsecSaAhInAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInAuthErrors.setStatus('current')
rsIpsecSaAhInReplayErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInReplayErrors.setStatus('current')
rsIpsecSaAhInPolicyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInPolicyErrors.setStatus('current')
rsIpsecSaAhInOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhInOtherReceiveErrors.setStatus('current')
rsIpsecSaIpcompInTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3), )
if mibBuilder.loadTexts: rsIpsecSaIpcompInTable.setStatus('current')
rsIpsecSaIpcompInEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1), ).setIndexNames((0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaIpcompInAddress"), (0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaIpcompInCpi"))
if mibBuilder.loadTexts: rsIpsecSaIpcompInEntry.setStatus('current')
rsIpsecSaIpcompInAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInAddress.setStatus('current')
rsIpsecSaIpcompInCpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 2), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInCpi.setStatus('current')
rsIpsecSaIpcompInDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInDestId.setStatus('current')
rsIpsecSaIpcompInDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInDestIdType.setStatus('current')
rsIpsecSaIpcompInSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInSourceId.setStatus('current')
rsIpsecSaIpcompInSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInSourceIdType.setStatus('current')
rsIpsecSaIpcompInProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInProtocol.setStatus('current')
rsIpsecSaIpcompInDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInDestPort.setStatus('current')
rsIpsecSaIpcompInSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInSourcePort.setStatus('current')
rsIpsecSaIpcompInCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInCreator.setStatus('current')
rsIpsecSaIpcompInEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInEncapsulation.setStatus('current')
rsIpsecSaIpcompInDecompAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 12), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInDecompAlg.setStatus('current')
rsIpsecSaIpcompInSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInSeconds.setStatus('current')
rsIpsecSaIpcompInUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 14), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInUserOctets.setStatus('current')
rsIpsecSaIpcompInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInPackets.setStatus('current')
rsIpsecSaIpcompInDecompErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInDecompErrors.setStatus('current')
rsIpsecSaIpcompInOtherReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompInOtherReceiveErrors.setStatus('current')
rsIpsecSaEspOutTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4), )
if mibBuilder.loadTexts: rsIpsecSaEspOutTable.setStatus('current')
rsIpsecSaEspOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1), ).setIndexNames((0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspOutAddress"), (0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspOutSpi"))
if mibBuilder.loadTexts: rsIpsecSaEspOutEntry.setStatus('current')
rsIpsecSaEspOutAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutAddress.setStatus('current')
rsIpsecSaEspOutSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutSpi.setStatus('current')
rsIpsecSaEspOutSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutSourceId.setStatus('current')
rsIpsecSaEspOutSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutSourceIdType.setStatus('current')
rsIpsecSaEspOutDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutDestId.setStatus('current')
rsIpsecSaEspOutDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutDestIdType.setStatus('current')
rsIpsecSaEspOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutProtocol.setStatus('current')
rsIpsecSaEspOutSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutSourcePort.setStatus('current')
rsIpsecSaEspOutDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutDestPort.setStatus('current')
rsIpsecSaEspOutCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutCreator.setStatus('current')
rsIpsecSaEspOutEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutEncapsulation.setStatus('current')
rsIpsecSaEspOutEncAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 12), IpsecDoiEspTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutEncAlg.setStatus('current')
rsIpsecSaEspOutEncKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65531))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutEncKeyLength.setStatus('current')
rsIpsecSaEspOutAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 14), IpsecDoiAuthAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutAuthAlg.setStatus('current')
rsIpsecSaEspOutLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 15), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutLimitSeconds.setStatus('current')
rsIpsecSaEspOutLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 16), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutLimitKbytes.setStatus('current')
rsIpsecSaEspOutAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutAccSeconds.setStatus('current')
rsIpsecSaEspOutAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 18), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutAccKbytes.setStatus('current')
rsIpsecSaEspOutUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 19), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutUserOctets.setStatus('current')
rsIpsecSaEspOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutPackets.setStatus('current')
rsIpsecSaEspOutSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaEspOutSendErrors.setStatus('current')
rsIpsecSaAhOutTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5), )
if mibBuilder.loadTexts: rsIpsecSaAhOutTable.setStatus('current')
rsIpsecSaAhOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1), ).setIndexNames((0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhOutAddress"), (0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhOutSpi"))
if mibBuilder.loadTexts: rsIpsecSaAhOutEntry.setStatus('current')
rsIpsecSaAhOutAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutAddress.setStatus('current')
rsIpsecSaAhOutSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutSpi.setStatus('current')
rsIpsecSaAhOutSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutSourceId.setStatus('current')
rsIpsecSaAhOutSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutSourceIdType.setStatus('current')
rsIpsecSaAhOutDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutDestId.setStatus('current')
rsIpsecSaAhOutDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutDestIdType.setStatus('current')
rsIpsecSaAhOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutProtocol.setStatus('current')
rsIpsecSaAhOutSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutSourcePort.setStatus('current')
rsIpsecSaAhOutDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutDestPort.setStatus('current')
rsIpsecSaAhOutCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutCreator.setStatus('current')
rsIpsecSaAhOutEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutEncapsulation.setStatus('current')
rsIpsecSaAhOutAuthAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 12), IpsecDoiAhTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutAuthAlg.setStatus('current')
rsIpsecSaAhOutLimitSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 13), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutLimitSeconds.setStatus('current')
rsIpsecSaAhOutLimitKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 14), Integer32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutLimitKbytes.setStatus('current')
rsIpsecSaAhOutAccSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 15), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutAccSeconds.setStatus('current')
rsIpsecSaAhOutAccKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 16), Counter32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutAccKbytes.setStatus('current')
rsIpsecSaAhOutUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 17), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutUserOctets.setStatus('current')
rsIpsecSaAhOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutPackets.setStatus('current')
rsIpsecSaAhOutSendErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaAhOutSendErrors.setStatus('current')
rsIpsecSaIpcompOutTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6), )
if mibBuilder.loadTexts: rsIpsecSaIpcompOutTable.setStatus('current')
rsIpsecSaIpcompOutEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1), ).setIndexNames((0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaIpcompOutAddress"), (0, "RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaIpcompOutCpi"))
if mibBuilder.loadTexts: rsIpsecSaIpcompOutEntry.setStatus('current')
rsIpsecSaIpcompOutAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutAddress.setStatus('current')
rsIpsecSaIpcompOutCpi = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 2), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutCpi.setStatus('current')
rsIpsecSaIpcompOutSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutSourceId.setStatus('current')
rsIpsecSaIpcompOutSourceIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 4), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutSourceIdType.setStatus('current')
rsIpsecSaIpcompOutDestId = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutDestId.setStatus('current')
rsIpsecSaIpcompOutDestIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 6), IpsecDoiIdentType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutDestIdType.setStatus('current')
rsIpsecSaIpcompOutProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutProtocol.setStatus('current')
rsIpsecSaIpcompOutSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutSourcePort.setStatus('current')
rsIpsecSaIpcompOutDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutDestPort.setStatus('current')
rsIpsecSaIpcompOutCreator = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 10), IpsecSaCreatorIdent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutCreator.setStatus('current')
rsIpsecSaIpcompOutEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 11), IpsecDoiEncapsulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutEncapsulation.setStatus('current')
rsIpsecSaIpcompOutCompAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 12), IpsecDoiIpcompTransform()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutCompAlg.setStatus('current')
rsIpsecSaIpcompOutSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 13), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutSeconds.setStatus('current')
rsIpsecSaIpcompOutUserOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 14), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutUserOctets.setStatus('current')
rsIpsecSaIpcompOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 3, 1, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSaIpcompOutPackets.setStatus('current')
rsIpsecEspCurrentInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEspCurrentInboundSAs.setStatus('current')
rsIpsecEspTotalInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEspTotalInboundSAs.setStatus('current')
rsIpsecEspCurrentOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEspCurrentOutboundSAs.setStatus('current')
rsIpsecEspTotalOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecEspTotalOutboundSAs.setStatus('current')
rsIpsecAhCurrentInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecAhCurrentInboundSAs.setStatus('current')
rsIpsecAhTotalInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecAhTotalInboundSAs.setStatus('current')
rsIpsecAhCurrentOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecAhCurrentOutboundSAs.setStatus('current')
rsIpsecAhTotalOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecAhTotalOutboundSAs.setStatus('current')
rsIpsecIpcompCurrentInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecIpcompCurrentInboundSAs.setStatus('current')
rsIpsecIpcompTotalInboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecIpcompTotalInboundSAs.setStatus('current')
rsIpsecIpcompCurrentOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecIpcompCurrentOutboundSAs.setStatus('current')
rsIpsecIpcompTotalOutboundSAs = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecIpcompTotalOutboundSAs.setStatus('current')
rsIpsecDecryptionErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecDecryptionErrors.setStatus('current')
rsIpsecAuthenticationErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecAuthenticationErrors.setStatus('current')
rsIpsecReplayErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecReplayErrors.setStatus('current')
rsIpsecPolicyErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecPolicyErrors.setStatus('current')
rsIpsecOtherReceiveErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecOtherReceiveErrors.setStatus('current')
rsIpsecSendErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSendErrors.setStatus('current')
rsIpsecUnknownSpiErrors = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecUnknownSpiErrors.setStatus('current')
rsIpsecSecurityProtocol = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 5, 1), IpsecDoiSecProtocolId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSecurityProtocol.setStatus('current')
rsIpsecSPI = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecSPI.setStatus('current')
rsIpsecLocalAddress = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 5, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecLocalAddress.setStatus('current')
rsIpsecPeerAddress = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 5, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIpsecPeerAddress.setStatus('current')
rsEspAuthFailureTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsEspAuthFailureTrapEnable.setStatus('current')
rsAhAuthFailureTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAhAuthFailureTrapEnable.setStatus('current')
rsEspReplayFailureTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsEspReplayFailureTrapEnable.setStatus('current')
rsAhReplayFailureTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAhReplayFailureTrapEnable.setStatus('current')
rsEspPolicyFailureTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsEspPolicyFailureTrapEnable.setStatus('current')
rsAhPolicyFailureTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsAhPolicyFailureTrapEnable.setStatus('current')
rsInvalidSpiTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4355, 3, 1, 6, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsInvalidSpiTrapEnable.setStatus('current')
rsEspAuthFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 1)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspInAuthErrors"))
if mibBuilder.loadTexts: rsEspAuthFailureTrap.setStatus('current')
rsAhAuthFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 2)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhInAuthErrors"))
if mibBuilder.loadTexts: rsAhAuthFailureTrap.setStatus('current')
rsEspReplayFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 3)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspInReplayErrors"))
if mibBuilder.loadTexts: rsEspReplayFailureTrap.setStatus('current')
rsAhReplayFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 4)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhInReplayErrors"))
if mibBuilder.loadTexts: rsAhReplayFailureTrap.setStatus('current')
rsEspPolicyFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 5)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaEspInPolicyErrors"))
if mibBuilder.loadTexts: rsEspPolicyFailureTrap.setStatus('current')
rsAhPolicyFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 6)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSaAhInPolicyErrors"))
if mibBuilder.loadTexts: rsAhPolicyFailureTrap.setStatus('current')
rsInvalidSpiTrap = NotificationType((1, 3, 6, 1, 4, 1, 4355, 3, 1, 4, 0, 7)).setObjects(("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecLocalAddress"), ("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSecurityProtocol"), ("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecPeerAddress"), ("RAPID-IPSEC-SA-MON-MIB-EXT", "rsIpsecSPI"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rsInvalidSpiTrap.setStatus('current')
mibBuilder.exportSymbols("RAPID-IPSEC-SA-MON-MIB-EXT", rsIpsecSaIpcompOutSeconds=rsIpsecSaIpcompOutSeconds, rsIpsecSaEspInEncapsulation=rsIpsecSaEspInEncapsulation, rsIpsecSaAhOutAddress=rsIpsecSaAhOutAddress, rsIpsecSaIpcompInPackets=rsIpsecSaIpcompInPackets, rsIpsecSaIpcompOutEntry=rsIpsecSaIpcompOutEntry, rsIpsecSaAhOutDestIdType=rsIpsecSaAhOutDestIdType, rsIpsecSaAhOutTable=rsIpsecSaAhOutTable, rsIpsecSaAhOutLimitSeconds=rsIpsecSaAhOutLimitSeconds, rsIpsecSaAhInCreator=rsIpsecSaAhInCreator, rsIpsecSaIpcompOutSourcePort=rsIpsecSaIpcompOutSourcePort, rsIpsecSaAhOutSourceId=rsIpsecSaAhOutSourceId, rsIpsecIpcompTotalInboundSAs=rsIpsecIpcompTotalInboundSAs, rsIpsecSaIpcompOutSourceIdType=rsIpsecSaIpcompOutSourceIdType, rsIpsecSaIpcompOutCpi=rsIpsecSaIpcompOutCpi, rsIpsecSaAhInEntry=rsIpsecSaAhInEntry, rsAhAuthFailureTrap=rsAhAuthFailureTrap, rsIpsecSaIpcompInCpi=rsIpsecSaIpcompInCpi, rsSaErrors=rsSaErrors, rsIpsecSaEspInPadErrors=rsIpsecSaEspInPadErrors, rsIpsecSaEspOutPackets=rsIpsecSaEspOutPackets, rsIpsecSaEspInEncKeyLength=rsIpsecSaEspInEncKeyLength, rsEspAuthFailureTrap=rsEspAuthFailureTrap, rsIpsecSaEspInDestId=rsIpsecSaEspInDestId, rsIpsecSaAhInSourcePort=rsIpsecSaAhInSourcePort, rsIpsecSaAhOutSpi=rsIpsecSaAhOutSpi, rsIpsecSaEspOutAddress=rsIpsecSaEspOutAddress, rsIpsecSaIpcompOutCompAlg=rsIpsecSaIpcompOutCompAlg, rsIpsecEspCurrentInboundSAs=rsIpsecEspCurrentInboundSAs, rsAhReplayFailureTrapEnable=rsAhReplayFailureTrapEnable, rsIpsecLocalAddress=rsIpsecLocalAddress, rsIpsecSaAhOutDestId=rsIpsecSaAhOutDestId, rsIpsecSecurityProtocol=rsIpsecSecurityProtocol, rsIpsecSaMonitorMIB=rsIpsecSaMonitorMIB, rsIpsecSaAhInDestIdType=rsIpsecSaAhInDestIdType, rsIpsecSaIpcompInDecompErrors=rsIpsecSaIpcompInDecompErrors, rsIpsecSaAhInDestId=rsIpsecSaAhInDestId, rsIpsecSaAhInEncapsulation=rsIpsecSaAhInEncapsulation, rsIpsecSaEspInSourcePort=rsIpsecSaEspInSourcePort, rsIpsecSaAhOutSourcePort=rsIpsecSaAhOutSourcePort, PYSNMP_MODULE_ID=rsIpsecSaMonModule, rsIpsecSaEspOutAuthAlg=rsIpsecSaEspOutAuthAlg, rsIpsecSaEspInProtocol=rsIpsecSaEspInProtocol, rsIpsecSaEspInDecryptErrors=rsIpsecSaEspInDecryptErrors, rsIpsecSaIpcompInSourceIdType=rsIpsecSaIpcompInSourceIdType, rsIpsecSaAhOutSourceIdType=rsIpsecSaAhOutSourceIdType, rsIpsecSaAhInPolicyErrors=rsIpsecSaAhInPolicyErrors, rsIpsecAhCurrentInboundSAs=rsIpsecAhCurrentInboundSAs, rsIpsecSaAhInSpi=rsIpsecSaAhInSpi, rsIpsecSaEspInDestPort=rsIpsecSaEspInDestPort, rsIpsecSaIpcompInSourcePort=rsIpsecSaIpcompInSourcePort, rsIpsecSaEspInEntry=rsIpsecSaEspInEntry, rsIpsecSaEspInDestIdType=rsIpsecSaEspInDestIdType, rsIpsecSaAhOutSendErrors=rsIpsecSaAhOutSendErrors, rsIpsecSaIpcompInEntry=rsIpsecSaIpcompInEntry, rsEspPolicyFailureTrap=rsEspPolicyFailureTrap, rsAhPolicyFailureTrapEnable=rsAhPolicyFailureTrapEnable, rsIpsecSaEspInReplayErrors=rsIpsecSaEspInReplayErrors, rsIpsecSaEspOutAccKbytes=rsIpsecSaEspOutAccKbytes, rsIpsecAhTotalOutboundSAs=rsIpsecAhTotalOutboundSAs, rsEspReplayFailureTrapEnable=rsEspReplayFailureTrapEnable, rsIpsecSaEspOutEncAlg=rsIpsecSaEspOutEncAlg, rsIpsecSaAhOutCreator=rsIpsecSaAhOutCreator, rsIpsecReplayErrors=rsIpsecReplayErrors, rsIpsecSaEspOutProtocol=rsIpsecSaEspOutProtocol, rsIpsecSaEspInAuthAlg=rsIpsecSaEspInAuthAlg, rsIpsecSaAhInSourceIdType=rsIpsecSaAhInSourceIdType, rsIpsecSaIpcompInEncapsulation=rsIpsecSaIpcompInEncapsulation, rsIpsecSaEspOutUserOctets=rsIpsecSaEspOutUserOctets, rsIpsecSaAhInDestPort=rsIpsecSaAhInDestPort, rsIpsecSendErrors=rsIpsecSendErrors, rsIpsecIpcompCurrentOutboundSAs=rsIpsecIpcompCurrentOutboundSAs, rsIpsecSaEspInSourceId=rsIpsecSaEspInSourceId, rsIpsecSaEspOutTable=rsIpsecSaEspOutTable, rsIpsecSaIpcompOutDestId=rsIpsecSaIpcompOutDestId, rsIpsecSaAhInAddress=rsIpsecSaAhInAddress, rsIpsecSaAhInSourceId=rsIpsecSaAhInSourceId, rsIpsecSaAhInLimitSeconds=rsIpsecSaAhInLimitSeconds, rsEspPolicyFailureTrapEnable=rsEspPolicyFailureTrapEnable, rsIpsecIpcompTotalOutboundSAs=rsIpsecIpcompTotalOutboundSAs, rsIpsecSaEspInSourceIdType=rsIpsecSaEspInSourceIdType, rsInvalidSpiTrapEnable=rsInvalidSpiTrapEnable, rsIpsecSaAhInPackets=rsIpsecSaAhInPackets, rsIpsecSaEspOutSourcePort=rsIpsecSaEspOutSourcePort, rsIpsecSaAhInTable=rsIpsecSaAhInTable, rsIpsecEspTotalInboundSAs=rsIpsecEspTotalInboundSAs, rsIpsecSaIpcompOutDestPort=rsIpsecSaIpcompOutDestPort, rsIpsecSaAhInAccSeconds=rsIpsecSaAhInAccSeconds, rsIpsecSPI=rsIpsecSPI, rsIpsecSaIpcompInSeconds=rsIpsecSaIpcompInSeconds, rsIpsecSaIpcompOutCreator=rsIpsecSaIpcompOutCreator, rsIpsecSaEspOutCreator=rsIpsecSaEspOutCreator, rsIpsecOtherReceiveErrors=rsIpsecOtherReceiveErrors, rsIpsecSaIpcompOutProtocol=rsIpsecSaIpcompOutProtocol, rsIpsecSaIpcompOutEncapsulation=rsIpsecSaIpcompOutEncapsulation, rsEspReplayFailureTrap=rsEspReplayFailureTrap, rsIpsecSaIpcompOutAddress=rsIpsecSaIpcompOutAddress, rsIpsecPeerAddress=rsIpsecPeerAddress, rsIpsecSaEspOutDestId=rsIpsecSaEspOutDestId, rsIpsecSaEspInOtherReceiveErrors=rsIpsecSaEspInOtherReceiveErrors, rsIpsecSaAhOutEncapsulation=rsIpsecSaAhOutEncapsulation, rsIpsecSaEspOutSourceId=rsIpsecSaEspOutSourceId, rsIpsecEspTotalOutboundSAs=rsIpsecEspTotalOutboundSAs, rsIpsecSaIpcompInDestId=rsIpsecSaIpcompInDestId, rsIpsecAhTotalInboundSAs=rsIpsecAhTotalInboundSAs, rsIpsecSaEspOutDestPort=rsIpsecSaEspOutDestPort, rsIpsecSaEspOutEncapsulation=rsIpsecSaEspOutEncapsulation, rsIpsecSaAhOutProtocol=rsIpsecSaAhOutProtocol, rsIpsecSaAhOutAccKbytes=rsIpsecSaAhOutAccKbytes, rsIpsecIpcompCurrentInboundSAs=rsIpsecIpcompCurrentInboundSAs, rsAhPolicyFailureTrap=rsAhPolicyFailureTrap, rsIpsecSaAhOutPackets=rsIpsecSaAhOutPackets, IpsecIpv6Address=IpsecIpv6Address, rsIpsecAuthenticationErrors=rsIpsecAuthenticationErrors, rsIpsecSaIpcompOutSourceId=rsIpsecSaIpcompOutSourceId, rsIpsecSaIpcompInTable=rsIpsecSaIpcompInTable, rsIpsecSaIpcompOutTable=rsIpsecSaIpcompOutTable, rsIpsecSaAhInReplayErrors=rsIpsecSaAhInReplayErrors, rsIpsecSaAhInAuthErrors=rsIpsecSaAhInAuthErrors, rsIpsecSaEspOutEncKeyLength=rsIpsecSaEspOutEncKeyLength, rsIpsecSaAhInAuthAlg=rsIpsecSaAhInAuthAlg, rsIpsecSaAhOutAuthAlg=rsIpsecSaAhOutAuthAlg, rsIpsecSaIpcompInDestPort=rsIpsecSaIpcompInDestPort, rsIpsecSaAhInLimitKbytes=rsIpsecSaAhInLimitKbytes, rsIpsecSaEspOutLimitKbytes=rsIpsecSaEspOutLimitKbytes, rsIpsecSaEspInAccSeconds=rsIpsecSaEspInAccSeconds, rsIpsecSaAhOutLimitKbytes=rsIpsecSaAhOutLimitKbytes, rsSaStatistics=rsSaStatistics, rsSaTrapObjects=rsSaTrapObjects, rsIpsecPolicyErrors=rsIpsecPolicyErrors, rsIpsecSaEspInLimitKbytes=rsIpsecSaEspInLimitKbytes, rsIpsecSaEspInPackets=rsIpsecSaEspInPackets, rsIpsecSaAhInAccKbytes=rsIpsecSaAhInAccKbytes, rsIpsecSaIpcompInOtherReceiveErrors=rsIpsecSaIpcompInOtherReceiveErrors, rsIpsecSaEspInEncAlg=rsIpsecSaEspInEncAlg, rsIpsecSaEspOutAccSeconds=rsIpsecSaEspOutAccSeconds, rsIpsecSaAhInOtherReceiveErrors=rsIpsecSaAhInOtherReceiveErrors, rsIpsecUnknownSpiErrors=rsIpsecUnknownSpiErrors, rsIpsecSaEspInAccKbytes=rsIpsecSaEspInAccKbytes, rsIpsecSaEspInSpi=rsIpsecSaEspInSpi, rsIpsecSaEspInPolicyErrors=rsIpsecSaEspInPolicyErrors, rsIpsecSaAhOutDestPort=rsIpsecSaAhOutDestPort, rsIpsecSaAhOutUserOctets=rsIpsecSaAhOutUserOctets, rsIpsecSaIpcompInProtocol=rsIpsecSaIpcompInProtocol, rsIpsecDecryptionErrors=rsIpsecDecryptionErrors, rsSaTables=rsSaTables, rsSaTraps=rsSaTraps, rsIpsecSaIpcompOutPackets=rsIpsecSaIpcompOutPackets, rsIpsecSaEspOutSourceIdType=rsIpsecSaEspOutSourceIdType, rsSaConformance=rsSaConformance, rsIpsecSaAhInProtocol=rsIpsecSaAhInProtocol, rsIpsecSaEspOutLimitSeconds=rsIpsecSaEspOutLimitSeconds, rsIpsecSaIpcompOutUserOctets=rsIpsecSaIpcompOutUserOctets, rsIpsecSaAhInUserOctets=rsIpsecSaAhInUserOctets, rsIpsecSaEspInLimitSeconds=rsIpsecSaEspInLimitSeconds, rsIpsecSaIpcompInCreator=rsIpsecSaIpcompInCreator, rsIpsecSaIpcompInDestIdType=rsIpsecSaIpcompInDestIdType, rsAhAuthFailureTrapEnable=rsAhAuthFailureTrapEnable, IpsecSaCreatorIdent=IpsecSaCreatorIdent, rsIpsecSaIpcompOutDestIdType=rsIpsecSaIpcompOutDestIdType, rsAhReplayFailureTrap=rsAhReplayFailureTrap, rsIpsecSaIpcompInAddress=rsIpsecSaIpcompInAddress, rsIpsecSaEspInAddress=rsIpsecSaEspInAddress, rsIpsecSaIpcompInSourceId=rsIpsecSaIpcompInSourceId, rsIpsecSaEspInAuthErrors=rsIpsecSaEspInAuthErrors, rsSaGroups=rsSaGroups, rsSaTrapControl=rsSaTrapControl, rsIpsecSaMonModule=rsIpsecSaMonModule, rsIpsecSaEspInCreator=rsIpsecSaEspInCreator, rsIpsecSaIpcompInUserOctets=rsIpsecSaIpcompInUserOctets, rsIpsecSaEspOutSpi=rsIpsecSaEspOutSpi, rsIpsecSaAhOutEntry=rsIpsecSaAhOutEntry, rsIpsecAhCurrentOutboundSAs=rsIpsecAhCurrentOutboundSAs, rsIpsecSaEspOutDestIdType=rsIpsecSaEspOutDestIdType, rsIpsecSaEspInUserOctets=rsIpsecSaEspInUserOctets, rsIpsecSaEspOutSendErrors=rsIpsecSaEspOutSendErrors, rsEspAuthFailureTrapEnable=rsEspAuthFailureTrapEnable, rsIpsecEspCurrentOutboundSAs=rsIpsecEspCurrentOutboundSAs, rsIpsecSaEspInTable=rsIpsecSaEspInTable, rsIpsecSaIpcompInDecompAlg=rsIpsecSaIpcompInDecompAlg, rsInvalidSpiTrap=rsInvalidSpiTrap, rsIpsecSaEspOutEntry=rsIpsecSaEspOutEntry, rsIpsecSaAhOutAccSeconds=rsIpsecSaAhOutAccSeconds)
