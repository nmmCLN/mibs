#
# PySNMP MIB module VMWARE-RESOURCES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/vmware/VMWARE-RESOURCES-MIB
# Produced by pysmi-1.1.8 at Mon Sep 19 07:37:43 2022
# On host fv-az215-626 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, NotificationType, ModuleIdentity, Integer32, Bits, Unsigned32, Counter32, iso, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "NotificationType", "ModuleIdentity", "Integer32", "Bits", "Unsigned32", "Counter32", "iso", "Gauge32", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vmwResources, = mibBuilder.importSymbols("VMWARE-ROOT-MIB", "vmwResources")
VmwSubsystemStatus, = mibBuilder.importSymbols("VMWARE-TC-MIB", "VmwSubsystemStatus")
vmwResourcesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6876, 3, 10))
vmwResourcesMIB.setRevisions(('2008-10-15 00:00', '2007-12-27 00:00',))
if mibBuilder.loadTexts: vmwResourcesMIB.setLastUpdated('200810150000Z')
if mibBuilder.loadTexts: vmwResourcesMIB.setOrganization('VMware, Inc')
vmwCPU = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 3, 1))
if mibBuilder.loadTexts: vmwCPU.setStatus('current')
vmwNumCPUs = MibScalar((1, 3, 6, 1, 4, 1, 6876, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwNumCPUs.setStatus('current')
vmwMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 3, 2))
vmwMemSize = MibScalar((1, 3, 6, 1, 4, 1, 6876, 3, 2, 1), Gauge32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwMemSize.setStatus('current')
vmwMemCOS = MibScalar((1, 3, 6, 1, 4, 1, 6876, 3, 2, 2), Gauge32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwMemCOS.setStatus('current')
vmwMemAvail = MibScalar((1, 3, 6, 1, 4, 1, 6876, 3, 2, 3), Gauge32()).setUnits('kilobytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwMemAvail.setStatus('current')
vmwStorage = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 3, 5))
vmwHostBusAdapterNumber = MibScalar((1, 3, 6, 1, 4, 1, 6876, 3, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHostBusAdapterNumber.setStatus('current')
vmwHostBusAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2), )
if mibBuilder.loadTexts: vmwHostBusAdapterTable.setStatus('current')
vmwHostBusAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1), ).setIndexNames((0, "VMWARE-RESOURCES-MIB", "vmwHostBusAdapterIndex"))
if mibBuilder.loadTexts: vmwHostBusAdapterEntry.setStatus('current')
vmwHostBusAdapterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: vmwHostBusAdapterIndex.setStatus('current')
vmwHbaDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaDeviceName.setStatus('current')
vmwHbaBusNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1023), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaBusNumber.setStatus('current')
vmwHbaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 4), VmwSubsystemStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaStatus.setStatus('current')
vmwHbaModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaModelName.setStatus('current')
vmwHbaDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaDriverName.setStatus('current')
vmwHbaPci = MibTableColumn((1, 3, 6, 1, 4, 1, 6876, 3, 5, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmwHbaPci.setStatus('current')
vmwResourceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 3, 10, 2))
vmwResourceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 3, 10, 2, 1))
vmwResMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6876, 3, 10, 2, 2))
vmwResourceMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6876, 3, 10, 2, 1, 2)).setObjects(("VMWARE-RESOURCES-MIB", "vmwResourceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwResourceMIBCompliance = vmwResourceMIBCompliance.setStatus('current')
vmwResourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6876, 3, 10, 2, 2, 1)).setObjects(("VMWARE-RESOURCES-MIB", "vmwNumCPUs"), ("VMWARE-RESOURCES-MIB", "vmwMemSize"), ("VMWARE-RESOURCES-MIB", "vmwMemCOS"), ("VMWARE-RESOURCES-MIB", "vmwMemAvail"), ("VMWARE-RESOURCES-MIB", "vmwHostBusAdapterNumber"), ("VMWARE-RESOURCES-MIB", "vmwHbaDeviceName"), ("VMWARE-RESOURCES-MIB", "vmwHbaBusNumber"), ("VMWARE-RESOURCES-MIB", "vmwHbaStatus"), ("VMWARE-RESOURCES-MIB", "vmwHbaModelName"), ("VMWARE-RESOURCES-MIB", "vmwHbaDriverName"), ("VMWARE-RESOURCES-MIB", "vmwHbaPci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vmwResourceGroup = vmwResourceGroup.setStatus('current')
mibBuilder.exportSymbols("VMWARE-RESOURCES-MIB", PYSNMP_MODULE_ID=vmwResourcesMIB, vmwHbaBusNumber=vmwHbaBusNumber, vmwMemSize=vmwMemSize, vmwHostBusAdapterEntry=vmwHostBusAdapterEntry, vmwHostBusAdapterIndex=vmwHostBusAdapterIndex, vmwResourceGroup=vmwResourceGroup, vmwNumCPUs=vmwNumCPUs, vmwResMIBGroups=vmwResMIBGroups, vmwHbaDeviceName=vmwHbaDeviceName, vmwHbaDriverName=vmwHbaDriverName, vmwHostBusAdapterNumber=vmwHostBusAdapterNumber, vmwMemAvail=vmwMemAvail, vmwResourceMIBConformance=vmwResourceMIBConformance, vmwCPU=vmwCPU, vmwHostBusAdapterTable=vmwHostBusAdapterTable, vmwHbaModelName=vmwHbaModelName, vmwResourcesMIB=vmwResourcesMIB, vmwHbaStatus=vmwHbaStatus, vmwMemCOS=vmwMemCOS, vmwHbaPci=vmwHbaPci, vmwResourceMIBCompliances=vmwResourceMIBCompliances, vmwMemory=vmwMemory, vmwResourceMIBCompliance=vmwResourceMIBCompliance, vmwStorage=vmwStorage)
