#
# PySNMP MIB module ARRIS-C3-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/arris/ARRIS-C3-STATS-MIB
# Produced by pysmi-1.1.12 at Thu Apr  4 13:35:05 2024
# On host fv-az984-576 platform Linux version 6.5.0-1017-azure by user runner
# Using Python version 3.10.14 (main, Mar 20 2024, 15:15:25) [GCC 11.4.0]
#
cmtsC3, = mibBuilder.importSymbols("ARRIS-MIB", "cmtsC3")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
docsIfCmtsServiceEntry, = mibBuilder.importSymbols("DOCS-IF-MIB", "docsIfCmtsServiceEntry")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, Bits, MibIdentifier, ModuleIdentity, iso, Counter64, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, Integer32, NotificationType, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Bits", "MibIdentifier", "ModuleIdentity", "iso", "Counter64", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "Integer32", "NotificationType", "TimeTicks", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cmtsC3StatsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1))
if mibBuilder.loadTexts: cmtsC3StatsMIB.setLastUpdated('200308200000Z')
if mibBuilder.loadTexts: cmtsC3StatsMIB.setOrganization('Arris International')
dcxUpstreamStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1))
dcxUpstreamStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1), )
if mibBuilder.loadTexts: dcxUpstreamStatsTable.setStatus('current')
dcxUpstreamStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1), ).setIndexNames((0, "ARRIS-C3-STATS-MIB", "dcxUsStatsIfIndex"))
if mibBuilder.loadTexts: dcxUpstreamStatsEntry.setStatus('current')
dcxUsStatsOther = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsOther.setStatus('current')
dcxUsStatsRanging = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsRanging.setStatus('current')
dcxUsStatsRngAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsRngAborted.setStatus('current')
dcxUsStatsRngComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsRngComplete.setStatus('current')
dcxUsStatsIpComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsIpComplete.setStatus('current')
dcxUsStatsRegComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsRegComplete.setStatus('current')
dcxUsStatsAccessDenied = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsAccessDenied.setStatus('current')
dcxUsStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 1, 1, 1, 8), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxUsStatsIfIndex.setStatus('current')
dcxCmtsServiceStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2))
dcxCmtsServiceTable = MibTable((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2, 1), )
if mibBuilder.loadTexts: dcxCmtsServiceTable.setStatus('current')
dcxCmtsServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2, 1, 1), )
docsIfCmtsServiceEntry.registerAugmentions(("ARRIS-C3-STATS-MIB", "dcxCmtsServiceEntry"))
dcxCmtsServiceEntry.setIndexNames(*docsIfCmtsServiceEntry.getIndexNames())
if mibBuilder.loadTexts: dcxCmtsServiceEntry.setStatus('current')
dcxCmtsServiceOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxCmtsServiceOutOctets.setStatus('current')
dcxCmtsServiceOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcxCmtsServiceOutPackets.setStatus('current')
cdxCmtsServiceUpBWExcessReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsServiceUpBWExcessReqs.setStatus('current')
cdxCmtsServiceDownBWExcessPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4115, 1, 4, 3, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdxCmtsServiceDownBWExcessPkts.setStatus('current')
mibBuilder.exportSymbols("ARRIS-C3-STATS-MIB", dcxCmtsServiceOutOctets=dcxCmtsServiceOutOctets, dcxUsStatsRngComplete=dcxUsStatsRngComplete, dcxCmtsServiceOutPackets=dcxCmtsServiceOutPackets, dcxCmtsServiceEntry=dcxCmtsServiceEntry, dcxUsStatsRegComplete=dcxUsStatsRegComplete, dcxUsStatsRanging=dcxUsStatsRanging, cdxCmtsServiceDownBWExcessPkts=cdxCmtsServiceDownBWExcessPkts, dcxUpstreamStatsTable=dcxUpstreamStatsTable, dcxUsStatsAccessDenied=dcxUsStatsAccessDenied, dcxUsStatsIfIndex=dcxUsStatsIfIndex, dcxCmtsServiceStatsObjects=dcxCmtsServiceStatsObjects, dcxUpstreamStatsObjects=dcxUpstreamStatsObjects, dcxCmtsServiceTable=dcxCmtsServiceTable, cdxCmtsServiceUpBWExcessReqs=cdxCmtsServiceUpBWExcessReqs, dcxUsStatsIpComplete=dcxUsStatsIpComplete, cmtsC3StatsMIB=cmtsC3StatsMIB, PYSNMP_MODULE_ID=cmtsC3StatsMIB, dcxUsStatsRngAborted=dcxUsStatsRngAborted, dcxUpstreamStatsEntry=dcxUpstreamStatsEntry, dcxUsStatsOther=dcxUsStatsOther)
