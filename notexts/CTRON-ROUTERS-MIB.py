#
# PySNMP MIB module CTRON-ROUTERS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-ROUTERS-MIB
# Produced by pysmi-1.1.8 at Wed Jun 29 13:07:56 2022
# On host fv-az90-294 platform Linux version 5.13.0-1031-azure by user runner
# Using Python version 3.10.5 (main, Jun  7 2022, 06:49:50) [GCC 9.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
nwRtrHighLevelView, nwRtrProtoSuites, nwRouter, nwRtrMibs = mibBuilder.importSymbols("ROUTER-OIDS", "nwRtrHighLevelView", "nwRtrProtoSuites", "nwRouter", "nwRtrMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, ModuleIdentity, NotificationType, Integer32, MibIdentifier, ObjectIdentity, TimeTicks, IpAddress, Unsigned32, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "ModuleIdentity", "NotificationType", "Integer32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "IpAddress", "Unsigned32", "iso", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nwRtrMibRevision = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 1))
nwRtrStandardMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 2))
nwRtrApplicationView = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1))
nwRtrRoutingView = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2))
nwRtrComponentView = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3))
nwRtrCountersView = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4))
nwRtrApplicationSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1))
nwRtrApplicationInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2))
nwRtrRoutingSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1))
nwRtrRoutingInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2))
nwRtrComponentSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1))
nwRtrComponentInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2))
nwRtrCountersControl = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 1))
nwRtrInterfaceCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2))
nwRtrMibRevText = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrMibRevText.setStatus('mandatory')
nwRtrStdMibTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 2, 1), )
if mibBuilder.loadTexts: nwRtrStdMibTable.setStatus('mandatory')
nwRtrStdMibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 2, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwRtrStdMibIndex"))
if mibBuilder.loadTexts: nwRtrStdMibEntry.setStatus('mandatory')
nwRtrStdMibIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrStdMibIndex.setStatus('mandatory')
nwRtrStdMibIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 1, 2, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrStdMibIdentifier.setStatus('mandatory')
nwRtrAdminChanges = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrAdminChanges.setStatus('mandatory')
nwRouterSystemTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2), )
if mibBuilder.loadTexts: nwRouterSystemTable.setStatus('mandatory')
nwRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwRouterInstance"))
if mibBuilder.loadTexts: nwRouterEntry.setStatus('mandatory')
nwRouterInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterInstance.setStatus('mandatory')
nwRouterAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterAdminStatus.setStatus('mandatory')
nwRouterOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterOperStatus.setStatus('mandatory')
nwRouterOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterOperationalTime.setStatus('mandatory')
nwRouterEntMibGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterEntMibGroup.setStatus('mandatory')
nwRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterName.setStatus('mandatory')
nwRouterVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterVersion.setStatus('mandatory')
nwRouterIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 2, 1, 8), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIdentifier.setStatus('mandatory')
nwRtrVersion = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrVersion.setStatus('mandatory')
nwRouterIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1), )
if mibBuilder.loadTexts: nwRouterIfTable.setStatus('mandatory')
nwRouterIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwRouterIfIndex"), (0, "CTRON-ROUTERS-MIB", "nwRouterIfInstance"))
if mibBuilder.loadTexts: nwRouterIfEntry.setStatus('mandatory')
nwRouterIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIfIndex.setStatus('mandatory')
nwRouterIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIfInstance.setStatus('mandatory')
nwRouterIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIfAdminStatus.setStatus('mandatory')
nwRouterIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIfOperStatus.setStatus('mandatory')
nwRouterIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIfOperationalTime.setStatus('mandatory')
nwRouterIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRouterIfName.setStatus('mandatory')
nwRtgProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1), )
if mibBuilder.loadTexts: nwRtgProtocolTable.setStatus('mandatory')
nwRtgProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwRtgProtocolRtrInstance"), (0, "CTRON-ROUTERS-MIB", "nwRtgProtocolInstance"))
if mibBuilder.loadTexts: nwRtgProtocolEntry.setStatus('mandatory')
nwRtgProtocolRtrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolRtrInstance.setStatus('mandatory')
nwRtgProtocolInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolInstance.setStatus('mandatory')
nwRtgProtocolAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolAdminStatus.setStatus('mandatory')
nwRtgProtocolOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolOperStatus.setStatus('mandatory')
nwRtgProtocolOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolOperationalTime.setStatus('mandatory')
nwRtgProtocolEntMibGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolEntMibGroup.setStatus('mandatory')
nwRtgProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolName.setStatus('mandatory')
nwRtgProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolVersion.setStatus('mandatory')
nwRtgProtocolIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 1, 1, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIdentifier.setStatus('mandatory')
nwRtgProtocolIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1), )
if mibBuilder.loadTexts: nwRtgProtocolIfTable.setStatus('mandatory')
nwRtgProtocolIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwRtgProtocolIfIndex"), (0, "CTRON-ROUTERS-MIB", "nwRtgProtocolIfRtrInstance"), (0, "CTRON-ROUTERS-MIB", "nwRtgProtocolIfInstance"))
if mibBuilder.loadTexts: nwRtgProtocolIfEntry.setStatus('mandatory')
nwRtgProtocolIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfIndex.setStatus('mandatory')
nwRtgProtocolIfRtrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfRtrInstance.setStatus('mandatory')
nwRtgProtocolIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfInstance.setStatus('mandatory')
nwRtgProtocolIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfAdminStatus.setStatus('mandatory')
nwRtgProtocolIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfOperStatus.setStatus('mandatory')
nwRtgProtocolIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfOperationalTime.setStatus('mandatory')
nwRtgProtocolIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 2, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtgProtocolIfName.setStatus('mandatory')
nwComponentTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1), )
if mibBuilder.loadTexts: nwComponentTable.setStatus('mandatory')
nwComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwComponentRtrInstance"), (0, "CTRON-ROUTERS-MIB", "nwComponentInstance"))
if mibBuilder.loadTexts: nwComponentEntry.setStatus('mandatory')
nwComponentRtrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentRtrInstance.setStatus('mandatory')
nwComponentInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentInstance.setStatus('mandatory')
nwComponentAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentAdminStatus.setStatus('mandatory')
nwComponentOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentOperStatus.setStatus('mandatory')
nwComponentOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentOperationalTime.setStatus('mandatory')
nwComponentEntMibGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentEntMibGroup.setStatus('mandatory')
nwComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentName.setStatus('mandatory')
nwComponentVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentVersion.setStatus('mandatory')
nwComponentIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 1, 1, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIdentifier.setStatus('mandatory')
nwComponentIfTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1), )
if mibBuilder.loadTexts: nwComponentIfTable.setStatus('mandatory')
nwComponentIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwComponentIfIndex"), (0, "CTRON-ROUTERS-MIB", "nwComponentIfRtrInstance"), (0, "CTRON-ROUTERS-MIB", "nwComponentIfInstance"))
if mibBuilder.loadTexts: nwComponentIfEntry.setStatus('mandatory')
nwComponentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfIndex.setStatus('mandatory')
nwComponentIfRtrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfRtrInstance.setStatus('mandatory')
nwComponentIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfInstance.setStatus('mandatory')
nwComponentIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfAdminStatus.setStatus('mandatory')
nwComponentIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("pending-disable", 4), ("pending-enable", 5), ("invalid-config", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfOperStatus.setStatus('mandatory')
nwComponentIfOperationalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfOperationalTime.setStatus('mandatory')
nwComponentIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 3, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwComponentIfName.setStatus('mandatory')
nwRtrIfFwdCtrTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1), )
if mibBuilder.loadTexts: nwRtrIfFwdCtrTable.setStatus('mandatory')
nwRtrIfFwdCtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1), ).setIndexNames((0, "CTRON-ROUTERS-MIB", "nwRtrIfFwdCtrIfIndex"))
if mibBuilder.loadTexts: nwRtrIfFwdCtrEntry.setStatus('mandatory')
nwRtrIfFwdCtrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrIfIndex.setStatus('mandatory')
nwRtrIfFwdCtrOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrOperStatus.setStatus('mandatory')
nwRtrIfFwdCtrInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrInPkts.setStatus('mandatory')
nwRtrIfFwdCtrOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrOutPkts.setStatus('mandatory')
nwRtrIfFwdCtrFwdPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrFwdPkts.setStatus('mandatory')
nwRtrIfFwdCtrFilteredPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrFilteredPkts.setStatus('mandatory')
nwRtrIfFwdCtrDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrDiscardPkts.setStatus('mandatory')
nwRtrIfFwdCtrAddrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrAddrErrPkts.setStatus('mandatory')
nwRtrIfFwdCtrLenErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrLenErrPkts.setStatus('mandatory')
nwRtrIfFwdCtrHdrErrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHdrErrPkts.setStatus('mandatory')
nwRtrIfFwdCtrInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrInBytes.setStatus('mandatory')
nwRtrIfFwdCtrOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrOutBytes.setStatus('mandatory')
nwRtrIfFwdCtrFwdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrFwdBytes.setStatus('mandatory')
nwRtrIfFwdCtrFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrFilteredBytes.setStatus('mandatory')
nwRtrIfFwdCtrDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrDiscardBytes.setStatus('mandatory')
nwRtrIfFwdCtrHostInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHostInPkts.setStatus('mandatory')
nwRtrIfFwdCtrHostOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHostOutPkts.setStatus('mandatory')
nwRtrIfFwdCtrHostDiscardPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHostDiscardPkts.setStatus('mandatory')
nwRtrIfFwdCtrHostInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHostInBytes.setStatus('mandatory')
nwRtrIfFwdCtrHostOutBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHostOutBytes.setStatus('mandatory')
nwRtrIfFwdCtrHostDiscardBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 2, 2, 2, 2, 4, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwRtrIfFwdCtrHostDiscardBytes.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-ROUTERS-MIB", nwRtrIfFwdCtrDiscardPkts=nwRtrIfFwdCtrDiscardPkts, nwComponentName=nwComponentName, nwRouterIfInstance=nwRouterIfInstance, nwRouterSystemTable=nwRouterSystemTable, nwComponentRtrInstance=nwComponentRtrInstance, nwRtrIfFwdCtrOperStatus=nwRtrIfFwdCtrOperStatus, nwRtgProtocolEntMibGroup=nwRtgProtocolEntMibGroup, nwRtrApplicationInterfaces=nwRtrApplicationInterfaces, nwRouterEntMibGroup=nwRouterEntMibGroup, nwComponentIfInstance=nwComponentIfInstance, nwRtrRoutingView=nwRtrRoutingView, nwRtrAdminChanges=nwRtrAdminChanges, nwRtgProtocolIfEntry=nwRtgProtocolIfEntry, nwRtrRoutingSystem=nwRtrRoutingSystem, nwRtgProtocolIfIndex=nwRtgProtocolIfIndex, nwComponentIfEntry=nwComponentIfEntry, nwRouterInstance=nwRouterInstance, nwComponentIfAdminStatus=nwComponentIfAdminStatus, nwRtrApplicationView=nwRtrApplicationView, nwRtrIfFwdCtrFilteredBytes=nwRtrIfFwdCtrFilteredBytes, nwRtrCountersView=nwRtrCountersView, nwRtgProtocolRtrInstance=nwRtgProtocolRtrInstance, nwRtrVersion=nwRtrVersion, nwRtrIfFwdCtrInPkts=nwRtrIfFwdCtrInPkts, nwRtgProtocolOperStatus=nwRtgProtocolOperStatus, nwRouterIfOperStatus=nwRouterIfOperStatus, nwRtgProtocolIfTable=nwRtgProtocolIfTable, nwRouterOperStatus=nwRouterOperStatus, nwRtgProtocolTable=nwRtgProtocolTable, nwRtrComponentView=nwRtrComponentView, nwRouterIdentifier=nwRouterIdentifier, nwComponentIfTable=nwComponentIfTable, nwRtrStdMibIndex=nwRtrStdMibIndex, nwRtrIfFwdCtrFwdBytes=nwRtrIfFwdCtrFwdBytes, nwRtrComponentInterfaces=nwRtrComponentInterfaces, nwRtgProtocolInstance=nwRtgProtocolInstance, nwRouterOperationalTime=nwRouterOperationalTime, nwRtgProtocolOperationalTime=nwRtgProtocolOperationalTime, nwComponentEntry=nwComponentEntry, nwRouterVersion=nwRouterVersion, nwRtgProtocolIfOperationalTime=nwRtgProtocolIfOperationalTime, nwComponentIfRtrInstance=nwComponentIfRtrInstance, nwRtrIfFwdCtrHostOutBytes=nwRtrIfFwdCtrHostOutBytes, nwRtgProtocolEntry=nwRtgProtocolEntry, nwRtrStdMibTable=nwRtrStdMibTable, nwRtrIfFwdCtrHostInPkts=nwRtrIfFwdCtrHostInPkts, nwRtrIfFwdCtrAddrErrPkts=nwRtrIfFwdCtrAddrErrPkts, nwRtgProtocolVersion=nwRtgProtocolVersion, nwRtgProtocolIfInstance=nwRtgProtocolIfInstance, nwRtgProtocolAdminStatus=nwRtgProtocolAdminStatus, nwComponentAdminStatus=nwComponentAdminStatus, nwComponentIfName=nwComponentIfName, nwRtrIfFwdCtrHostDiscardBytes=nwRtrIfFwdCtrHostDiscardBytes, nwRtrComponentSystem=nwRtrComponentSystem, nwRouterIfIndex=nwRouterIfIndex, nwRtrIfFwdCtrFilteredPkts=nwRtrIfFwdCtrFilteredPkts, nwComponentOperStatus=nwComponentOperStatus, nwRouterIfTable=nwRouterIfTable, nwRtgProtocolIfOperStatus=nwRtgProtocolIfOperStatus, nwComponentIfOperStatus=nwComponentIfOperStatus, nwRtrIfFwdCtrEntry=nwRtrIfFwdCtrEntry, nwComponentOperationalTime=nwComponentOperationalTime, nwRtgProtocolName=nwRtgProtocolName, nwRtrIfFwdCtrLenErrPkts=nwRtrIfFwdCtrLenErrPkts, nwRtrIfFwdCtrOutBytes=nwRtrIfFwdCtrOutBytes, nwRouterIfEntry=nwRouterIfEntry, nwRtgProtocolIdentifier=nwRtgProtocolIdentifier, nwRtrMibRevText=nwRtrMibRevText, nwRtrIfFwdCtrFwdPkts=nwRtrIfFwdCtrFwdPkts, nwRouterIfOperationalTime=nwRouterIfOperationalTime, nwComponentVersion=nwComponentVersion, nwRtrApplicationSystem=nwRtrApplicationSystem, nwRtgProtocolIfName=nwRtgProtocolIfName, nwRouterEntry=nwRouterEntry, nwRtrMibRevision=nwRtrMibRevision, nwRouterName=nwRouterName, nwRtrStandardMibs=nwRtrStandardMibs, nwRouterIfName=nwRouterIfName, nwRtrIfFwdCtrHostOutPkts=nwRtrIfFwdCtrHostOutPkts, nwRtrIfFwdCtrHostDiscardPkts=nwRtrIfFwdCtrHostDiscardPkts, nwRtrIfFwdCtrIfIndex=nwRtrIfFwdCtrIfIndex, nwRtrIfFwdCtrDiscardBytes=nwRtrIfFwdCtrDiscardBytes, nwComponentEntMibGroup=nwComponentEntMibGroup, nwComponentInstance=nwComponentInstance, nwComponentIfIndex=nwComponentIfIndex, nwRouterAdminStatus=nwRouterAdminStatus, nwRtgProtocolIfAdminStatus=nwRtgProtocolIfAdminStatus, nwRtrRoutingInterfaces=nwRtrRoutingInterfaces, nwRtrStdMibEntry=nwRtrStdMibEntry, nwRouterIfAdminStatus=nwRouterIfAdminStatus, nwRtrIfFwdCtrHdrErrPkts=nwRtrIfFwdCtrHdrErrPkts, nwRtrIfFwdCtrTable=nwRtrIfFwdCtrTable, nwRtrInterfaceCounters=nwRtrInterfaceCounters, nwComponentIfOperationalTime=nwComponentIfOperationalTime, nwRtrStdMibIdentifier=nwRtrStdMibIdentifier, nwComponentIdentifier=nwComponentIdentifier, nwRtgProtocolIfRtrInstance=nwRtgProtocolIfRtrInstance, nwRtrCountersControl=nwRtrCountersControl, nwRtrIfFwdCtrInBytes=nwRtrIfFwdCtrInBytes, nwRtrIfFwdCtrOutPkts=nwRtrIfFwdCtrOutPkts, nwComponentTable=nwComponentTable, nwRtrIfFwdCtrHostInBytes=nwRtrIfFwdCtrHostInBytes)
