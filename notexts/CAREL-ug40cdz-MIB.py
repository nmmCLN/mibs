#
# PySNMP MIB module CAREL-ug40cdz-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/carel/CAREL-ug40cdz-MIB
# Produced by pysmi-1.1.10 at Fri Nov 10 08:40:17 2023
# On host fv-az447-590 platform Linux version 6.2.0-1015-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
sysContact, sysLocation, sysName = mibBuilder.importSymbols("SNMPv2-MIB", "sysContact", "sysLocation", "sysName")
TimeTicks, MibIdentifier, ObjectIdentity, Counter32, Counter64, IpAddress, Gauge32, Integer32, ModuleIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "ObjectIdentity", "Counter32", "Counter64", "IpAddress", "Gauge32", "Integer32", "ModuleIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ug40cdzMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9839, 2, 1))
ug40cdzMIB.setRevisions(('2006-04-11 16:45',))
if mibBuilder.loadTexts: ug40cdzMIB.setLastUpdated('200604111645Z')
if mibBuilder.loadTexts: ug40cdzMIB.setOrganization('CAREL SpA')
carel = MibIdentifier((1, 3, 6, 1, 4, 1, 9839))
systm = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 1))
agentRelease = MibScalar((1, 3, 6, 1, 4, 1, 9839, 1, 1), Integer32()).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentRelease.setStatus('current')
agentCode = MibScalar((1, 3, 6, 1, 4, 1, 9839, 1, 2), Integer32()).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: agentCode.setStatus('current')
instruments = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2))
webGateInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0))
agentParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 1))
netSize = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: netSize.setStatus('current')
baudRate = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1200, 1200), ValueRangeConstraint(2400, 2400), ValueRangeConstraint(4800, 4800), ValueRangeConstraint(9600, 9600), ValueRangeConstraint(19200, 19200), ))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: baudRate.setStatus('current')
unitTypeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 2))
unit1_Type = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 2, 1), DisplayString()).setLabel("unit1-Type").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_Type.setStatus('current')
unitCodeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 3))
unit1_Code = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 3, 1), Integer32()).setLabel("unit1-Code").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_Code.setStatus('current')
unitSoftwareReleaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 4))
unit1_SoftwareRelease = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 4, 1), Integer32()).setLabel("unit1-SoftwareRelease").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_SoftwareRelease.setStatus('current')
unitMinSoftwareReleaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 5))
unit1_MinSoftwareRelease = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 5, 1), Integer32()).setLabel("unit1-MinSoftwareRelease").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_MinSoftwareRelease.setStatus('current')
unitMaxSoftwareReleaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 6))
unit1_MaxSoftwareRelease = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 6, 1), Integer32()).setLabel("unit1-MaxSoftwareRelease").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_MaxSoftwareRelease.setStatus('current')
unitNoAnswerCounterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 7))
unit1_NoAnswerCounter = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 7, 1), Integer32()).setLabel("unit1-NoAnswerCounter").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_NoAnswerCounter.setStatus('current')
unitErrorChecksumCounterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 8))
unit1_ErrorChecksumCounter = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 8, 1), Integer32()).setLabel("unit1-ErrorChecksumCounter").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_ErrorChecksumCounter.setStatus('current')
unitTimeoutCounterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 0, 9))
unit1_TimeoutCounter = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 0, 9, 1), Integer32()).setLabel("unit1-TimeoutCounter").setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: unit1_TimeoutCounter.setStatus('current')
digitalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1))
systemOn = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: systemOn.setStatus('current')
compressore1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: compressore1.setStatus('current')
compressore2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: compressore2.setStatus('current')
compressore3 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: compressore3.setStatus('current')
compressore4 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: compressore4.setStatus('current')
heating1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: heating1.setStatus('current')
heating2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: heating2.setStatus('current')
hotGasCoil = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: hotGasCoil.setStatus('current')
dehumidification = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: dehumidification.setStatus('current')
humidification = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: humidification.setStatus('current')
emerg = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: emerg.setStatus('current')
alarmAccess = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmAccess.setStatus('current')
alarmRoomHT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRoomHT.setStatus('current')
alarmRoomLT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRoomLT.setStatus('current')
alarmRoomHH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRoomHH.setStatus('current')
alarmRoomLH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRoomLH.setStatus('current')
alarmRoomEAP = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRoomEAP.setStatus('current')
alarmFilter = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmFilter.setStatus('current')
alarmFlood = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmFlood.setStatus('current')
alarmAirFlow = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmAirFlow.setStatus('current')
alarmHeater = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHeater.setStatus('current')
alarmHP1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHP1.setStatus('current')
alarmHP2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHP2.setStatus('current')
alarmLP1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLP1.setStatus('current')
alarmLP2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLP2.setStatus('current')
alarmEXV1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmEXV1.setStatus('current')
alarmEXV2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmEXV2.setStatus('current')
alarmPSE = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPSE.setStatus('current')
alarmSmokeFire = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSmokeFire.setStatus('current')
alarmLAN = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLAN.setStatus('current')
alarmHUHC = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHUHC.setStatus('current')
alarmHUPL = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHUPL.setStatus('current')
alarmHUWL = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHUWL.setStatus('current')
alarmCWDHT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCWDHT.setStatus('current')
alarmCWF = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCWF.setStatus('current')
alarmCWFF = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCWFF.setStatus('current')
alarmCWHT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCWHT.setStatus('current')
alarmRTS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRTS.setStatus('current')
alarmHWS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHWS.setStatus('current')
alarmCWS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCWS.setStatus('current')
alarmOTS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmOTS.setStatus('current')
alarmDTS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmDTS.setStatus('current')
alarmRHS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmRHS.setStatus('current')
alarmCWOTS = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCWOTS.setStatus('current')
alarmC1Hours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmC1Hours.setStatus('current')
alarmC2Hours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmC2Hours.setStatus('current')
alarmC3Hours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmC3Hours.setStatus('current')
alarmC4Hours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmC4Hours.setStatus('current')
alarmFilterHours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmFilterHours.setStatus('current')
alarmHeat1Hours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHeat1Hours.setStatus('current')
alarmHeat2Hours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHeat2Hours.setStatus('current')
alarmHumHours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHumHours.setStatus('current')
alarmUnitHours = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmUnitHours.setStatus('current')
alarmDI2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmDI2.setStatus('current')
alarmDI4 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmDI4.setStatus('current')
alarmDI6 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmDI6.setStatus('current')
alarmHum = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHum.setStatus('current')
alarmGeneral = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmGeneral.setStatus('current')
alarm2ndLevel = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarm2ndLevel.setStatus('current')
alarmA = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmA.setStatus('current')
alarmB = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmB.setStatus('current')
alarmC = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmC.setStatus('current')
selDXCW = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: selDXCW.setStatus('current')
selSW = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: selSW.setStatus('current')
systemOnOff = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: systemOnOff.setStatus('current')
resetAlarm = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetAlarm.setStatus('current')
resetHrsFilt = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrsFilt.setStatus('current')
resetHrC1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrC1.setStatus('current')
resetHrC2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 79), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrC2.setStatus('current')
resetHrC3 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrC3.setStatus('current')
resetHrC4 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrC4.setStatus('current')
resetStC1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 82), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStC1.setStatus('current')
resetStC2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 83), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStC2.setStatus('current')
resetStC3 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 84), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStC3.setStatus('current')
resetStC4 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 85), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStC4.setStatus('current')
resetHrH1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 86), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrH1.setStatus('current')
resetHrH2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 87), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrH2.setStatus('current')
resetStH1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 88), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStH1.setStatus('current')
resetStH2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 89), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStH2.setStatus('current')
resetHrHU = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 90), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrHU.setStatus('current')
resetStHU = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 91), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetStHU.setStatus('current')
resetHrACU = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 92), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetHrACU.setStatus('current')
sleepmode = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 95), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sleepmode.setStatus('current')
smtest = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 96), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: smtest.setStatus('current')
enablemeanT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 1, 97), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setUnits('N/A').setMaxAccess("readwrite")
if mibBuilder.loadTexts: enablemeanT.setStatus('current')
analogObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2))
roomTemp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: roomTemp.setStatus('current')
outdoorTemp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: outdoorTemp.setStatus('current')
deliveryTemp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: deliveryTemp.setStatus('current')
cwTemp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTemp.setStatus('current')
hwTemp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: hwTemp.setStatus('current')
roomRH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readonly")
if mibBuilder.loadTexts: roomRH.setStatus('current')
cwoTemp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: cwoTemp.setStatus('current')
evapPress1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('bar').setMaxAccess("readwrite")
if mibBuilder.loadTexts: evapPress1.setStatus('current')
evapPress2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('bar').setMaxAccess("readwrite")
if mibBuilder.loadTexts: evapPress2.setStatus('current')
suctTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: suctTemp1.setStatus('current')
suctTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: suctTemp2.setStatus('current')
evapTemp1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: evapTemp1.setStatus('current')
evapTemp2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: evapTemp2.setStatus('current')
ssh1 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssh1.setStatus('current')
ssh2 = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: ssh2.setStatus('current')
coolRamp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coolRamp.setStatus('current')
heatRamp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: heatRamp.setStatus('current')
fanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: fanSpeed.setStatus('current')
coolSetP = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coolSetP.setStatus('current')
coolDiff = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: coolDiff.setStatus('current')
cool2SetP = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cool2SetP.setStatus('current')
heatSetP = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: heatSetP.setStatus('current')
heat2SetP = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: heat2SetP.setStatus('current')
heatDiff = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: heatDiff.setStatus('current')
thrsHT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C x10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: thrsHT.setStatus('current')
thrsLT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C x10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: thrsLT.setStatus('current')
smCoolSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: smCoolSetp.setStatus('current')
smHeatSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: smHeatSetp.setStatus('current')
cwDehumSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwDehumSetp.setStatus('current')
cwHtThrsh = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwHtThrsh.setStatus('current')
cwModeSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwModeSetp.setStatus('current')
radcoolSpES = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: radcoolSpES.setStatus('current')
radcoolSpDX = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: radcoolSpDX.setStatus('current')
delTempLimit = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C x10').setMaxAccess("readwrite")
if mibBuilder.loadTexts: delTempLimit.setStatus('current')
dtAutChgMLT = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 2, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('degrees C').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dtAutChgMLT.setStatus('current')
integerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3))
filterWorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: filterWorkH.setStatus('current')
unitWorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: unitWorkH.setStatus('current')
compr1WorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: compr1WorkH.setStatus('current')
compr2WorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: compr2WorkH.setStatus('current')
compr3WorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: compr3WorkH.setStatus('current')
compr4WorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: compr4WorkH.setStatus('current')
heat1WorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: heat1WorkH.setStatus('current')
heat2WorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: heat2WorkH.setStatus('current')
humiWorkH = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readonly")
if mibBuilder.loadTexts: humiWorkH.setStatus('current')
dehumPband = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dehumPband.setStatus('current')
humidPband = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidPband.setStatus('current')
hhAlarmThrsh = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hhAlarmThrsh.setStatus('current')
lhAlarmThrsh = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: lhAlarmThrsh.setStatus('current')
dehumSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dehumSetp.setStatus('current')
smDehumSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: smDehumSetp.setStatus('current')
humidSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidSetp.setStatus('current')
smHumidSetp = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('rH%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: smHumidSetp.setStatus('current')
pwOnDelay = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pwOnDelay.setStatus('current')
regulDelay = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: regulDelay.setStatus('current')
lowPdelay = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: lowPdelay.setStatus('current')
thAlarmdelay = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('min').setMaxAccess("readwrite")
if mibBuilder.loadTexts: thAlarmdelay.setStatus('current')
regExcTime = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('min').setMaxAccess("readwrite")
if mibBuilder.loadTexts: regExcTime.setStatus('current')
stdbyTime = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('h').setMaxAccess("readwrite")
if mibBuilder.loadTexts: stdbyTime.setStatus('current')
lanUnit = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('n').setMaxAccess("readwrite")
if mibBuilder.loadTexts: lanUnit.setStatus('current')
smCycleTime = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('min').setMaxAccess("readwrite")
if mibBuilder.loadTexts: smCycleTime.setStatus('current')
exv1steps = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('n').setMaxAccess("readonly")
if mibBuilder.loadTexts: exv1steps.setStatus('current')
exv2steps = MibScalar((1, 3, 6, 1, 4, 1, 9839, 2, 1, 3, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32767, 32767))).setUnits('n').setMaxAccess("readonly")
if mibBuilder.loadTexts: exv2steps.setStatus('current')
mibBuilder.exportSymbols("CAREL-ug40cdz-MIB", coolRamp=coolRamp, alarmRoomEAP=alarmRoomEAP, dehumPband=dehumPband, coolDiff=coolDiff, alarmDI6=alarmDI6, unitMaxSoftwareReleaseGroup=unitMaxSoftwareReleaseGroup, resetHrH2=resetHrH2, alarmHumHours=alarmHumHours, resetStC3=resetStC3, cwModeSetp=cwModeSetp, alarmCWFF=alarmCWFF, alarmFilterHours=alarmFilterHours, evapPress2=evapPress2, resetStC2=resetStC2, compressore4=compressore4, alarmCWHT=alarmCWHT, humidSetp=humidSetp, unit1_ErrorChecksumCounter=unit1_ErrorChecksumCounter, alarmUnitHours=alarmUnitHours, analogObjects=analogObjects, systemOn=systemOn, resetStC4=resetStC4, alarmHP1=alarmHP1, alarmHeat2Hours=alarmHeat2Hours, alarmRoomHT=alarmRoomHT, alarmC2Hours=alarmC2Hours, alarmRoomLH=alarmRoomLH, alarmCWOTS=alarmCWOTS, dehumidification=dehumidification, compr4WorkH=compr4WorkH, suctTemp2=suctTemp2, delTempLimit=delTempLimit, alarmHeater=alarmHeater, resetHrC4=resetHrC4, unitSoftwareReleaseGroup=unitSoftwareReleaseGroup, cool2SetP=cool2SetP, resetAlarm=resetAlarm, systm=systm, unit1_Code=unit1_Code, alarmEXV2=alarmEXV2, thrsLT=thrsLT, compressore1=compressore1, agentParameters=agentParameters, cwHtThrsh=cwHtThrsh, alarmLP2=alarmLP2, selDXCW=selDXCW, alarmFlood=alarmFlood, lowPdelay=lowPdelay, alarmRoomLT=alarmRoomLT, alarmHUWL=alarmHUWL, cwoTemp=cwoTemp, carel=carel, smDehumSetp=smDehumSetp, humiWorkH=humiWorkH, exv1steps=exv1steps, outdoorTemp=outdoorTemp, alarmC4Hours=alarmC4Hours, agentCode=agentCode, unit1_TimeoutCounter=unit1_TimeoutCounter, unitCodeGroup=unitCodeGroup, heatDiff=heatDiff, resetStC1=resetStC1, alarmCWS=alarmCWS, netSize=netSize, resetHrH1=resetHrH1, alarmHUHC=alarmHUHC, sleepmode=sleepmode, ssh2=ssh2, heat2SetP=heat2SetP, heat1WorkH=heat1WorkH, heat2WorkH=heat2WorkH, unit1_MinSoftwareRelease=unit1_MinSoftwareRelease, alarmB=alarmB, ssh1=ssh1, coolSetP=coolSetP, unit1_MaxSoftwareRelease=unit1_MaxSoftwareRelease, alarmLP1=alarmLP1, evapPress1=evapPress1, instruments=instruments, humidification=humidification, hotGasCoil=hotGasCoil, alarmA=alarmA, filterWorkH=filterWorkH, lanUnit=lanUnit, digitalObjects=digitalObjects, alarmHP2=alarmHP2, unitTypeGroup=unitTypeGroup, deliveryTemp=deliveryTemp, cwTemp=cwTemp, pwOnDelay=pwOnDelay, alarmGeneral=alarmGeneral, smHumidSetp=smHumidSetp, alarmDI2=alarmDI2, ug40cdzMIB=ug40cdzMIB, alarmFilter=alarmFilter, hhAlarmThrsh=hhAlarmThrsh, compr2WorkH=compr2WorkH, roomRH=roomRH, radcoolSpDX=radcoolSpDX, dehumSetp=dehumSetp, alarmC=alarmC, evapTemp1=evapTemp1, heating2=heating2, smtest=smtest, heating1=heating1, alarmAirFlow=alarmAirFlow, heatRamp=heatRamp, fanSpeed=fanSpeed, lhAlarmThrsh=lhAlarmThrsh, exv2steps=exv2steps, resetHrHU=resetHrHU, evapTemp2=evapTemp2, alarmRHS=alarmRHS, alarmDTS=alarmDTS, alarmDI4=alarmDI4, stdbyTime=stdbyTime, alarmSmokeFire=alarmSmokeFire, regulDelay=regulDelay, alarmPSE=alarmPSE, compr3WorkH=compr3WorkH, smCoolSetp=smCoolSetp, resetHrACU=resetHrACU, compressore2=compressore2, resetHrsFilt=resetHrsFilt, alarmHeat1Hours=alarmHeat1Hours, dtAutChgMLT=dtAutChgMLT, enablemeanT=enablemeanT, compressore3=compressore3, thAlarmdelay=thAlarmdelay, hwTemp=hwTemp, heatSetP=heatSetP, alarmHum=alarmHum, resetHrC1=resetHrC1, smCycleTime=smCycleTime, regExcTime=regExcTime, PYSNMP_MODULE_ID=ug40cdzMIB, selSW=selSW, resetStH2=resetStH2, alarmC1Hours=alarmC1Hours, alarmLAN=alarmLAN, compr1WorkH=compr1WorkH, unit1_NoAnswerCounter=unit1_NoAnswerCounter, webGateInfo=webGateInfo, roomTemp=roomTemp, alarmCWF=alarmCWF, alarmAccess=alarmAccess, alarmEXV1=alarmEXV1, emerg=emerg, resetHrC2=resetHrC2, resetStH1=resetStH1, resetStHU=resetStHU, alarmRTS=alarmRTS, baudRate=baudRate, unitNoAnswerCounterGroup=unitNoAnswerCounterGroup, alarmCWDHT=alarmCWDHT, alarmRoomHH=alarmRoomHH, alarmOTS=alarmOTS, resetHrC3=resetHrC3, alarmHWS=alarmHWS, alarm2ndLevel=alarm2ndLevel, suctTemp1=suctTemp1, unitWorkH=unitWorkH, smHeatSetp=smHeatSetp, unitErrorChecksumCounterGroup=unitErrorChecksumCounterGroup, unit1_Type=unit1_Type, unit1_SoftwareRelease=unit1_SoftwareRelease, unitTimeoutCounterGroup=unitTimeoutCounterGroup, radcoolSpES=radcoolSpES, unitMinSoftwareReleaseGroup=unitMinSoftwareReleaseGroup, systemOnOff=systemOnOff, integerObjects=integerObjects, alarmHUPL=alarmHUPL, humidPband=humidPband, alarmC3Hours=alarmC3Hours, thrsHT=thrsHT, cwDehumSetp=cwDehumSetp, agentRelease=agentRelease)
