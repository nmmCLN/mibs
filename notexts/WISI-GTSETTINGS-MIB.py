#
# PySNMP MIB module WISI-GTSETTINGS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/wisi/WISI-GTSETTINGS-MIB
# Produced by pysmi-1.1.8 at Tue Sep 12 07:33:52 2023
# On host fv-az749-158 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, NotificationType, Counter64, Gauge32, Integer32, MibIdentifier, ModuleIdentity, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "NotificationType", "Counter64", "Gauge32", "Integer32", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "Unsigned32")
DisplayString, RowStatus, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "PhysAddress")
gtModule, = mibBuilder.importSymbols("WISI-GTMODULES-MIB", "gtModule")
gtUnit, = mibBuilder.importSymbols("WISI-TANGRAM-MIB", "gtUnit")
gtSettingsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5))
gtSettingsMIB.setRevisions(('2016-09-08 00:00', '2015-07-02 00:00',))
if mibBuilder.loadTexts: gtSettingsMIB.setLastUpdated('201609080000Z')
if mibBuilder.loadTexts: gtSettingsMIB.setOrganization('WISI Communications GmbH & Co. KG')
gtSettingsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 0))
gtSettingsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1))
gtSettingsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 2))
gtGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1))
gtSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2))
gtNetworking = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3))
gtHeadendSystemManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4))
gtDateAndTime = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5))
gtSNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6))
gtUser = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7))
gtServices = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 8))
gtModuleBackup = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9))
gtModuleUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10))
gtSettingsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 2, 1))
gtSettingsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 2, 2))
gtSettingsNotifyWebChanged = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 0, 1)).setObjects(("WISI-GTSETTINGS-MIB", "gtWebEnable"), ("WISI-GTSETTINGS-MIB", "gtWebAuth"), ("WISI-GTSETTINGS-MIB", "gtWebProtocol"))
if mibBuilder.loadTexts: gtSettingsNotifyWebChanged.setStatus('current')
gtSettingsNotifyInterfaceChanged = NotificationType((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 0, 2)).setObjects(("WISI-GTSETTINGS-MIB", "gtInterfaceName"), ("WISI-GTSETTINGS-MIB", "gtInterfaceVLAN"), ("WISI-GTSETTINGS-MIB", "gtInterfaceIPv4"), ("WISI-GTSETTINGS-MIB", "gtInterfaceIPv4Mask"), ("WISI-GTSETTINGS-MIB", "gtInterfaceIPv4Gateway"), ("WISI-GTSETTINGS-MIB", "gtInterfaceVLAN"), ("WISI-GTSETTINGS-MIB", "gtInterfaceIGMP"), ("WISI-GTSETTINGS-MIB", "gtInterfaceDHCPState"), ("WISI-GTSETTINGS-MIB", "gtInterfaceWebMgt"), ("WISI-GTSETTINGS-MIB", "gtInterfaceSNMP"), ("WISI-GTSETTINGS-MIB", "gtInterfaceSimulcrypt"), ("WISI-GTSETTINGS-MIB", "gtInterfaceStreaming"), ("WISI-GTSETTINGS-MIB", "gtInterfaceCLI"), ("WISI-GTSETTINGS-MIB", "gtInterfaceUseVLAN"), ("WISI-GTSETTINGS-MIB", "gtInterfaceIfIndex"), ("WISI-GTSETTINGS-MIB", "gtInterfaceRowStatus"))
if mibBuilder.loadTexts: gtSettingsNotifyInterfaceChanged.setStatus('current')
gtSWOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 1), )
if mibBuilder.loadTexts: gtSWOptionsTable.setStatus('current')
gtSWOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 1, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtSWOptionsIdx"))
if mibBuilder.loadTexts: gtSWOptionsEntry.setStatus('current')
gtSWOptionsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gtSWOptionsIdx.setStatus('current')
gtSWOption = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSWOption.setStatus('current')
gtSLATable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 2), )
if mibBuilder.loadTexts: gtSLATable.setStatus('current')
gtSLAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 2, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtSLAEntry.setStatus('current')
gtSLARegistered = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSLARegistered.setStatus('current')
gtSLAExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSLAExpires.setStatus('current')
gtSyslogTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 3), )
if mibBuilder.loadTexts: gtSyslogTable.setStatus('current')
gtSyslogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 3, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtSyslogEntry.setStatus('current')
gtSyslogState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSyslogState.setStatus('current')
gtSyslogIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSyslogIP.setStatus('current')
gtNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: gtNetworkTable.setStatus('current')
gtNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "WISI-GTSETTINGS-MIB", "gtNetworkVLAN"))
if mibBuilder.loadTexts: gtNetworkEntry.setStatus('current')
gtNetworkVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: gtNetworkVLAN.setStatus('current')
gtNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNetworkName.setStatus('current')
gtNetworkIGMPQuerierState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("forced", 1), ("auto", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNetworkIGMPQuerierState.setStatus('current')
gtNetworkIGMPQuerierIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNetworkIGMPQuerierIP.setStatus('current')
gtNetworkIGMPSnoopingState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("blockMulticast", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNetworkIGMPSnoopingState.setStatus('current')
gtNetworkPortsTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 2), )
if mibBuilder.loadTexts: gtNetworkPortsTable.setStatus('current')
gtNetworkPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 2, 1), ).setIndexNames((0, "WISI-GTSETTINGS-MIB", "gtNetworkPortVLAN"), (0, "WISI-GTSETTINGS-MIB", "gtNetworkPortNumber"))
if mibBuilder.loadTexts: gtNetworkPortsEntry.setStatus('current')
gtNetworkPortVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: gtNetworkPortVLAN.setStatus('current')
gtNetworkPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gtNetworkPortNumber.setStatus('current')
gtNetworkPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(255, 255)).setFixedLength(255)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNetworkPortName.setStatus('current')
gtNetworkPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notMember", 0), ("untagged", 1), ("tagged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNetworkPortState.setStatus('current')
gtPortsTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3), )
if mibBuilder.loadTexts: gtPortsTable.setStatus('current')
gtPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1), ).setIndexNames((0, "WISI-GTSETTINGS-MIB", "gtPortsNumber"))
if mibBuilder.loadTexts: gtPortsEntry.setStatus('current')
gtPortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: gtPortsNumber.setStatus('current')
gtPortsName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtPortsName.setStatus('current')
gtPortsFloodMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtPortsFloodMulticast.setStatus('current')
gtPortsBitrateReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtPortsBitrateReceive.setStatus('current')
gtPortsBitrateTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtPortsBitrateTransmit.setStatus('current')
gtPortsLinkup = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnected", 0), ("connected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtPortsLinkup.setStatus('current')
gtIGMPQuerierVersion = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("igmpv1", 1), ("igmpv2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPQuerierVersion.setStatus('current')
gtIGMPQuerierRobustness = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPQuerierRobustness.setStatus('current')
gtIGMPQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPQueryInterval.setStatus('current')
gtIGMPQueryStartupInterval = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPQueryStartupInterval.setStatus('current')
gtIGMPQueryStartupCount = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPQueryStartupCount.setStatus('current')
gtIGMPLastMemberQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPLastMemberQueryInterval.setStatus('current')
gtIGMPLastMemberQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPLastMemberQueryCount.setStatus('current')
gtIGMPQuerierResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtIGMPQuerierResponseTime.setStatus('current')
gtNumSFP = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtNumSFP.setStatus('current')
gtSFPTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13), )
if mibBuilder.loadTexts: gtSFPTable.setStatus('current')
gtSFPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13, 1), ).setIndexNames((0, "WISI-GTSETTINGS-MIB", "gtSFPNumber"))
if mibBuilder.loadTexts: gtSFPEntry.setStatus('current')
gtSFPNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4)))
if mibBuilder.loadTexts: gtSFPNumber.setStatus('current')
gtSFPPlugged = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notAttached", 0), ("attached", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSFPPlugged.setStatus('current')
gtSFPLink = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("down", 0), ("up", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSFPLink.setStatus('current')
gtSFPType = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("copper", 0), ("fiber", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSFPType.setStatus('current')
gtSFPSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 2, 13, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('Mbit/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: gtSFPSpeed.setStatus('current')
gtDNSTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 1), )
if mibBuilder.loadTexts: gtDNSTable.setStatus('current')
gtDNSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 1, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtDNSNumber"))
if mibBuilder.loadTexts: gtDNSEntry.setStatus('current')
gtDNSNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setUnits('slot')
if mibBuilder.loadTexts: gtDNSNumber.setStatus('current')
gtDNSServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtDNSServerIP.setStatus('current')
gtInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2), )
if mibBuilder.loadTexts: gtInterfaceTable.setStatus('current')
gtInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtInterfaceNumber"))
if mibBuilder.loadTexts: gtInterfaceEntry.setStatus('current')
gtInterfaceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gtInterfaceNumber.setStatus('current')
gtInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceName.setStatus('current')
gtInterfaceMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtInterfaceMAC.setStatus('current')
gtInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnected", 0), ("connected", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtInterfaceState.setStatus('current')
gtInterfaceIPv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceIPv4.setStatus('current')
gtInterfaceIPv4Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceIPv4Mask.setStatus('current')
gtInterfaceIPv4Gateway = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceIPv4Gateway.setStatus('current')
gtInterfaceVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceVLAN.setStatus('current')
gtInterfaceIGMP = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("igmpv2", 2), ("igmpv3", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceIGMP.setStatus('current')
gtInterfaceDHCPState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceDHCPState.setStatus('current')
gtInterfaceWebMgt = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceWebMgt.setStatus('current')
gtInterfaceSNMP = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceSNMP.setStatus('current')
gtInterfaceSimulcrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceSimulcrypt.setStatus('current')
gtInterfaceStreaming = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceStreaming.setStatus('current')
gtInterfaceCLI = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceCLI.setStatus('current')
gtInterfaceUseVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceUseVLAN.setStatus('current')
gtInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 17), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceIfIndex.setStatus('current')
gtInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 3, 2, 1, 18), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtInterfaceRowStatus.setStatus('current')
gtHMSTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4, 4), )
if mibBuilder.loadTexts: gtHMSTable.setStatus('current')
gtHMSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4, 4, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtHMSEntry.setStatus('current')
gtHMSGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtHMSGroupName.setStatus('current')
gtHMSComMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtHMSComMethod.setStatus('current')
gtHMSNumMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtHMSNumMembers.setStatus('current')
gtHMSNumAvailModules = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtHMSNumAvailModules.setStatus('current')
gtDateAndTimeTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1), )
if mibBuilder.loadTexts: gtDateAndTimeTable.setStatus('current')
gtDateAndTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtDateAndTimeEntry.setStatus('current')
gtCurrentTimeSource = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtCurrentTimeSource.setStatus('current')
gtTimeUTC = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtTimeUTC.setStatus('current')
gtTimeLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtTimeLocal.setStatus('current')
gtTimeZone = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtTimeZone.setStatus('current')
gtDaylightAdjustment = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtDaylightAdjustment.setStatus('current')
gtNTPServerTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 2), )
if mibBuilder.loadTexts: gtNTPServerTable.setStatus('current')
gtNTPServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 2, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtNTPServerNumber"))
if mibBuilder.loadTexts: gtNTPServerEntry.setStatus('current')
gtNTPServerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gtNTPServerNumber.setStatus('current')
gtNTPServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtNTPServerAddress.setStatus('current')
gtNTPServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 5, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtNTPServerRowStatus.setStatus('current')
gtSNMPTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1), )
if mibBuilder.loadTexts: gtSNMPTable.setStatus('current')
gtSNMPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtSNMPEntry.setStatus('current')
gtAgentState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtAgentState.setStatus('current')
gtAgentPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtAgentPort.setStatus('current')
gtAgentSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthenticationOrEncryption", 1), ("authenticationNoEncryption", 2), ("authenticationAndEncryption", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtAgentSecurityLevel.setStatus('current')
gtAgentComReadString = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtAgentComReadString.setStatus('current')
gtAgentComWriteString = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtAgentComWriteString.setStatus('current')
gtTrapState = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtTrapState.setStatus('current')
gtTrapSNMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("version1", 0), ("version2c", 1), ("version3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtTrapSNMPVersion.setStatus('current')
gtTrapUser = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(40, 40)).setFixedLength(40)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtTrapUser.setStatus('current')
gtTrapSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthenticationOrEncryption", 1), ("authenticationNoEncryption", 2), ("authenticationAndEncryption", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtTrapSecurityLevel.setStatus('current')
gtTrapComString = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtTrapComString.setStatus('current')
gtTrapPDU = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(164, 166, 167))).clone(namedValues=NamedValues(("v1Trap", 164), ("inform", 166), ("v2Trap", 167)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtTrapPDU.setStatus('current')
gtTrapDestTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 2), )
if mibBuilder.loadTexts: gtTrapDestTable.setStatus('current')
gtTrapDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 2, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtTrapDestNumber"))
if mibBuilder.loadTexts: gtTrapDestEntry.setStatus('current')
gtTrapDestNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gtTrapDestNumber.setStatus('current')
gtTrapDestIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtTrapDestIP.setStatus('current')
gtTrapDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtTrapDestPort.setStatus('current')
gtTrapDestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 6, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtTrapDestRowStatus.setStatus('current')
gtUserTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1), )
if mibBuilder.loadTexts: gtUserTable.setStatus('current')
gtUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtUserIdx"), (0, "WISI-GTSETTINGS-MIB", "gtUserParamIdx"))
if mibBuilder.loadTexts: gtUserEntry.setStatus('current')
gtUserIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: gtUserIdx.setStatus('current')
gtUserParamIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: gtUserParamIdx.setStatus('current')
gtUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtUserName.setStatus('current')
gtUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtUserPassword.setStatus('current')
gtUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtUserGroup.setStatus('current')
gtUserAccesslist = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtUserAccesslist.setStatus('current')
gtUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gtUserRowStatus.setStatus('current')
gtGroupTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2), )
if mibBuilder.loadTexts: gtGroupTable.setStatus('current')
gtGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtGroupIdx"), (0, "WISI-GTSETTINGS-MIB", "gtGroupParamIdx"))
if mibBuilder.loadTexts: gtGroupEntry.setStatus('current')
gtGroupIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: gtGroupIdx.setStatus('current')
gtGroupParamIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: gtGroupParamIdx.setStatus('current')
gtGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtGroupName.setStatus('current')
gtGroupRights = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtGroupRights.setStatus('current')
gtGroupAccesslist = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtGroupAccesslist.setStatus('current')
gtAccesslistTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 3), )
if mibBuilder.loadTexts: gtAccesslistTable.setStatus('current')
gtAccesslistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 3, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"), (0, "WISI-GTSETTINGS-MIB", "gtAccesslistIdx"), (0, "WISI-GTSETTINGS-MIB", "gtAccesslistParamIdx"))
if mibBuilder.loadTexts: gtAccesslistEntry.setStatus('current')
gtAccesslistIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: gtAccesslistIdx.setStatus('current')
gtAccesslistParamIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: gtAccesslistParamIdx.setStatus('current')
gtAccesslistName = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtAccesslistName.setStatus('current')
gtAccesslistIPRange = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtAccesslistIPRange.setStatus('current')
gtCurrentUserName = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtCurrentUserName.setStatus('current')
gtCurrentUserPassword = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtCurrentUserPassword.setStatus('current')
gtUserAuthTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 6), )
if mibBuilder.loadTexts: gtUserAuthTable.setStatus('current')
gtUserAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 6, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtUserAuthEntry.setStatus('current')
gtUserAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtUserAuthEnabled.setStatus('current')
gtServicesTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 8, 1), )
if mibBuilder.loadTexts: gtServicesTable.setStatus('current')
gtServicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 8, 1, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtServicesEntry.setStatus('current')
gtWebEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtWebEnable.setStatus('current')
gtWebAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtWebAuth.setStatus('current')
gtWebProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("http", 0), ("https", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtWebProtocol.setStatus('current')
gtChassisRedundancy = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtChassisRedundancy.setStatus('current')
gtModuleBackupTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2), )
if mibBuilder.loadTexts: gtModuleBackupTable.setStatus('current')
gtModuleBackupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2, 1), ).setIndexNames((0, "WISI-GTMODULES-MIB", "gtModule"))
if mibBuilder.loadTexts: gtModuleBackupEntry.setStatus('current')
gtModuleBackupDate = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(30, 30)).setFixedLength(30)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleBackupDate.setStatus('current')
gtModuleRedundancyGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtModuleRedundancyGroup.setStatus('current')
gtModuleRedundancyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("operational", 1), ("backup", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtModuleRedundancyMode.setStatus('current')
gtModuleBackupControl = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("backup", 1), ("restore", 2), ("factoryReset", 3), ("downloadBackup", 4), ("uploadBackup", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtModuleBackupControl.setStatus('current')
gtModuleBackupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("commandRunning", 1), ("commandSucceeded", 2), ("commandFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtModuleBackupStatus.setStatus('current')
gtBackupControl = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("downloadPrivateKey", 1), ("createBackup", 2), ("deletePrivateKey", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupControl.setStatus('current')
gtBackupStatus = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("downloading", 1), ("downloadSuccessful", 2), ("downloadFailed", 3), ("createBackups", 4), ("uploading", 5), ("uploadSuccessful", 6), ("uploadFailed", 7), ("deletePrivateKeySuccessful", 8), ("deletePrivateKeyFailed", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtBackupStatus.setStatus('current')
gtBackupPrivateKeyFilename = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupPrivateKeyFilename.setStatus('current')
gtBackupSFTPServer = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupSFTPServer.setStatus('current')
gtBackupSFTPPort = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupSFTPPort.setStatus('current')
gtBackupSFTPUsername = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupSFTPUsername.setStatus('current')
gtBackupSFTPPassword = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupSFTPPassword.setStatus('current')
gtBackupSFTPHostPublicKeyMD5 = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 10), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupSFTPHostPublicKeyMD5.setStatus('current')
gtBackupSFTPFilename = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 9, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtBackupSFTPFilename.setStatus('current')
gtUpdateControl = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("downloadFirmware", 1), ("updateModules", 2), ("updateSwitch", 3), ("deleteAllFirmwareFiles", 4), ("deletePrivateKey", 5), ("updateEntitlements", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtUpdateControl.setStatus('current')
gtUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("downloading", 1), ("downloadSuccessful", 2), ("downloadFailed", 3), ("updating", 4), ("updateSuccessful", 5), ("updateFailed", 6), ("deleteAllFirmwareFilesSuccessful", 7), ("deleteAllFirmwareFilesFailed", 8), ("deletePrivateKeySuccessful", 9), ("deletePrivateKeyFailed", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtUpdateStatus.setStatus('current')
gtFilename = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtFilename.setStatus('current')
gtSFTPServer = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSFTPServer.setStatus('current')
gtSFTPPort = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSFTPPort.setStatus('current')
gtSFTPUsername = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSFTPUsername.setStatus('current')
gtSFTPPassword = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSFTPPassword.setStatus('current')
gtSFTPHostPublicKeyMD5 = MibScalar((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 8), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gtSFTPHostPublicKeyMD5.setStatus('current')
gtUpdateFilesTable = MibTable((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 9), )
if mibBuilder.loadTexts: gtUpdateFilesTable.setStatus('current')
gtUpdateFilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 9, 1), ).setIndexNames((0, "WISI-GTSETTINGS-MIB", "gtUpdateFilesTableIdx"))
if mibBuilder.loadTexts: gtUpdateFilesEntry.setStatus('current')
gtUpdateFilesTableIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: gtUpdateFilesTableIdx.setStatus('current')
gtUpdateFile = MibTableColumn((1, 3, 6, 1, 4, 1, 7465, 20, 2, 9, 1, 5, 1, 10, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtUpdateFile.setStatus('current')
mibBuilder.exportSymbols("WISI-GTSETTINGS-MIB", gtIGMPQuerierVersion=gtIGMPQuerierVersion, gtBackupSFTPUsername=gtBackupSFTPUsername, gtModuleRedundancyGroup=gtModuleRedundancyGroup, gtAgentSecurityLevel=gtAgentSecurityLevel, gtPortsTable=gtPortsTable, gtPortsNumber=gtPortsNumber, gtHeadendSystemManagement=gtHeadendSystemManagement, gtNTPServerAddress=gtNTPServerAddress, gtSyslogTable=gtSyslogTable, gtBackupSFTPServer=gtBackupSFTPServer, gtHMSComMethod=gtHMSComMethod, gtSLAEntry=gtSLAEntry, gtInterfaceStreaming=gtInterfaceStreaming, gtIGMPQueryInterval=gtIGMPQueryInterval, gtTrapDestRowStatus=gtTrapDestRowStatus, gtDNSNumber=gtDNSNumber, gtUserParamIdx=gtUserParamIdx, gtNTPServerTable=gtNTPServerTable, gtModuleBackupEntry=gtModuleBackupEntry, gtModuleRedundancyMode=gtModuleRedundancyMode, gtNumSFP=gtNumSFP, gtUserName=gtUserName, gtDateAndTimeTable=gtDateAndTimeTable, gtInterfaceSNMP=gtInterfaceSNMP, gtNetworkName=gtNetworkName, gtBackupSFTPPort=gtBackupSFTPPort, gtInterfaceIfIndex=gtInterfaceIfIndex, gtSettingsConformance=gtSettingsConformance, gtSWOptionsTable=gtSWOptionsTable, gtSFPTable=gtSFPTable, gtAccesslistIPRange=gtAccesslistIPRange, gtTrapSNMPVersion=gtTrapSNMPVersion, gtDateAndTimeEntry=gtDateAndTimeEntry, gtNetworkPortsTable=gtNetworkPortsTable, gtSLATable=gtSLATable, gtBackupSFTPHostPublicKeyMD5=gtBackupSFTPHostPublicKeyMD5, gtInterfaceIPv4Mask=gtInterfaceIPv4Mask, gtUserAuthTable=gtUserAuthTable, gtInterfaceRowStatus=gtInterfaceRowStatus, gtTimeUTC=gtTimeUTC, gtGroupIdx=gtGroupIdx, gtUpdateFilesEntry=gtUpdateFilesEntry, gtModuleBackupTable=gtModuleBackupTable, gtDaylightAdjustment=gtDaylightAdjustment, gtNetworkIGMPSnoopingState=gtNetworkIGMPSnoopingState, gtAgentPort=gtAgentPort, gtTrapDestEntry=gtTrapDestEntry, gtUpdateStatus=gtUpdateStatus, gtSwitch=gtSwitch, gtInterfaceSimulcrypt=gtInterfaceSimulcrypt, gtInterfaceCLI=gtInterfaceCLI, gtSFTPUsername=gtSFTPUsername, gtSWOptionsEntry=gtSWOptionsEntry, gtNetworkPortNumber=gtNetworkPortNumber, gtSWOptionsIdx=gtSWOptionsIdx, gtSFTPHostPublicKeyMD5=gtSFTPHostPublicKeyMD5, gtUserAuthEnabled=gtUserAuthEnabled, gtUserRowStatus=gtUserRowStatus, gtIGMPLastMemberQueryInterval=gtIGMPLastMemberQueryInterval, gtBackupSFTPFilename=gtBackupSFTPFilename, gtIGMPLastMemberQueryCount=gtIGMPLastMemberQueryCount, gtInterfaceName=gtInterfaceName, gtBackupPrivateKeyFilename=gtBackupPrivateKeyFilename, gtSFPSpeed=gtSFPSpeed, gtModuleBackup=gtModuleBackup, gtSFPLink=gtSFPLink, gtPortsEntry=gtPortsEntry, gtPortsBitrateReceive=gtPortsBitrateReceive, gtSettingsNotifications=gtSettingsNotifications, gtInterfaceState=gtInterfaceState, gtUser=gtUser, gtNetworkPortName=gtNetworkPortName, gtGroupTable=gtGroupTable, gtSettingsObjects=gtSettingsObjects, gtTrapUser=gtTrapUser, gtModuleUpdate=gtModuleUpdate, gtTimeZone=gtTimeZone, gtGroupAccesslist=gtGroupAccesslist, gtWebAuth=gtWebAuth, gtTrapDestTable=gtTrapDestTable, gtHMSTable=gtHMSTable, gtInterfaceIGMP=gtInterfaceIGMP, gtNetworking=gtNetworking, gtUpdateControl=gtUpdateControl, PYSNMP_MODULE_ID=gtSettingsMIB, gtSFTPPort=gtSFTPPort, gtHMSEntry=gtHMSEntry, gtModuleBackupControl=gtModuleBackupControl, gtServices=gtServices, gtCurrentUserName=gtCurrentUserName, gtNetworkEntry=gtNetworkEntry, gtTrapState=gtTrapState, gtUserTable=gtUserTable, gtNTPServerNumber=gtNTPServerNumber, gtGroupName=gtGroupName, gtInterfaceMAC=gtInterfaceMAC, gtInterfaceTable=gtInterfaceTable, gtHMSGroupName=gtHMSGroupName, gtSNMPTable=gtSNMPTable, gtSettingsNotifyWebChanged=gtSettingsNotifyWebChanged, gtIGMPQuerierRobustness=gtIGMPQuerierRobustness, gtUpdateFilesTable=gtUpdateFilesTable, gtUserIdx=gtUserIdx, gtSFPPlugged=gtSFPPlugged, gtNetworkIGMPQuerierIP=gtNetworkIGMPQuerierIP, gtDNSEntry=gtDNSEntry, gtPortsName=gtPortsName, gtTrapDestIP=gtTrapDestIP, gtTrapDestNumber=gtTrapDestNumber, gtInterfaceIPv4Gateway=gtInterfaceIPv4Gateway, gtSNMP=gtSNMP, gtInterfaceIPv4=gtInterfaceIPv4, gtBackupControl=gtBackupControl, gtTrapDestPort=gtTrapDestPort, gtNetworkVLAN=gtNetworkVLAN, gtNetworkPortState=gtNetworkPortState, gtSFPNumber=gtSFPNumber, gtDateAndTime=gtDateAndTime, gtSyslogState=gtSyslogState, gtInterfaceDHCPState=gtInterfaceDHCPState, gtAgentComWriteString=gtAgentComWriteString, gtChassisRedundancy=gtChassisRedundancy, gtAccesslistParamIdx=gtAccesslistParamIdx, gtInterfaceVLAN=gtInterfaceVLAN, gtTrapSecurityLevel=gtTrapSecurityLevel, gtUserAuthEntry=gtUserAuthEntry, gtHMSNumMembers=gtHMSNumMembers, gtUserAccesslist=gtUserAccesslist, gtInterfaceUseVLAN=gtInterfaceUseVLAN, gtAgentComReadString=gtAgentComReadString, gtWebProtocol=gtWebProtocol, gtWebEnable=gtWebEnable, gtAccesslistEntry=gtAccesslistEntry, gtUserEntry=gtUserEntry, gtNTPServerRowStatus=gtNTPServerRowStatus, gtInterfaceEntry=gtInterfaceEntry, gtPortsFloodMulticast=gtPortsFloodMulticast, gtGroupParamIdx=gtGroupParamIdx, gtAccesslistTable=gtAccesslistTable, gtPortsBitrateTransmit=gtPortsBitrateTransmit, gtAccesslistName=gtAccesslistName, gtSNMPEntry=gtSNMPEntry, gtAccesslistIdx=gtAccesslistIdx, gtPortsLinkup=gtPortsLinkup, gtHMSNumAvailModules=gtHMSNumAvailModules, gtTrapPDU=gtTrapPDU, gtSyslogIP=gtSyslogIP, gtTimeLocal=gtTimeLocal, gtCurrentUserPassword=gtCurrentUserPassword, gtServicesEntry=gtServicesEntry, gtCurrentTimeSource=gtCurrentTimeSource, gtServicesTable=gtServicesTable, gtUserPassword=gtUserPassword, gtNTPServerEntry=gtNTPServerEntry, gtSFPType=gtSFPType, gtSLARegistered=gtSLARegistered, gtGroupEntry=gtGroupEntry, gtTrapComString=gtTrapComString, gtNetworkTable=gtNetworkTable, gtIGMPQuerierResponseTime=gtIGMPQuerierResponseTime, gtGeneral=gtGeneral, gtIGMPQueryStartupInterval=gtIGMPQueryStartupInterval, gtNetworkPortsEntry=gtNetworkPortsEntry, gtIGMPQueryStartupCount=gtIGMPQueryStartupCount, gtNetworkIGMPQuerierState=gtNetworkIGMPQuerierState, gtSWOption=gtSWOption, gtModuleBackupDate=gtModuleBackupDate, gtSLAExpires=gtSLAExpires, gtSFTPPassword=gtSFTPPassword, gtSyslogEntry=gtSyslogEntry, gtFilename=gtFilename, gtSettingsNotifyInterfaceChanged=gtSettingsNotifyInterfaceChanged, gtDNSServerIP=gtDNSServerIP, gtAgentState=gtAgentState, gtBackupSFTPPassword=gtBackupSFTPPassword, gtNetworkPortVLAN=gtNetworkPortVLAN, gtGroupRights=gtGroupRights, gtBackupStatus=gtBackupStatus, gtUserGroup=gtUserGroup, gtInterfaceWebMgt=gtInterfaceWebMgt, gtSFTPServer=gtSFTPServer, gtInterfaceNumber=gtInterfaceNumber, gtSettingsGroups=gtSettingsGroups, gtModuleBackupStatus=gtModuleBackupStatus, gtUpdateFile=gtUpdateFile, gtUpdateFilesTableIdx=gtUpdateFilesTableIdx, gtDNSTable=gtDNSTable, gtSettingsCompliances=gtSettingsCompliances, gtSettingsMIB=gtSettingsMIB, gtSFPEntry=gtSFPEntry)
