#
# PySNMP MIB module CTRON-IF-REMAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-IF-REMAP-MIB
# Produced by pysmi-1.1.8 at Tue Sep 12 08:03:41 2023
# On host fv-az447-19 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ctIFRemap, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctIFRemap")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, TimeTicks, iso, Bits, ObjectIdentity, Integer32, IpAddress, Counter64, ModuleIdentity, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "TimeTicks", "iso", "Bits", "ObjectIdentity", "Integer32", "IpAddress", "Counter64", "ModuleIdentity", "NotificationType", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ctIfRemapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 1))
ctIFRemapTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 1, 1), )
if mibBuilder.loadTexts: ctIFRemapTable.setStatus('mandatory')
ctIFRemapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 1, 1, 1), ).setIndexNames((0, "CTRON-IF-REMAP-MIB", "ctIfRemapSourceIf"), (0, "CTRON-IF-REMAP-MIB", "ctIfRemapDestIf"))
if mibBuilder.loadTexts: ctIFRemapEntry.setStatus('mandatory')
ctIfRemapSourceIf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctIfRemapSourceIf.setStatus('mandatory')
ctIfRemapDestIf = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctIfRemapDestIf.setStatus('mandatory')
ctIfRemapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctIfRemapStatus.setStatus('mandatory')
ctIfRemapTableNumberEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctIfRemapTableNumberEntries.setStatus('mandatory')
ctIfRemapTableMaxNumberEntries = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctIfRemapTableMaxNumberEntries.setStatus('mandatory')
ctIfRemapPhysicalErrorsEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("unsupported", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctIfRemapPhysicalErrorsEnable.setStatus('mandatory')
ctIfRemapTableEnable = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("unsupported", 3))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctIfRemapTableEnable.setStatus('mandatory')
ctIfRemapTableStart = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 1, 13, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("unsupported", 3))).clone('start')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctIfRemapTableStart.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-IF-REMAP-MIB", ctIfRemapPhysicalErrorsEnable=ctIfRemapPhysicalErrorsEnable, ctIfRemapStatus=ctIfRemapStatus, ctIfRemapTableEnable=ctIfRemapTableEnable, ctIFRemapTable=ctIFRemapTable, ctIfRemapConfig=ctIfRemapConfig, ctIfRemapSourceIf=ctIfRemapSourceIf, ctIFRemapEntry=ctIFRemapEntry, ctIfRemapTableStart=ctIfRemapTableStart, ctIfRemapTableNumberEntries=ctIfRemapTableNumberEntries, ctIfRemapDestIf=ctIfRemapDestIf, ctIfRemapTableMaxNumberEntries=ctIfRemapTableMaxNumberEntries)
