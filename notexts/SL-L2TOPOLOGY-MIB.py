#
# PySNMP MIB module SL-L2TOPOLOGY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/packetlight/SL-L2TOPOLOGY-MIB
# Produced by pysmi-1.1.8 at Mon Sep 19 08:35:37 2022
# On host fv-az278-268 platform Linux version 5.15.0-1019-azure by user runner
# Using Python version 3.10.6 (main, Aug  3 2022, 07:09:11) [GCC 9.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
PerfCurrentCount, PerfTotalCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfTotalCount", "PerfIntervalCount")
slMain, = mibBuilder.importSymbols("SL-MAIN-MIB", "slMain")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, ModuleIdentity, Integer32, Unsigned32, Gauge32, NotificationType, Bits, Counter32, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Integer32", "Unsigned32", "Gauge32", "NotificationType", "Bits", "Counter32", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "IpAddress")
RowStatus, PhysAddress, DisplayString, TruthValue, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "PhysAddress", "DisplayString", "TruthValue", "TextualConvention", "TimeStamp")
slL2Topology = ModuleIdentity((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10))
if mibBuilder.loadTexts: slL2Topology.setLastUpdated('200008280000Z')
if mibBuilder.loadTexts: slL2Topology.setOrganization('PacketLight Networks Ltd.')
topologyL2Links = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1))
topologyL2Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 2))
topologyL2LinkTable = MibTable((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1), )
if mibBuilder.loadTexts: topologyL2LinkTable.setStatus('current')
topologyL2LinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1), ).setIndexNames((0, "SL-L2TOPOLOGY-MIB", "topologyL2LinkLocalIp"), (0, "SL-L2TOPOLOGY-MIB", "topologyL2LinkLocalPort"))
if mibBuilder.loadTexts: topologyL2LinkEntry.setStatus('current')
topologyL2LinkLocalIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkLocalIp.setStatus('current')
topologyL2LinkLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkLocalPort.setStatus('current')
topologyL2LinkLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkLocalMac.setStatus('current')
topologyL2LinkLocalTid = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkLocalTid.setStatus('current')
topologyL2LinkRemoteIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkRemoteIp.setStatus('current')
topologyL2LinkRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkRemotePort.setStatus('current')
topologyL2LinkRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkRemoteMac.setStatus('current')
topologyL2LinkRemoteTid = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LinkRemoteTid.setStatus('current')
topologyL2LastChange = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 2, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: topologyL2LastChange.setStatus('current')
topologyL2ChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 2, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: topologyL2ChangeTrapEnable.setStatus('current')
topologyL2LinkChange = NotificationType((1, 3, 6, 1, 4, 1, 4515, 1, 3, 10, 2, 3))
if mibBuilder.loadTexts: topologyL2LinkChange.setStatus('current')
mibBuilder.exportSymbols("SL-L2TOPOLOGY-MIB", topologyL2LinkLocalIp=topologyL2LinkLocalIp, topologyL2LinkRemoteTid=topologyL2LinkRemoteTid, topologyL2LinkLocalTid=topologyL2LinkLocalTid, PYSNMP_MODULE_ID=slL2Topology, slL2Topology=slL2Topology, topologyL2Links=topologyL2Links, topologyL2LinkEntry=topologyL2LinkEntry, topologyL2LinkRemoteMac=topologyL2LinkRemoteMac, topologyL2ChangeTrapEnable=topologyL2ChangeTrapEnable, topologyL2LinkLocalPort=topologyL2LinkLocalPort, topologyL2LinkRemotePort=topologyL2LinkRemotePort, topologyL2Traps=topologyL2Traps, topologyL2LinkTable=topologyL2LinkTable, topologyL2LinkRemoteIp=topologyL2LinkRemoteIp, topologyL2LastChange=topologyL2LastChange, topologyL2LinkChange=topologyL2LinkChange, topologyL2LinkLocalMac=topologyL2LinkLocalMac)
