#
# PySNMP MIB module TPDIN2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/tycon/TPDIN2-MIB
# Produced by pysmi-1.1.12 at Thu Apr  4 10:17:43 2024
# On host fv-az801-286 platform Linux version 6.5.0-1016-azure by user runner
# Using Python version 3.10.14 (main, Mar 20 2024, 15:15:25) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, Integer32, TimeTicks, ObjectIdentity, IpAddress, ModuleIdentity, Counter64, iso, Unsigned32, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Integer32", "TimeTicks", "ObjectIdentity", "IpAddress", "ModuleIdentity", "Counter64", "iso", "Unsigned32", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tpdin2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 45621, 2))
if mibBuilder.loadTexts: tpdin2.setLastUpdated('201703031251Z')
if mibBuilder.loadTexts: tpdin2.setOrganization('Tycon Systems')
tycon = MibIdentifier((1, 3, 6, 1, 4, 1, 45621))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 45621, 2, 1))
monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 45621, 2, 2))
class Tenths(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-1'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 10000)

name = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: name.setStatus('current')
version = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('current')
builddate = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: builddate.setStatus('current')
relay1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay1.setStatus('current')
relay2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay2.setStatus('current')
relay3 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay3.setStatus('current')
relay4 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relay4.setStatus('current')
voltage1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 5), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage1.setStatus('current')
voltage2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 6), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage2.setStatus('current')
voltage3 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 7), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage3.setStatus('current')
voltage4 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 8), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltage4.setStatus('current')
current1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 9), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current1.setStatus('current')
current2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 10), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current2.setStatus('current')
current3 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 11), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current3.setStatus('current')
current4 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 12), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: current4.setStatus('current')
temperature1 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 13), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature1.setStatus('current')
temperature2 = MibScalar((1, 3, 6, 1, 4, 1, 45621, 2, 2, 14), Tenths()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature2.setStatus('current')
mibBuilder.exportSymbols("TPDIN2-MIB", relay3=relay3, current3=current3, Tenths=Tenths, name=name, PYSNMP_MODULE_ID=tpdin2, builddate=builddate, voltage2=voltage2, tycon=tycon, relay4=relay4, tpdin2=tpdin2, product=product, version=version, current4=current4, relay1=relay1, voltage1=voltage1, current2=current2, temperature2=temperature2, temperature1=temperature1, current1=current1, voltage4=voltage4, voltage3=voltage3, monitor=monitor, relay2=relay2)
