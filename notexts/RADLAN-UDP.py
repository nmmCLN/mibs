#
# PySNMP MIB module RADLAN-UDP (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/radlan/RADLAN-UDP
# Produced by pysmi-1.1.8 at Thu Sep  7 09:23:30 2023
# On host fv-az1234-541 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.12 (main, Jun  7 2023, 13:43:11) [GCC 11.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ipCidrRouteNextHop, ipCidrRouteMask, ipCidrRouteEntry, ipCidrRouteDest, ipCidrRouteTos = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteNextHop", "ipCidrRouteMask", "ipCidrRouteEntry", "ipCidrRouteDest", "ipCidrRouteTos")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
rip2IfConfEntry, = mibBuilder.importSymbols("RFC1389-MIB", "rip2IfConfEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Bits, ModuleIdentity, MibIdentifier, Gauge32, TimeTicks, ObjectIdentity, Counter64, Integer32, Counter32, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "ModuleIdentity", "MibIdentifier", "Gauge32", "TimeTicks", "ObjectIdentity", "Counter64", "Integer32", "Counter32", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
DisplayString, = mibBuilder.importSymbols("SNMPv2-TC-v1", "DisplayString")
rsUDP = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 42))
rsUDP.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rsUDP.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rsUDP.setOrganization('Radlan Computer Communications Ltd.')
rsUdpRelayTable = MibTable((1, 3, 6, 1, 4, 1, 89, 42, 1), )
if mibBuilder.loadTexts: rsUdpRelayTable.setStatus('current')
rsUdpRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 42, 1, 1), ).setIndexNames((0, "RADLAN-UDP", "rsUdpRelayDstPort"), (0, "RADLAN-UDP", "rsUdpRelaySrcIpInf"), (0, "RADLAN-UDP", "rsUdpRelayDstIpAddr"))
if mibBuilder.loadTexts: rsUdpRelayEntry.setStatus('current')
rsUdpRelayDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstPort.setStatus('current')
rsUdpRelaySrcIpInf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelaySrcIpInf.setStatus('current')
rsUdpRelayDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstIpAddr.setStatus('current')
rsUdpRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayStatus.setStatus('current')
rsUdpRelayUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayUserInfo.setStatus('current')
rsUdpRelayMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 42, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayMibVersion.setStatus('current')
mibBuilder.exportSymbols("RADLAN-UDP", rsUdpRelayMibVersion=rsUdpRelayMibVersion, rsUdpRelaySrcIpInf=rsUdpRelaySrcIpInf, rsUdpRelayStatus=rsUdpRelayStatus, PYSNMP_MODULE_ID=rsUDP, rsUdpRelayUserInfo=rsUdpRelayUserInfo, rsUdpRelayDstIpAddr=rsUdpRelayDstIpAddr, rsUdpRelayEntry=rsUdpRelayEntry, rsUDP=rsUDP, rsUdpRelayTable=rsUdpRelayTable, rsUdpRelayDstPort=rsUdpRelayDstPort)
