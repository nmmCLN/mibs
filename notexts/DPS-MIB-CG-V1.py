#
# PySNMP MIB module DPS-MIB-CG-V1 (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/dpstelecom/DPS-MIB-CG-V1
# Produced by pysmi-1.1.8 at Thu Sep 29 13:08:11 2022
# On host fv-az359-613 platform Linux version 5.15.0-1020-azure by user runner
# Using Python version 3.10.7 (main, Sep  6 2022, 15:19:58) [GCC 9.4.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, IpAddress, iso, Gauge32, NotificationType, ObjectIdentity, Counter32, MibIdentifier, enterprises, Unsigned32, Integer32, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "IpAddress", "iso", "Gauge32", "NotificationType", "ObjectIdentity", "Counter32", "MibIdentifier", "enterprises", "Unsigned32", "Integer32", "Bits", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dpsCellguard = ModuleIdentity((1, 3, 6, 1, 4, 1, 2682, 2))
dpsCellguard.setRevisions(('2013-10-18 12:00',))
if mibBuilder.loadTexts: dpsCellguard.setLastUpdated('201310181200Z')
if mibBuilder.loadTexts: dpsCellguard.setOrganization('DPS Telecom')
dpsInc = MibIdentifier((1, 3, 6, 1, 4, 1, 2682))
cgStringChannels = MibTable((1, 3, 6, 1, 4, 1, 2682, 2, 1), )
if mibBuilder.loadTexts: cgStringChannels.setStatus('current')
cgStringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1), ).setIndexNames((0, "DPS-MIB-CG-V1", "cgStrNumber"))
if mibBuilder.loadTexts: cgStringEntry.setStatus('current')
cgStrNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrNumber.setStatus('current')
cgStrEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrEnabled.setStatus('current')
cgStrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrStatus.setStatus('current')
cgStrVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrVoltage.setStatus('current')
cgStrCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrCurrent.setStatus('current')
cgStrTempA = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrTempA.setStatus('current')
cgStrTempB = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrTempB.setStatus('current')
cgStrConductance = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrConductance.setStatus('current')
cgStrLife = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrLife.setStatus('current')
cgBatteryChannels = MibTable((1, 3, 6, 1, 4, 1, 2682, 2, 2), )
if mibBuilder.loadTexts: cgBatteryChannels.setStatus('current')
cgBatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1), ).setIndexNames((0, "DPS-MIB-CG-V1", "cgStringNumber"), (0, "DPS-MIB-CG-V1", "cgBatteryNumber"))
if mibBuilder.loadTexts: cgBatteryEntry.setStatus('current')
cgStringNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStringNumber.setStatus('current')
cgBatteryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgBatteryNumber.setStatus('current')
cgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStatus.setStatus('current')
cgVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgVoltage.setStatus('current')
cgTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgTemperature.setStatus('current')
cgStrapResist = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgStrapResist.setStatus('current')
cgConductance = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgConductance.setStatus('current')
cgBatteryLife = MibTableColumn((1, 3, 6, 1, 4, 1, 2682, 2, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cgBatteryLife.setStatus('current')
cellguardTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2682, 2, 8000))
cgAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 2682, 2, 8000, 1))
if mibBuilder.loadTexts: cgAlarmTrap.setStatus('current')
cgTrapType = MibScalar((1, 3, 6, 1, 4, 1, 2682, 2, 8000, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 0), ("voltage", 1), ("current", 2), ("temperature", 3), ("strapResistance", 4), ("life", 5), ("conductance", 6))))
if mibBuilder.loadTexts: cgTrapType.setStatus('current')
cgTrapStatus = MibScalar((1, 3, 6, 1, 4, 1, 2682, 2, 8000, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noAlarm", 0), ("minorUnder", 1), ("minorOver", 2), ("majorUnder", 3), ("majorOver", 4), ("notDetected", 5))))
if mibBuilder.loadTexts: cgTrapStatus.setStatus('current')
cgTrapValue = MibScalar((1, 3, 6, 1, 4, 1, 2682, 2, 8000, 4), DisplayString())
if mibBuilder.loadTexts: cgTrapValue.setStatus('current')
mibBuilder.exportSymbols("DPS-MIB-CG-V1", dpsInc=dpsInc, cgStatus=cgStatus, cgVoltage=cgVoltage, cgStrVoltage=cgStrVoltage, cgBatteryChannels=cgBatteryChannels, dpsCellguard=dpsCellguard, cgStrapResist=cgStrapResist, cgStrNumber=cgStrNumber, cgStrTempB=cgStrTempB, cgStrLife=cgStrLife, cgStrEnabled=cgStrEnabled, cgTrapValue=cgTrapValue, cgTemperature=cgTemperature, PYSNMP_MODULE_ID=dpsCellguard, cgBatteryNumber=cgBatteryNumber, cgStrCurrent=cgStrCurrent, cgStringChannels=cgStringChannels, cgStringNumber=cgStringNumber, cgStrStatus=cgStrStatus, cgConductance=cgConductance, cgStrTempA=cgStrTempA, cgTrapStatus=cgTrapStatus, cgTrapType=cgTrapType, cgBatteryEntry=cgBatteryEntry, cgStrConductance=cgStrConductance, cgBatteryLife=cgBatteryLife, cgAlarmTrap=cgAlarmTrap, cgStringEntry=cgStringEntry, cellguardTrap=cellguardTrap)
