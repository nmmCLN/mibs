#
# PySNMP MIB module SYMM-SMI (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/microsemi/SYMM-SMI
# Produced by pysmi-1.1.11 at Wed Apr  3 14:54:01 2024
# On host fv-az1198-695 platform Linux version 6.5.0-1016-azure by user runner
# Using Python version 3.10.14 (main, Mar 20 2024, 15:15:25) [GCC 11.4.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("RFC-1212", "ModuleIdentity", "ObjectIdentity")
Unsigned32, Integer32 = mibBuilder.importSymbols("RFC1155-SMI", "Unsigned32", "Integer32")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, IpAddress, MibIdentifier, Bits, TimeTicks, Counter32, ModuleIdentity, Counter64, NotificationType, NotificationType, ObjectIdentity, Unsigned32, iso, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "IpAddress", "MibIdentifier", "Bits", "TimeTicks", "Counter32", "ModuleIdentity", "Counter64", "NotificationType", "NotificationType", "ObjectIdentity", "Unsigned32", "iso", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
symmetricom = ModuleIdentity((1, 3, 6, 1, 4, 1, 9070))
symmetricom.setRevisions(('2009-06-11 12:00',))
if mibBuilder.loadTexts: symmetricom.setLastUpdated('200906111200Z')
if mibBuilder.loadTexts: symmetricom.setOrganization('Symmetricom, Inc.')
symmNetworkManagement = ObjectIdentity((1, 3, 6, 1, 4, 1, 9070, 1))
if mibBuilder.loadTexts: symmNetworkManagement.setStatus('current')
symmCmipManagement = ObjectIdentity((1, 3, 6, 1, 4, 1, 9070, 1, 1))
if mibBuilder.loadTexts: symmCmipManagement.setStatus('current')
symmSnmpManagement = ObjectIdentity((1, 3, 6, 1, 4, 1, 9070, 1, 2))
if mibBuilder.loadTexts: symmSnmpManagement.setStatus('current')
symmTimePictra = ObjectIdentity((1, 3, 6, 1, 4, 1, 9070, 1, 2, 1))
if mibBuilder.loadTexts: symmTimePictra.setStatus('current')
symmBroadband = ObjectIdentity((1, 3, 6, 1, 4, 1, 9070, 1, 2, 2))
if mibBuilder.loadTexts: symmBroadband.setStatus('current')
symmTTM = ObjectIdentity((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3))
if mibBuilder.loadTexts: symmTTM.setStatus('current')
products = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1))
experiment = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 99))
ts2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 1))
nts = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 2))
ts2100 = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 3))
s100 = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 4))
syncserver = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5))
xli = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 6))
version = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1))
ntpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1))
tyming = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 2))
gps = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 3))
dialup = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 4))
net = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 5))
etc = MibIdentifier((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6))
ntpSysLeap = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("noWarning", 0), ("addSecond", 1), ("subtractSecond", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysLeap.setStatus('current')
ntpSysStratum = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysStratum.setStatus('current')
ntpSysPrecision = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysPrecision.setStatus('current')
ntpSysRootDelay = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysRootDelay.setStatus('current')
ntpSysRootDispersion = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysRootDispersion.setStatus('current')
ntpSysRefID = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysRefID.setStatus('current')
ntpSysRefTime = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysRefTime.setStatus('current')
ntpSysPoll = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysPoll.setStatus('current')
ntpSysPeer = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysPeer.setStatus('current')
ntpSysPhase = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysPhase.setStatus('current')
ntpSysFreq = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysFreq.setStatus('current')
ntpSysError = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysError.setStatus('current')
ntpSysClock = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysClock.setStatus('current')
ntpSysSystem = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysSystem.setStatus('current')
ntpSysProcessor = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysProcessor.setStatus('current')
ntpSysNotrust = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysNotrust.setStatus('mandatory')
ntpSysPktsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysPktsReceived.setStatus('mandatory')
ntpSysMode = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unspecified", 0), ("symactive", 1), ("sympassive", 2), ("client", 3), ("server", 4), ("broadcast", 5), ("reservedctl", 6), ("reservedpriv", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysMode.setStatus('mandatory')
ntpSysVersion = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpSysVersion.setStatus('current')
tymingStatus = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tymingStatus.setStatus('current')
tymingSource = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tymingSource.setStatus('current')
tymingTime = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tymingTime.setStatus('current')
tymingVersion = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tymingVersion.setStatus('current')
tymingFlyPeriod = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tymingFlyPeriod.setStatus('current')
gpsPosition = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsPosition.setStatus('current')
gpsUTCOffset = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsUTCOffset.setStatus('current')
gpsHealth = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsHealth.setStatus('current')
gpsSatlist = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatlist.setStatus('current')
gpsMode = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsMode.setStatus('current')
etcVersion = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etcVersion.setStatus('current')
etcSerialNbr = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etcSerialNbr.setStatus('current')
etcModel = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etcModel.setStatus('current')
etcUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etcUpgrade.setStatus('current')
etcUpgradeServer = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etcUpgradeServer.setStatus('current')
etcAlarmString = MibScalar((1, 3, 6, 1, 4, 1, 9070, 1, 2, 3, 1, 5, 1, 6, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etcAlarmString.setStatus('current')
etcAlarm = NotificationType((1, 3, 6, 1, 4, 1, 9070) + (0,0)).setObjects(("SYMM-SMI", "etcAlarmString"))
mibBuilder.exportSymbols("SYMM-SMI", ntpSysRefID=ntpSysRefID, s100=s100, ntpSysMode=ntpSysMode, etcVersion=etcVersion, ntpSysRootDispersion=ntpSysRootDispersion, tymingSource=tymingSource, ntpSysNotrust=ntpSysNotrust, etc=etc, etcSerialNbr=etcSerialNbr, etcUpgrade=etcUpgrade, products=products, gpsMode=gpsMode, nts=nts, ts2000=ts2000, gps=gps, ntpSysSystem=ntpSysSystem, tymingTime=tymingTime, ntpSysRootDelay=ntpSysRootDelay, tymingFlyPeriod=tymingFlyPeriod, symmetricom=symmetricom, tymingStatus=tymingStatus, tyming=tyming, etcModel=etcModel, gpsUTCOffset=gpsUTCOffset, net=net, etcUpgradeServer=etcUpgradeServer, symmSnmpManagement=symmSnmpManagement, PYSNMP_MODULE_ID=symmetricom, ntpSysPrecision=ntpSysPrecision, ntpSysVersion=ntpSysVersion, gpsHealth=gpsHealth, ntpSysFreq=ntpSysFreq, ntpSysStratum=ntpSysStratum, symmTTM=symmTTM, etcAlarmString=etcAlarmString, syncserver=syncserver, ntpSysClock=ntpSysClock, version=version, experiment=experiment, ts2100=ts2100, xli=xli, ntpSysPhase=ntpSysPhase, ntpSysPktsReceived=ntpSysPktsReceived, ntpSysPoll=ntpSysPoll, symmBroadband=symmBroadband, tymingVersion=tymingVersion, symmNetworkManagement=symmNetworkManagement, etcAlarm=etcAlarm, gpsSatlist=gpsSatlist, ntpSysRefTime=ntpSysRefTime, dialup=dialup, symmTimePictra=symmTimePictra, gpsPosition=gpsPosition, symmCmipManagement=symmCmipManagement, ntpSysLeap=ntpSysLeap, ntpSysError=ntpSysError, ntpSystem=ntpSystem, ntpSysProcessor=ntpSysProcessor, ntpSysPeer=ntpSysPeer)
