#
# PySNMP MIB module NBS-SYSLOG-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mrv/NBS-SYSLOG-SERVER-MIB
# Produced by pysmi-1.1.8 at Thu Sep 29 12:48:48 2022
# On host fv-az343-100 platform Linux version 5.15.0-1020-azure by user runner
# Using Python version 3.10.7 (main, Sep  6 2022, 15:19:58) [GCC 9.4.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
nbs, = mibBuilder.importSymbols("NBS-MIB", "nbs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, ModuleIdentity, TimeTicks, Gauge32, IpAddress, ObjectIdentity, MibIdentifier, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "TimeTicks", "Gauge32", "IpAddress", "ObjectIdentity", "MibIdentifier", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "iso", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nbsSyslogServerMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 206))
if mibBuilder.loadTexts: nbsSyslogServerMib.setLastUpdated('201209260000Z')
if mibBuilder.loadTexts: nbsSyslogServerMib.setOrganization('NBS')
nbsSyslogServerGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 206, 1))
if mibBuilder.loadTexts: nbsSyslogServerGrp.setStatus('current')
nbsSyslogServerTableSize = MibScalar((1, 3, 6, 1, 4, 1, 629, 206, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsSyslogServerTableSize.setStatus('current')
nbsSyslogServerTable = MibTable((1, 3, 6, 1, 4, 1, 629, 206, 1, 2), )
if mibBuilder.loadTexts: nbsSyslogServerTable.setStatus('current')
nbsSyslogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1), ).setIndexNames((0, "NBS-SYSLOG-SERVER-MIB", "nbsSyslogServerIndex"))
if mibBuilder.loadTexts: nbsSyslogServerEntry.setStatus('current')
nbsSyslogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: nbsSyslogServerIndex.setStatus('current')
nbsSyslogServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2))).clone('invalid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSyslogServerStatus.setStatus('current')
nbsSyslogServerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSyslogServerAddressType.setStatus('current')
nbsSyslogServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSyslogServerAddress.setStatus('current')
nbsSyslogServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(514)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSyslogServerPort.setStatus('current')
nbsSyslogServerLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 206, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("deprecated1", 1), ("emerg", 2), ("alert", 3), ("crit", 4), ("error", 5), ("warning", 6), ("notice", 7), ("info", 8), ("debug", 9))).clone('warning')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsSyslogServerLevel.setStatus('current')
mibBuilder.exportSymbols("NBS-SYSLOG-SERVER-MIB", nbsSyslogServerEntry=nbsSyslogServerEntry, nbsSyslogServerAddressType=nbsSyslogServerAddressType, nbsSyslogServerTable=nbsSyslogServerTable, PYSNMP_MODULE_ID=nbsSyslogServerMib, nbsSyslogServerTableSize=nbsSyslogServerTableSize, nbsSyslogServerGrp=nbsSyslogServerGrp, nbsSyslogServerAddress=nbsSyslogServerAddress, nbsSyslogServerIndex=nbsSyslogServerIndex, nbsSyslogServerMib=nbsSyslogServerMib, nbsSyslogServerLevel=nbsSyslogServerLevel, nbsSyslogServerStatus=nbsSyslogServerStatus, nbsSyslogServerPort=nbsSyslogServerPort)
