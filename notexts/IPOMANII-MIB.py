#
# PySNMP MIB module IPOMANII-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/ingrasys/IPOMANII-MIB
# Produced by pysmi-1.1.10 at Mon Feb 12 02:24:41 2024
# On host fv-az1251-48 platform Linux version 6.2.0-1019-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, NotificationType, enterprises, MibIdentifier, Counter64, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, Integer32, ModuleIdentity, IpAddress, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "NotificationType", "enterprises", "MibIdentifier", "Counter64", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "Integer32", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ingrasys = MibIdentifier((1, 3, 6, 1, 4, 1, 2468))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1))
pduAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4))
iPoManII = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2))
ipmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1))
ipmTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2))
ipmIdent = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 1))
ipmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2))
ipmDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3))
ipmSlave = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4))
ipmEnv = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5))
ipmIdentManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmIdentManufacturer.setStatus('mandatory')
ipmIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmIdentModel.setStatus('mandatory')
ipmIdentAgentSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmIdentAgentSoftwareVersion.setStatus('mandatory')
ipmIdentName = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmIdentName.setStatus('mandatory')
ipmAgentConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1))
ipmAgentMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmAgentMibVersion.setStatus('mandatory')
ipmAgentTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2))
ipmAgentTimeDate = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTimeDate.setStatus('mandatory')
ipmAgentTimeTime = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTimeTime.setStatus('mandatory')
ipmAgentTimerFromNtp = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTimerFromNtp.setStatus('mandatory')
ipmAgentNtpIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNtpIpAddress.setStatus('mandatory')
ipmAgentNtpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("gMT-1200", 1), ("gMT-1100", 2), ("gMT-1000", 3), ("gMT-0900", 4), ("gMT-0800", 5), ("gMT-0700", 6), ("gMT-0600", 7), ("gMT-0500", 8), ("gMT-0400", 9), ("gMT-0330", 10), ("gMT-0300", 11), ("gMT-0200", 12), ("gMT-0100", 13), ("gMT-0000", 14), ("gMT0100", 15), ("gMT0200", 16), ("gMT0300", 17), ("gMT0330", 18), ("gMT0400", 19), ("gMT0500", 20), ("gMT0530", 21), ("gMT0600", 22), ("gMT0700", 23), ("gMT0800", 24), ("gMT0900", 25), ("gMT1000", 26), ("gMT1100", 27), ("gMT1200", 28)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNtpTimeZone.setStatus('mandatory')
ipmAgentDayLightSaving = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentDayLightSaving.setStatus('mandatory')
ipmAgentNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3))
ipmAgentNetworkIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 1))
ipmAgentNetworkIpAdress = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNetworkIpAdress.setStatus('mandatory')
ipmAgentNetworkIpGateway = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNetworkIpGateway.setStatus('mandatory')
ipmAgentNetworkIpSubnet = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNetworkIpSubnet.setStatus('mandatory')
ipmAgentNetworkDhcpControl = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNetworkDhcpControl.setStatus('mandatory')
ipmAgentNetworkPingControl = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNetworkPingControl.setStatus('mandatory')
ipmAgentNetworkTftpControl = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentNetworkTftpControl.setStatus('mandatory')
ipmAgentNetworkTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 5))
ipmAgentTelnetControl = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTelnetControl.setStatus('mandatory')
ipmAgentTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTelnetPort.setStatus('mandatory')
ipmAgentNetworkHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 6))
ipmAgentHttpControl = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentHttpControl.setStatus('mandatory')
ipmAgentHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentHttpPort.setStatus('mandatory')
ipmAgentNetworkSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 7))
ipmAgentSnmpControl = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentSnmpControl.setStatus('mandatory')
ipmAgentSnmpPort = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 3, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentSnmpPort.setStatus('mandatory')
ipmAgentLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 4))
pduAgentDataLogInterval = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 28800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduAgentDataLogInterval.setStatus('mandatory')
ipmAgentControl = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 5))
ipmAgentControlDefault = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentControlDefault.setStatus('mandatory')
ipmAgentControlRestart = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restart", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentControlRestart.setStatus('mandatory')
ipmAgentTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 6))
ipmAgentTrapRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTrapRetryCount.setStatus('mandatory')
ipmAgentTrapRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTrapRetryTime.setStatus('mandatory')
ipmAgentTrapAckSignature = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmAgentTrapAckSignature.setStatus('mandatory')
ipmAgentTrapsReceiversTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7), )
if mibBuilder.loadTexts: ipmAgentTrapsReceiversTable.setStatus('mandatory')
ipmAgentTrapsReceiversEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1), ).setIndexNames((0, "IPOMANII-MIB", "trapsIndex"))
if mibBuilder.loadTexts: ipmAgentTrapsReceiversEntry.setStatus('mandatory')
trapsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapsIndex.setStatus('mandatory')
trapsReceiverAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapsReceiverAddr.setStatus('mandatory')
receiverCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverCommunityString.setStatus('mandatory')
receiverNmsType = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("iPoManII-trap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverNmsType.setStatus('mandatory')
receiverSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("informational", 1), ("warning", 2), ("severe", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverSeverityLevel.setStatus('mandatory')
receiverDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverDescription.setStatus('mandatory')
ipmAgentAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 8), )
if mibBuilder.loadTexts: ipmAgentAccessControlTable.setStatus('mandatory')
ipmAgentAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 8, 1), ).setIndexNames((0, "IPOMANII-MIB", "accessIndex"))
if mibBuilder.loadTexts: ipmAgentAccessControlEntry.setStatus('mandatory')
accessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessIndex.setStatus('mandatory')
accessControlAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 8, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlAddr.setStatus('mandatory')
accessControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 2, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permitted", 1), ("denied", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlMode.setStatus('mandatory')
ipmDeviceInlet = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1))
ipmDeviceInletNumber = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmDeviceInletNumber.setStatus('mandatory')
ipmDeviceInletConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2), )
if mibBuilder.loadTexts: ipmDeviceInletConfigTable.setStatus('mandatory')
ipmDeviceInletConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1), ).setIndexNames((0, "IPOMANII-MIB", "inletConfigIndex"))
if mibBuilder.loadTexts: ipmDeviceInletConfigEntry.setStatus('mandatory')
inletConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletConfigIndex.setStatus('mandatory')
inletConfigDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigDesc.setStatus('mandatory')
inletConfigVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageHigh.setStatus('mandatory')
inletConfigVoltageHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageHighAction.setStatus('mandatory')
inletConfigVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageLow.setStatus('mandatory')
inletConfigVoltageLowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageLowAction.setStatus('mandatory')
inletConfigCurrentHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigCurrentHigh.setStatus('mandatory')
inletConfigCurrentHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigCurrentHighAction.setStatus('mandatory')
inletConfigFrequencyHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigFrequencyHigh.setStatus('mandatory')
inletConfigfrequencyHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigfrequencyHighAction.setStatus('mandatory')
inletConfigFrequencyLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigFrequencyLow.setStatus('mandatory')
inletConfigfrequencyLowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigfrequencyLowAction.setStatus('mandatory')
ipmDeviceInletStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3), )
if mibBuilder.loadTexts: ipmDeviceInletStatusTable.setStatus('mandatory')
ipmDeviceInletStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1), ).setIndexNames((0, "IPOMANII-MIB", "inletStatusIndex"))
if mibBuilder.loadTexts: ipmDeviceInletStatusEntry.setStatus('mandatory')
inletStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusIndex.setStatus('mandatory')
inletStatusVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusVoltage.setStatus('mandatory')
inletStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusCurrent.setStatus('mandatory')
inletStatusFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusFrequency.setStatus('mandatory')
inletStatusKwatt = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusKwatt.setStatus('mandatory')
inletStatusWH = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusWH.setStatus('mandatory')
inletWattReset = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("inlet1", 2), ("inlet2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletWattReset.setStatus('mandatory')
ipmDeviceOutlet = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2))
ipmDeviceOutletNumber = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmDeviceOutletNumber.setStatus('mandatory')
ipmDeviceOutletConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2), )
if mibBuilder.loadTexts: ipmDeviceOutletConfigTable.setStatus('mandatory')
ipmDeviceOutletConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1), ).setIndexNames((0, "IPOMANII-MIB", "inletConfigIndex"))
if mibBuilder.loadTexts: ipmDeviceOutletConfigEntry.setStatus('mandatory')
outletConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletConfigIndex.setStatus('mandatory')
outletConfigDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigDesc.setStatus('mandatory')
outletConfigLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigLocation.setStatus('mandatory')
outletConfigOnDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigOnDelay.setStatus('mandatory')
outletConfigOffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigOffDelay.setStatus('mandatory')
outletConfigCurrentHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigCurrentHigh.setStatus('mandatory')
outletConfigCurrentHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigCurrentHighAction.setStatus('mandatory')
ipmDeviceOutletStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3), )
if mibBuilder.loadTexts: ipmDeviceOutletStatusTable.setStatus('mandatory')
ipmDeviceOutletStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1), ).setIndexNames((0, "IPOMANII-MIB", "outletStatusIndex"))
if mibBuilder.loadTexts: ipmDeviceOutletStatusEntry.setStatus('mandatory')
outletStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusIndex.setStatus('mandatory')
outletStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknow", 1), ("outletOff", 2), ("outletOn", 3), ("outletOffToOn", 4), ("outletOnToOff", 5), ("outletCycling", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusStatus.setStatus('mandatory')
outletStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusCurrent.setStatus('mandatory')
outletStatusKwatt = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusKwatt.setStatus('mandatory')
outletStatusWH = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusWH.setStatus('mandatory')
outletStatusStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusStateTime.setStatus('mandatory')
outletStatusTimeToGo = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusTimeToGo.setStatus('mandatory')
ipmDeviceOutletControlTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 4), )
if mibBuilder.loadTexts: ipmDeviceOutletControlTable.setStatus('mandatory')
ipmDeviceOutletControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 4, 1), ).setIndexNames((0, "IPOMANII-MIB", "outletControlIndex"))
if mibBuilder.loadTexts: ipmDeviceOutletControlEntry.setStatus('mandatory')
outletControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletControlIndex.setStatus('mandatory')
outletControlControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletControlControl.setStatus('mandatory')
ipmDeviceOutletControlAll = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimers", 6), ("offByActionTimers", 7), ("cycleByActionTimers", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmDeviceOutletControlAll.setStatus('mandatory')
ipmDeviceOutletWattReset = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("none", 1), ("outleta", 2), ("outletb", 3), ("outletc", 4), ("outletd", 5), ("outlete", 6), ("outletf", 7), ("outletg", 8), ("outleth", 9), ("outleti", 10), ("outletj", 11), ("outletk", 12), ("outletl", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmDeviceOutletWattReset.setStatus('mandatory')
ipmDeviceCcOut = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3))
ipmDeviceCcOutNumber = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmDeviceCcOutNumber.setStatus('mandatory')
ipmDeviceCcOutConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2), )
if mibBuilder.loadTexts: ipmDeviceCcOutConfigTable.setStatus('mandatory')
ipmDeviceCcOutConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2, 1), ).setIndexNames((0, "IPOMANII-MIB", "ccOutConfigIndex"))
if mibBuilder.loadTexts: ipmDeviceCcOutConfigEntry.setStatus('mandatory')
ccOutConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutConfigIndex.setStatus('mandatory')
ccOutConfigDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigDesc.setStatus('mandatory')
ccOutConfigEventAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigEventAction.setStatus('mandatory')
ccOutConfigCloseDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigCloseDelay.setStatus('mandatory')
ccOutConfigOpenDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigOpenDelay.setStatus('mandatory')
ipmDeviceCcOutStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 3), )
if mibBuilder.loadTexts: ipmDeviceCcOutStatusTable.setStatus('mandatory')
ipmDeviceCcOutStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 3, 1), ).setIndexNames((0, "IPOMANII-MIB", "ccOutStatusIndex"))
if mibBuilder.loadTexts: ipmDeviceCcOutStatusEntry.setStatus('mandatory')
ccOutStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutStatusIndex.setStatus('mandatory')
ccOutStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("closed", 1), ("open", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutStatusStatus.setStatus('mandatory')
ccOutStatusTimeOnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutStatusTimeOnState.setStatus('mandatory')
ipmDeviceCcOutControlTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 4), )
if mibBuilder.loadTexts: ipmDeviceCcOutControlTable.setStatus('mandatory')
ipmDeviceCcOutControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 4, 1), ).setIndexNames((0, "IPOMANII-MIB", "ccOutControlIndex"))
if mibBuilder.loadTexts: ipmDeviceCcOutControlEntry.setStatus('mandatory')
ccOutControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutControlIndex.setStatus('mandatory')
ccOutControlControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 3, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("closeImmediately", 3), ("openImmediately", 4), ("cycleImmediately", 5), ("closeByCloseTimer", 6), ("openByOpenTimer", 7), ("cycleByActionTimer", 8), ("closeThenOpenByActionTimers", 9), ("openThenCloseByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutControlControl.setStatus('mandatory')
ipmSlaveState = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 1))
ipmSlaveStateTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 1, 1), )
if mibBuilder.loadTexts: ipmSlaveStateTable.setStatus('mandatory')
ipmSlaveStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 1, 1, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveStateIndex"))
if mibBuilder.loadTexts: ipmSlaveStateEntry.setStatus('mandatory')
slaveStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveStateIndex.setStatus('mandatory')
slaveStateControl01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disconnected", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveStateControl01.setStatus('mandatory')
ipmSlaveInlet = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2))
ipmSlaveInletStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1))
ipmDeviceSlaveInletStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1), )
if mibBuilder.loadTexts: ipmDeviceSlaveInletStatusTable.setStatus('mandatory')
ipmDeviceSlaveInletStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1), ).setIndexNames((0, "IPOMANII-MIB", "inletStatusIndex"))
if mibBuilder.loadTexts: ipmDeviceSlaveInletStatusEntry.setStatus('mandatory')
inletSlaveStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusIndex.setStatus('mandatory')
inletSlaveStatusVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusVoltage.setStatus('mandatory')
inletSlaveStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusCurrent.setStatus('mandatory')
inletSlaveStatusFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusFrequency.setStatus('mandatory')
inletSlaveStatusKwatt = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusKwatt.setStatus('mandatory')
inletSlaveStatusWH = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusWH.setStatus('mandatory')
inletSlaveStatusVoltage2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusVoltage2.setStatus('mandatory')
inletSlaveStatusCurrent2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusCurrent2.setStatus('mandatory')
inletSlaveStatusFrequency2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusFrequency2.setStatus('mandatory')
inletSlaveStatusKwatt2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusKwatt2.setStatus('mandatory')
inletSlaveStatusWH2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusWH2.setStatus('mandatory')
ipmSlaveInletConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2))
ipmDeviceslaveInletConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1), )
if mibBuilder.loadTexts: ipmDeviceslaveInletConfigTable.setStatus('mandatory')
ipmDeviceslaveInletConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveInletConfigIndex"))
if mibBuilder.loadTexts: ipmDeviceslaveInletConfigEntry.setStatus('mandatory')
slaveInletConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveInletConfigIndex.setStatus('mandatory')
slaveInletConfigVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInletConfigVoltageHigh.setStatus('mandatory')
slaveInletConfigVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInletConfigVoltageLow.setStatus('mandatory')
slaveInlet2ConfigVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInlet2ConfigVoltageHigh.setStatus('mandatory')
slaveInlet2ConfigVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInlet2ConfigVoltageLow.setStatus('mandatory')
ipmSlaveOutlet = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3))
ipmSlaveOutletConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1))
ipmSlaveDeviceOutletNameTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletNameTable.setStatus('mandatory')
ipmSlaveDeviceOutletNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletNameIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletNameEntry.setStatus('mandatory')
slaveOutletNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletNameIndex.setStatus('mandatory')
slaveOutletName01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName01.setStatus('mandatory')
slaveOutletName02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName02.setStatus('mandatory')
slaveOutletName03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName03.setStatus('mandatory')
slaveOutletName04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName04.setStatus('mandatory')
slaveOutletName05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName05.setStatus('mandatory')
slaveOutletName06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName06.setStatus('mandatory')
slaveOutletName07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName07.setStatus('mandatory')
slaveOutletName08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName08.setStatus('mandatory')
slaveOutletName09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName09.setStatus('mandatory')
slaveOutletName10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName10.setStatus('mandatory')
slaveOutletName11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName11.setStatus('mandatory')
slaveOutletName12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName12.setStatus('mandatory')
ipmSlaveDeviceOutletLocationTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletLocationTable.setStatus('mandatory')
ipmSlaveDeviceOutletLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletLocationIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletLocationEntry.setStatus('mandatory')
slaveOutletLocationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletLocationIndex.setStatus('mandatory')
slaveOutletLocation01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation01.setStatus('mandatory')
slaveOutletLocation02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation02.setStatus('mandatory')
slaveOutletLocation03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation03.setStatus('mandatory')
slaveOutletLocation04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation04.setStatus('mandatory')
slaveOutletLocation05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation05.setStatus('mandatory')
slaveOutletLocation06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation06.setStatus('mandatory')
slaveOutletLocation07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation07.setStatus('mandatory')
slaveOutletLocation08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation08.setStatus('mandatory')
slaveOutletLocation09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation09.setStatus('mandatory')
slaveOutletLocation10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation10.setStatus('mandatory')
slaveOutletLocation11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation11.setStatus('mandatory')
slaveOutletLocation12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation12.setStatus('mandatory')
ipmSlaveDeviceOutletOnTimeTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletOnTimeTable.setStatus('mandatory')
ipmSlaveDeviceOutletOnTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletOnTimeIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletOnTimeEntry.setStatus('mandatory')
slaveOutletOnTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletOnTimeIndex.setStatus('mandatory')
slaveOutletOnTime01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime01.setStatus('mandatory')
slaveOutletOnTime02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime02.setStatus('mandatory')
slaveOutletOnTime03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime03.setStatus('mandatory')
slaveOutletOnTime04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime04.setStatus('mandatory')
slaveOutletOnTime05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime05.setStatus('mandatory')
slaveOutletOnTime06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime06.setStatus('mandatory')
slaveOutletOnTime07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime07.setStatus('mandatory')
slaveOutletOnTime08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime08.setStatus('mandatory')
slaveOutletOnTime09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime09.setStatus('mandatory')
slaveOutletOnTime10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime10.setStatus('mandatory')
slaveOutletOnTime11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime11.setStatus('mandatory')
slaveOutletOnTime12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime12.setStatus('mandatory')
ipmSlaveDeviceOutletOffTimeTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletOffTimeTable.setStatus('mandatory')
ipmSlaveDeviceOutletOffTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletOffTimeIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletOffTimeEntry.setStatus('mandatory')
slaveOutletOffTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletOffTimeIndex.setStatus('mandatory')
slaveOutletOffTime01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime01.setStatus('mandatory')
slaveOutletOffTime02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime02.setStatus('mandatory')
slaveOutletOffTime03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime03.setStatus('mandatory')
slaveOutletOffTime04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime04.setStatus('mandatory')
slaveOutletOffTime05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime05.setStatus('mandatory')
slaveOutletOffTime06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime06.setStatus('mandatory')
slaveOutletOffTime07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime07.setStatus('mandatory')
slaveOutletOffTime08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime08.setStatus('mandatory')
slaveOutletOffTime09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime09.setStatus('mandatory')
slaveOutletOffTime10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime10.setStatus('mandatory')
slaveOutletOffTime11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime11.setStatus('mandatory')
slaveOutletOffTime12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 4, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime12.setStatus('mandatory')
ipmSlaveDeviceOutletCurrThTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletCurrThTable.setStatus('mandatory')
ipmSlaveDeviceOutletCurrThEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletCurrThIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletCurrThEntry.setStatus('mandatory')
slaveOutletCurrThIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrThIndex.setStatus('mandatory')
slaveOutletCurrTh01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh01.setStatus('mandatory')
slaveOutletCurrTh02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh02.setStatus('mandatory')
slaveOutletCurrTh03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh03.setStatus('mandatory')
slaveOutletCurrTh04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh04.setStatus('mandatory')
slaveOutletCurrTh05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh05.setStatus('mandatory')
slaveOutletCurrTh06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh06.setStatus('mandatory')
slaveOutletCurrTh07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh07.setStatus('mandatory')
slaveOutletCurrTh08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh08.setStatus('mandatory')
slaveOutletCurrTh09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh09.setStatus('mandatory')
slaveOutletCurrTh10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh10.setStatus('mandatory')
slaveOutletCurrTh11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh11.setStatus('mandatory')
slaveOutletCurrTh12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 1, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh12.setStatus('mandatory')
ipmSlaveOutletStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2))
ipmSlaveDeviceOutletCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletCurrentTable.setStatus('mandatory')
ipmSlaveDeviceOutletCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletCurrentIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletCurrentEntry.setStatus('mandatory')
slaveOutletCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrentIndex.setStatus('mandatory')
slaveOutletCurrent01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent01.setStatus('mandatory')
slaveOutletCurrent02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent02.setStatus('mandatory')
slaveOutletCurrent03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent03.setStatus('mandatory')
slaveOutletCurrent04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent04.setStatus('mandatory')
slaveOutletCurrent05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent05.setStatus('mandatory')
slaveOutletCurrent06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent06.setStatus('mandatory')
slaveOutletCurrent07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent07.setStatus('mandatory')
slaveOutletCurrent08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent08.setStatus('mandatory')
slaveOutletCurrent09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent09.setStatus('mandatory')
slaveOutletCurrent10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent10.setStatus('mandatory')
slaveOutletCurrent11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent11.setStatus('mandatory')
slaveOutletCurrent12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent12.setStatus('mandatory')
ipmSlaveDeviceOutletWattTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletWattTable.setStatus('mandatory')
ipmSlaveDeviceOutletWattEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletWattIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletWattEntry.setStatus('mandatory')
slaveOutletWattIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWattIndex.setStatus('mandatory')
slaveOutletWatt01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt01.setStatus('mandatory')
slaveOutletWatt02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt02.setStatus('mandatory')
slaveOutletWatt03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt03.setStatus('mandatory')
slaveOutletWatt04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt04.setStatus('mandatory')
slaveOutletWatt05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt05.setStatus('mandatory')
slaveOutletWatt06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt06.setStatus('mandatory')
slaveOutletWatt07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt07.setStatus('mandatory')
slaveOutletWatt08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt08.setStatus('mandatory')
slaveOutletWatt09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt09.setStatus('mandatory')
slaveOutletWatt10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt10.setStatus('mandatory')
slaveOutletWatt11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt11.setStatus('mandatory')
slaveOutletWatt12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt12.setStatus('mandatory')
ipmSlaveDeviceOutletKwattTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletKwattTable.setStatus('mandatory')
ipmSlaveDeviceOutletKwattEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletKwattIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletKwattEntry.setStatus('mandatory')
slaveOutletKwattIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwattIndex.setStatus('mandatory')
slaveOutletKwatt01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt01.setStatus('mandatory')
slaveOutletKwatt02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt02.setStatus('mandatory')
slaveOutletKwatt03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt03.setStatus('mandatory')
slaveOutletKwatt04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt04.setStatus('mandatory')
slaveOutletKwatt05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt05.setStatus('mandatory')
slaveOutletKwatt06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt06.setStatus('mandatory')
slaveOutletKwatt07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt07.setStatus('mandatory')
slaveOutletKwatt08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt08.setStatus('mandatory')
slaveOutletKwatt09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt09.setStatus('mandatory')
slaveOutletKwatt10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt10.setStatus('mandatory')
slaveOutletKwatt11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt11.setStatus('mandatory')
slaveOutletKwatt12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 2, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt12.setStatus('mandatory')
ipmSlaveOutletAction = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3))
ipmSlaveDeviceOutletActionTable = MibTable((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1), )
if mibBuilder.loadTexts: ipmSlaveDeviceOutletActionTable.setStatus('mandatory')
ipmSlaveDeviceOutletActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1), ).setIndexNames((0, "IPOMANII-MIB", "slaveOutletActionIndex"))
if mibBuilder.loadTexts: ipmSlaveDeviceOutletActionEntry.setStatus('mandatory')
slaveOutletActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletActionIndex.setStatus('mandatory')
slaveOutletAction01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction01.setStatus('mandatory')
slaveOutletAction02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction02.setStatus('mandatory')
slaveOutletAction03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction03.setStatus('mandatory')
slaveOutletAction04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction04.setStatus('mandatory')
slaveOutletAction05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction05.setStatus('mandatory')
slaveOutletAction06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction06.setStatus('mandatory')
slaveOutletAction07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction07.setStatus('mandatory')
slaveOutletAction08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction08.setStatus('mandatory')
slaveOutletAction09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction09.setStatus('mandatory')
slaveOutletAction10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction10.setStatus('mandatory')
slaveOutletAction11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction11.setStatus('mandatory')
slaveOutletAction12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 4, 3, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction12.setStatus('mandatory')
ipmEnvEmd = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1))
ipmEnvEmdStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 1))
ipmEnvEmdStatusEmdType = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("eMD-HT", 3), ("eMD-T", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmEnvEmdStatusEmdType.setStatus('mandatory')
ipmEnvEmdStatusTemperature = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmEnvEmdStatusTemperature.setStatus('mandatory')
ipmEnvEmdStatusHumidity = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmEnvEmdStatusHumidity.setStatus('mandatory')
ipmEnvEmdStatusAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("alarm", 3), ("normal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmEnvEmdStatusAlarm1.setStatus('mandatory')
ipmEnvEmdStatusAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("alarm", 3), ("normal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipmEnvEmdStatusAlarm2.setStatus('mandatory')
ipmEnvEmdConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2))
ipmEnvEmdConfigEmdPresence = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("autoDetect", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigEmdPresence.setStatus('mandatory')
ipmEnvEmdConfigEmdName = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigEmdName.setStatus('mandatory')
ipmEnvEmdConfigTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3))
ipmEnvEmdConfigTempName = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigTempName.setStatus('mandatory')
ipmEnvEmdConfigTempHighSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigTempHighSetPoint.setStatus('mandatory')
ipmEnvEmdConfigTempHighStatus = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigTempHighStatus.setStatus('mandatory')
ipmEnvEmdConfigTempLowSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigTempLowSetPoint.setStatus('mandatory')
ipmEnvEmdConfigTempLowStatus = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigTempLowStatus.setStatus('mandatory')
ipmEnvEmdConfigTempOffset = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("t0p0", 1), ("t0p5", 2), ("t1p0", 3), ("t1p5", 4), ("t2p0", 5), ("t2p5", 6), ("t3p0", 7), ("t-0p5", 8), ("t-1p0", 9), ("t-1p5", 10), ("t-2p0", 11), ("t-2p5", 12), ("t-3p0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigTempOffset.setStatus('mandatory')
ipmEnvEmdConfigHumi = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4))
ipmEnvEmdConfigHumiName = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigHumiName.setStatus('mandatory')
ipmEnvEmdConfigHumiHighSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 95))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigHumiHighSetPoint.setStatus('mandatory')
ipmEnvEmdConfigHumiHighStatus = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigHumiHighStatus.setStatus('mandatory')
ipmEnvEmdConfigHumiLowSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 95))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigHumiLowSetPoint.setStatus('mandatory')
ipmEnvEmdConfigHumiLowStatus = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigHumiLowStatus.setStatus('mandatory')
ipmEnvEmdConfigHumiOffset = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("h0p0", 1), ("h1p0", 2), ("h2p0", 3), ("h3p0", 4), ("h4p0", 5), ("h5p0", 6), ("h6p0", 7), ("h-1p0", 8), ("h-2p0", 9), ("h-3p0", 10), ("h-4p0", 11), ("h-5p0", 12), ("h-6p0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigHumiOffset.setStatus('mandatory')
ipmEnvEmdConfigAlarm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 5))
ipmEnvEmdConfigAlarm1Name = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigAlarm1Name.setStatus('mandatory')
ipmEnvEmdConfigAlarm1Type = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigAlarm1Type.setStatus('mandatory')
ipmEnvEmdConfigAlarm2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 6))
ipmEnvEmdConfigAlarm2Name = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigAlarm2Name.setStatus('mandatory')
ipmEnvEmdConfigAlarm2Type = MibScalar((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 1, 5, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipmEnvEmdConfigAlarm2Type.setStatus('mandatory')
ipmInletVoltageTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,1)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusVoltage"), ("IPOMANII-MIB", "inletConfigVoltageHigh"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletVoltageNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,2)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusVoltage"), ("IPOMANII-MIB", "inletConfigVoltageHigh"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletVoltageTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,3)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusVoltage"), ("IPOMANII-MIB", "inletConfigVoltageLow"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletVoltageNotTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,4)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusVoltage"), ("IPOMANII-MIB", "inletConfigVoltageLow"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletCurrentTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,5)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusCurrent"), ("IPOMANII-MIB", "inletConfigCurrentHigh"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletCurrentNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,6)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusCurrent"), ("IPOMANII-MIB", "inletConfigCurrentHigh"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletFrequencyTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,7)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusFrequency"), ("IPOMANII-MIB", "inletConfigFrequencyHigh"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletFrequencyNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,8)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusFrequency"), ("IPOMANII-MIB", "inletConfigFrequencyHigh"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletFrequencyTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,9)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusFrequency"), ("IPOMANII-MIB", "inletConfigFrequencyLow"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmInletFrequencyNotTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,10)).setObjects(("IPOMANII-MIB", "inletConfigIndex"), ("IPOMANII-MIB", "inletStatusFrequency"), ("IPOMANII-MIB", "inletConfigFrequencyLow"), ("IPOMANII-MIB", "inletConfigDesc"))
ipmOutletCurrentTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,11)).setObjects(("IPOMANII-MIB", "outletConfigIndex"), ("IPOMANII-MIB", "outletStatusCurrent"), ("IPOMANII-MIB", "outletConfigCurrentHigh"), ("IPOMANII-MIB", "outletConfigDesc"))
ipmOutletCurrentNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,12)).setObjects(("IPOMANII-MIB", "outletConfigIndex"), ("IPOMANII-MIB", "outletStatusCurrent"), ("IPOMANII-MIB", "outletConfigCurrentHigh"), ("IPOMANII-MIB", "outletConfigDesc"))
ipmOutletStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,13)).setObjects(("IPOMANII-MIB", "outletConfigIndex"), ("IPOMANII-MIB", "outletStatusStatus"), ("IPOMANII-MIB", "outletConfigDesc"))
ipmEmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,14)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusTemperature"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempHighSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempName"))
ipmEmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,15)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusTemperature"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempHighSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempName"))
ipmEmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,16)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusTemperature"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempLowSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempName"))
ipmEmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,17)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusTemperature"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempLowSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigTempName"))
ipmEmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,18)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusHumidity"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiHighSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiName"))
ipmEmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,19)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusHumidity"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiHighSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiName"))
ipmEmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,20)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusHumidity"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiLowSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiName"))
ipmEmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,21)).setObjects(("IPOMANII-MIB", "ipmEnvEmdStatusHumidity"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiLowSetPoint"), ("IPOMANII-MIB", "ipmEnvEmdConfigHumiName"))
ipmEmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,22)).setObjects(("IPOMANII-MIB", "ipmEnvEmdConfigAlarm1Type"), ("IPOMANII-MIB", "ipmEnvEmdConfigAlarm1Name"))
ipmEmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,23)).setObjects(("IPOMANII-MIB", "ipmEnvEmdConfigAlarm1Type"), ("IPOMANII-MIB", "ipmEnvEmdConfigAlarm1Name"))
ipmEmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,24)).setObjects(("IPOMANII-MIB", "ipmEnvEmdConfigAlarm2Type"), ("IPOMANII-MIB", "ipmEnvEmdConfigAlarm2Name"))
ipmEmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,25)).setObjects(("IPOMANII-MIB", "ipmEnvEmdConfigAlarm2Type"), ("IPOMANII-MIB", "ipmEnvEmdConfigAlarm2Name"))
ipmSlave01Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,26))
ipmSlave01Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,27))
ipmSlave01Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,28))
ipmSlave01Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,29))
ipmSlave01Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,30))
ipmSlave01Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,31))
ipmSlave01Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,32))
ipmSlave01Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,33))
ipmSlave01Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,34))
ipmSlave01Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,35))
ipmSlave01Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,36))
ipmSlave01Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,37))
ipmSlave01EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,38))
ipmSlave01EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,39))
ipmSlave01EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,40))
ipmSlave01EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,41))
ipmSlave01EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,42))
ipmSlave01EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,43))
ipmSlave01EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,44))
ipmSlave01EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,45))
ipmSlave01EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,46))
ipmSlave01EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,47))
ipmSlave01EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,48))
ipmSlave01EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,49))
ipmSlave01OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,50))
ipmSlave02Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,51))
ipmSlave02Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,52))
ipmSlave02Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,53))
ipmSlave02Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,54))
ipmSlave02Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,55))
ipmSlave02Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,56))
ipmSlave02Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,57))
ipmSlave02Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,58))
ipmSlave02Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,59))
ipmSlave02Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,60))
ipmSlave02Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,61))
ipmSlave02Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,62))
ipmSlave02EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,63))
ipmSlave02EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,64))
ipmSlave02EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,65))
ipmSlave02EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,66))
ipmSlave02EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,67))
ipmSlave02EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,68))
ipmSlave02EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,69))
ipmSlave02EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,70))
ipmSlave02EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,71))
ipmSlave02EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,72))
ipmSlave02EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,73))
ipmSlave02EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,74))
ipmSlave02OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,75))
ipmSlave03Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,76))
ipmSlave03Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,77))
ipmSlave03Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,78))
ipmSlave03Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,79))
ipmSlave03Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,80))
ipmSlave03Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,81))
ipmSlave03Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,82))
ipmSlave03Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,83))
ipmSlave03Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,84))
ipmSlave03Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,85))
ipmSlave03Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,86))
ipmSlave03Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,87))
ipmSlave03EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,88))
ipmSlave03EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,89))
ipmSlave03EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,90))
ipmSlave03EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,91))
ipmSlave03EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,92))
ipmSlave03EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,93))
ipmSlave03EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,94))
ipmSlave03EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,95))
ipmSlave03EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,96))
ipmSlave03EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,97))
ipmSlave03EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,98))
ipmSlave03EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,99))
ipmSlave03OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,100))
ipmSlave04Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,101))
ipmSlave04Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,102))
ipmSlave04Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,103))
ipmSlave04Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,104))
ipmSlave04Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,105))
ipmSlave04Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,106))
ipmSlave04Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,107))
ipmSlave04Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,108))
ipmSlave04Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,109))
ipmSlave04Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,110))
ipmSlave04Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,111))
ipmSlave04Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,112))
ipmSlave04EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,113))
ipmSlave04EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,114))
ipmSlave04EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,115))
ipmSlave04EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,116))
ipmSlave04EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,117))
ipmSlave04EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,118))
ipmSlave04EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,119))
ipmSlave04EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,120))
ipmSlave04EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,121))
ipmSlave04EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,122))
ipmSlave04EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,123))
ipmSlave04EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,124))
ipmSlave04OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,125))
ipmSlave05Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,126))
ipmSlave05Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,127))
ipmSlave05Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,128))
ipmSlave05Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,129))
ipmSlave05Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,130))
ipmSlave05Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,131))
ipmSlave05Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,132))
ipmSlave05Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,133))
ipmSlave05Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,134))
ipmSlave05Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,135))
ipmSlave05Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,136))
ipmSlave05Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,137))
ipmSlave05EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,138))
ipmSlave05EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,139))
ipmSlave05EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,140))
ipmSlave05EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,141))
ipmSlave05EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,142))
ipmSlave05EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,143))
ipmSlave05EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,144))
ipmSlave05EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,145))
ipmSlave05EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,146))
ipmSlave05EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,147))
ipmSlave05EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,148))
ipmSlave05EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,149))
ipmSlave05OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 2468, 1, 4, 2, 2) + (0,150))
mibBuilder.exportSymbols("IPOMANII-MIB", ipmSlave05Inlet01NotOverHigh=ipmSlave05Inlet01NotOverHigh, ipmSlave05Inlet01OverHigh=ipmSlave05Inlet01OverHigh, ipmDeviceInletConfigTable=ipmDeviceInletConfigTable, slaveOutletWatt02=slaveOutletWatt02, slaveOutletCurrent09=slaveOutletCurrent09, ipmSlave05EmdHumidityTooHigh=ipmSlave05EmdHumidityTooHigh, slaveOutletCurrent04=slaveOutletCurrent04, slaveOutletLocation05=slaveOutletLocation05, ipmDeviceOutletNumber=ipmDeviceOutletNumber, inletConfigVoltageHigh=inletConfigVoltageHigh, ipmSlaveDeviceOutletLocationTable=ipmSlaveDeviceOutletLocationTable, ipmSlave04EmdAlarm2Normal=ipmSlave04EmdAlarm2Normal, ipmIdentName=ipmIdentName, slaveOutletOffTimeIndex=slaveOutletOffTimeIndex, slaveOutletName04=slaveOutletName04, ipmIdentModel=ipmIdentModel, inletWattReset=inletWattReset, ipmSlave03OutletCurrentOverTh=ipmSlave03OutletCurrentOverTh, ccOutControlIndex=ccOutControlIndex, trapsIndex=trapsIndex, ipmSlaveOutlet=ipmSlaveOutlet, slaveOutletOnTime07=slaveOutletOnTime07, ipmDeviceInletStatusTable=ipmDeviceInletStatusTable, ccOutStatusTimeOnState=ccOutStatusTimeOnState, ipmSlaveInletStatus=ipmSlaveInletStatus, slaveOutletWatt03=slaveOutletWatt03, slaveOutletLocation04=slaveOutletLocation04, ccOutConfigCloseDelay=ccOutConfigCloseDelay, ipmSlave04EmdAlarm1Normal=ipmSlave04EmdAlarm1Normal, ipmEnvEmdConfigTempOffset=ipmEnvEmdConfigTempOffset, ipmEmdAlarm1Active=ipmEmdAlarm1Active, ipmSlave05Inlet01CurrentOverTh=ipmSlave05Inlet01CurrentOverTh, ipmSlave05OutletCurrentOverTh=ipmSlave05OutletCurrentOverTh, slaveOutletAction11=slaveOutletAction11, ipmEnvEmdConfigHumiOffset=ipmEnvEmdConfigHumiOffset, ipmDeviceslaveInletConfigEntry=ipmDeviceslaveInletConfigEntry, ipmSlaveOutletStatus=ipmSlaveOutletStatus, ipmSlave05EmdAlarm1Normal=ipmSlave05EmdAlarm1Normal, ipmDeviceCcOutStatusTable=ipmDeviceCcOutStatusTable, slaveOutletWatt07=slaveOutletWatt07, product=product, ipmDeviceOutletStatusTable=ipmDeviceOutletStatusTable, slaveOutletLocation09=slaveOutletLocation09, outletStatusTimeToGo=outletStatusTimeToGo, ipmAgentTimerFromNtp=ipmAgentTimerFromNtp, accessIndex=accessIndex, ipmSlave=ipmSlave, ipmSlaveDeviceOutletKwattTable=ipmSlaveDeviceOutletKwattTable, slaveOutletOffTime12=slaveOutletOffTime12, outletConfigDesc=outletConfigDesc, outletConfigIndex=outletConfigIndex, slaveInletConfigVoltageHigh=slaveInletConfigVoltageHigh, inletConfigVoltageLow=inletConfigVoltageLow, ipmDevice=ipmDevice, slaveOutletOffTime03=slaveOutletOffTime03, ipmEnvEmdConfigAlarm2Name=ipmEnvEmdConfigAlarm2Name, ipmSlave02Inlet02OverHigh=ipmSlave02Inlet02OverHigh, ipmOutletStateChanged=ipmOutletStateChanged, ccOutConfigDesc=ccOutConfigDesc, ipmDeviceCcOutStatusEntry=ipmDeviceCcOutStatusEntry, ipmSlaveDeviceOutletCurrThTable=ipmSlaveDeviceOutletCurrThTable, ipmIdent=ipmIdent, ipmSlave01EmdTemperatureNotLow=ipmSlave01EmdTemperatureNotLow, ipmEnvEmdConfigHumiLowSetPoint=ipmEnvEmdConfigHumiLowSetPoint, ipmSlave01Inlet01NotOverHigh=ipmSlave01Inlet01NotOverHigh, ipmSlaveDeviceOutletCurrThEntry=ipmSlaveDeviceOutletCurrThEntry, slaveInlet2ConfigVoltageLow=slaveInlet2ConfigVoltageLow, ipmDeviceSlaveInletStatusEntry=ipmDeviceSlaveInletStatusEntry, slaveOutletOnTime09=slaveOutletOnTime09, slaveOutletAction09=slaveOutletAction09, ipmAgentSnmpPort=ipmAgentSnmpPort, slaveOutletCurrTh11=slaveOutletCurrTh11, ipmSlave05EmdTemperatureTooLow=ipmSlave05EmdTemperatureTooLow, ipmDeviceOutletConfigEntry=ipmDeviceOutletConfigEntry, slaveOutletAction05=slaveOutletAction05, ipmAgentHttpPort=ipmAgentHttpPort, slaveOutletCurrTh06=slaveOutletCurrTh06, ipmSlave03Inlet02CurrentOverTh=ipmSlave03Inlet02CurrentOverTh, ipmSlave04EmdHumidityTooLow=ipmSlave04EmdHumidityTooLow, ipmDeviceCcOutControlEntry=ipmDeviceCcOutControlEntry, ipmEmdHumidityTooLow=ipmEmdHumidityTooLow, ipmEmdAlarm1Normal=ipmEmdAlarm1Normal, ipmSlave02Inlet02NotUnderLow=ipmSlave02Inlet02NotUnderLow, slaveOutletAction10=slaveOutletAction10, ipmAgentNtpTimeZone=ipmAgentNtpTimeZone, slaveOutletName03=slaveOutletName03, ipmInletVoltageTooLow=ipmInletVoltageTooLow, slaveOutletAction12=slaveOutletAction12, ipmSlave02EmdHumidityNotHigh=ipmSlave02EmdHumidityNotHigh, ipmSlave05EmdHumidityTooLow=ipmSlave05EmdHumidityTooLow, ipmSlave01EmdHumidityTooHigh=ipmSlave01EmdHumidityTooHigh, pduAgentDataLogInterval=pduAgentDataLogInterval, ipmSlaveDeviceOutletActionEntry=ipmSlaveDeviceOutletActionEntry, ipmEnvEmdConfigAlarm1=ipmEnvEmdConfigAlarm1, ipmSlave03EmdAlarm2Active=ipmSlave03EmdAlarm2Active, slaveOutletName05=slaveOutletName05, inletConfigFrequencyLow=inletConfigFrequencyLow, slaveOutletKwatt10=slaveOutletKwatt10, ipmSlave05EmdAlarm1Active=ipmSlave05EmdAlarm1Active, ipmAgentNetworkPingControl=ipmAgentNetworkPingControl, ipmAgentNetworkHttp=ipmAgentNetworkHttp, ipmSlave02Inlet01UnderLow=ipmSlave02Inlet01UnderLow, ipmAgentAccessControlTable=ipmAgentAccessControlTable, ipmSlave05EmdTemperatureNotHigh=ipmSlave05EmdTemperatureNotHigh, ipmDeviceOutletControlAll=ipmDeviceOutletControlAll, ipmEnvEmdConfigAlarm2Type=ipmEnvEmdConfigAlarm2Type, slaveOutletOffTime04=slaveOutletOffTime04, ipmSlaveOutletAction=ipmSlaveOutletAction, ipmSlave03EmdAlarm1Active=ipmSlave03EmdAlarm1Active, slaveOutletLocation11=slaveOutletLocation11, slaveOutletWatt12=slaveOutletWatt12, ipmSlave01Inlet01NotCurrentOverTh=ipmSlave01Inlet01NotCurrentOverTh, slaveOutletCurrent11=slaveOutletCurrent11, slaveOutletOffTime01=slaveOutletOffTime01, ipmAgentNetworkSnmp=ipmAgentNetworkSnmp, ipmSlave05Inlet02NotCurrentOverTh=ipmSlave05Inlet02NotCurrentOverTh, ipmAgentControlRestart=ipmAgentControlRestart, ipmSlave04EmdAlarm2Active=ipmSlave04EmdAlarm2Active, inletConfigCurrentHighAction=inletConfigCurrentHighAction, slaveOutletOnTime11=slaveOutletOnTime11, slaveOutletCurrTh04=slaveOutletCurrTh04, ccOutConfigEventAction=ccOutConfigEventAction, ipmSlave04EmdTemperatureTooHigh=ipmSlave04EmdTemperatureTooHigh, ipmSlave02Inlet01NotUnderLow=ipmSlave02Inlet01NotUnderLow, slaveOutletCurrTh08=slaveOutletCurrTh08, ipmAgentNetwork=ipmAgentNetwork, slaveOutletOnTime08=slaveOutletOnTime08, ipmDeviceCcOutControlTable=ipmDeviceCcOutControlTable, slaveOutletLocation08=slaveOutletLocation08, slaveOutletOffTime10=slaveOutletOffTime10, ipmAgentControlDefault=ipmAgentControlDefault, slaveOutletOffTime08=slaveOutletOffTime08, ipmSlave02OutletCurrentOverTh=ipmSlave02OutletCurrentOverTh, slaveOutletOnTime01=slaveOutletOnTime01, slaveOutletCurrent03=slaveOutletCurrent03, outletStatusCurrent=outletStatusCurrent, ipmAgentTrapsReceiversEntry=ipmAgentTrapsReceiversEntry, slaveOutletName02=slaveOutletName02, slaveOutletNameIndex=slaveOutletNameIndex, ipmSlave05Inlet02NotOverHigh=ipmSlave05Inlet02NotOverHigh, inletConfigCurrentHigh=inletConfigCurrentHigh, slaveStateIndex=slaveStateIndex, slaveOutletOnTime06=slaveOutletOnTime06, ipmInletFrequencyTooLow=ipmInletFrequencyTooLow, ipmSlave03EmdTemperatureTooLow=ipmSlave03EmdTemperatureTooLow, ipmAgentTrapRetryCount=ipmAgentTrapRetryCount, ipmSlaveDeviceOutletOffTimeEntry=ipmSlaveDeviceOutletOffTimeEntry, ipmSlave04EmdTemperatureNotHigh=ipmSlave04EmdTemperatureNotHigh, inletConfigfrequencyLowAction=inletConfigfrequencyLowAction, inletConfigFrequencyHigh=inletConfigFrequencyHigh, ipmAgentHttpControl=ipmAgentHttpControl, ipmSlave03Inlet02NotOverHigh=ipmSlave03Inlet02NotOverHigh, slaveOutletKwatt04=slaveOutletKwatt04, ipmSlave05Inlet01NotUnderLow=ipmSlave05Inlet01NotUnderLow, ccOutStatusIndex=ccOutStatusIndex, ipmAgentLog=ipmAgentLog, ipmOutletCurrentNotTooHigh=ipmOutletCurrentNotTooHigh, ipmSlave05Inlet01UnderLow=ipmSlave05Inlet01UnderLow, slaveOutletKwatt03=slaveOutletKwatt03, ipmSlaveInlet=ipmSlaveInlet, ipmSlaveDeviceOutletLocationEntry=ipmSlaveDeviceOutletLocationEntry, slaveOutletAction03=slaveOutletAction03, ipmSlaveState=ipmSlaveState, ipmSlave04EmdHumidityNotLow=ipmSlave04EmdHumidityNotLow, ipmSlave03EmdHumidityNotLow=ipmSlave03EmdHumidityNotLow, slaveOutletOffTime11=slaveOutletOffTime11, receiverSeverityLevel=receiverSeverityLevel, ipmSlave02EmdAlarm2Active=ipmSlave02EmdAlarm2Active, slaveOutletAction08=slaveOutletAction08, ipmSlave03EmdTemperatureTooHigh=ipmSlave03EmdTemperatureTooHigh, ipmAgentMibVersion=ipmAgentMibVersion, ipmDeviceOutletControlTable=ipmDeviceOutletControlTable, ipmSlave05Inlet02CurrentOverTh=ipmSlave05Inlet02CurrentOverTh, ipmSlave01Inlet02OverHigh=ipmSlave01Inlet02OverHigh, inletSlaveStatusWH2=inletSlaveStatusWH2, ipmSlave01Inlet02NotOverHigh=ipmSlave01Inlet02NotOverHigh, ipmSlave02Inlet02UnderLow=ipmSlave02Inlet02UnderLow, ipmSlave04Inlet01UnderLow=ipmSlave04Inlet01UnderLow, ipmEmdTemperatureTooHigh=ipmEmdTemperatureTooHigh, ipmAgentTrapAckSignature=ipmAgentTrapAckSignature, ipmSlave04EmdTemperatureNotLow=ipmSlave04EmdTemperatureNotLow, accessControlAddr=accessControlAddr, accessControlMode=accessControlMode, ipmDeviceOutletWattReset=ipmDeviceOutletWattReset, slaveOutletCurrent12=slaveOutletCurrent12, ipmTraps=ipmTraps, inletStatusWH=inletStatusWH, slaveOutletKwatt12=slaveOutletKwatt12, inletStatusVoltage=inletStatusVoltage, ipmSlaveDeviceOutletOnTimeEntry=ipmSlaveDeviceOutletOnTimeEntry, slaveOutletOffTime05=slaveOutletOffTime05, ipmEmdAlarm2Normal=ipmEmdAlarm2Normal, ipmSlave03Inlet01NotOverHigh=ipmSlave03Inlet01NotOverHigh, ipmAgentNetworkIpAdress=ipmAgentNetworkIpAdress, ipmDeviceInletConfigEntry=ipmDeviceInletConfigEntry, ipmEnvEmdConfigHumi=ipmEnvEmdConfigHumi, ipmEmdHumidityNotHigh=ipmEmdHumidityNotHigh, ipmSlave01Inlet02UnderLow=ipmSlave01Inlet02UnderLow, slaveOutletOnTime05=slaveOutletOnTime05, slaveOutletLocationIndex=slaveOutletLocationIndex, ipmSlaveDeviceOutletCurrentEntry=ipmSlaveDeviceOutletCurrentEntry, ipmIdentAgentSoftwareVersion=ipmIdentAgentSoftwareVersion, ipmSlave02Inlet02NotOverHigh=ipmSlave02Inlet02NotOverHigh, slaveOutletOffTime09=slaveOutletOffTime09, ipmSlave02Inlet01OverHigh=ipmSlave02Inlet01OverHigh, slaveOutletOnTime10=slaveOutletOnTime10, ipmEnvEmdConfig=ipmEnvEmdConfig, ipmEnvEmdConfigHumiHighSetPoint=ipmEnvEmdConfigHumiHighSetPoint, ipmSlave01Inlet01UnderLow=ipmSlave01Inlet01UnderLow, ipmSlaveDeviceOutletNameTable=ipmSlaveDeviceOutletNameTable, ipmSlave03EmdHumidityTooHigh=ipmSlave03EmdHumidityTooHigh, slaveOutletName09=slaveOutletName09, inletSlaveStatusFrequency=inletSlaveStatusFrequency, slaveOutletKwatt07=slaveOutletKwatt07, slaveOutletCurrTh12=slaveOutletCurrTh12, ipmSlave04EmdAlarm1Active=ipmSlave04EmdAlarm1Active, slaveOutletCurrent08=slaveOutletCurrent08, ipmSlave05EmdAlarm2Normal=ipmSlave05EmdAlarm2Normal, slaveOutletLocation01=slaveOutletLocation01, ipmSlave05Inlet02NotUnderLow=ipmSlave05Inlet02NotUnderLow, ipmEnv=ipmEnv, ipmSlave01EmdAlarm1Normal=ipmSlave01EmdAlarm1Normal, ipmSlave02EmdTemperatureNotLow=ipmSlave02EmdTemperatureNotLow, slaveOutletKwatt11=slaveOutletKwatt11, ipmAgentTime=ipmAgentTime, slaveStateControl01=slaveStateControl01, receiverNmsType=receiverNmsType, ipmSlave03Inlet01OverHigh=ipmSlave03Inlet01OverHigh, slaveOutletName07=slaveOutletName07, outletControlControl=outletControlControl, inletSlaveStatusKwatt=inletSlaveStatusKwatt, inletSlaveStatusIndex=inletSlaveStatusIndex, slaveOutletLocation12=slaveOutletLocation12, slaveOutletOnTime12=slaveOutletOnTime12, inletStatusCurrent=inletStatusCurrent, slaveOutletWatt04=slaveOutletWatt04, slaveOutletAction06=slaveOutletAction06, inletSlaveStatusFrequency2=inletSlaveStatusFrequency2, ipmSlave04EmdHumidityNotHigh=ipmSlave04EmdHumidityNotHigh, inletSlaveStatusCurrent=inletSlaveStatusCurrent, ipmSlave03Inlet02OverHigh=ipmSlave03Inlet02OverHigh, ipmSlave03Inlet02NotUnderLow=ipmSlave03Inlet02NotUnderLow, ipmSlave04OutletCurrentOverTh=ipmSlave04OutletCurrentOverTh, ipmSlave02EmdTemperatureTooHigh=ipmSlave02EmdTemperatureTooHigh, ipmSlave03EmdTemperatureNotHigh=ipmSlave03EmdTemperatureNotHigh, ipmEnvEmdConfigEmdPresence=ipmEnvEmdConfigEmdPresence, slaveOutletName10=slaveOutletName10, slaveOutletCurrent07=slaveOutletCurrent07, ipmAgentNtpIpAddress=ipmAgentNtpIpAddress, inletConfigIndex=inletConfigIndex, ipmSlaveStateTable=ipmSlaveStateTable, slaveOutletLocation07=slaveOutletLocation07, ipmSlave02Inlet02NotCurrentOverTh=ipmSlave02Inlet02NotCurrentOverTh, ipmEnvEmdStatus=ipmEnvEmdStatus)
mibBuilder.exportSymbols("IPOMANII-MIB", ipmSlave04Inlet02OverHigh=ipmSlave04Inlet02OverHigh, slaveOutletKwatt08=slaveOutletKwatt08, ccOutConfigIndex=ccOutConfigIndex, slaveOutletWatt01=slaveOutletWatt01, ipmSlave02Inlet01NotCurrentOverTh=ipmSlave02Inlet01NotCurrentOverTh, receiverDescription=receiverDescription, ipmSlave02EmdAlarm1Active=ipmSlave02EmdAlarm1Active, ipmSlave05EmdHumidityNotLow=ipmSlave05EmdHumidityNotLow, inletConfigVoltageHighAction=inletConfigVoltageHighAction, ipmEnvEmdStatusAlarm2=ipmEnvEmdStatusAlarm2, ipmSlave03Inlet02UnderLow=ipmSlave03Inlet02UnderLow, ipmAgent=ipmAgent, slaveInletConfigVoltageLow=slaveInletConfigVoltageLow, inletConfigVoltageLowAction=inletConfigVoltageLowAction, outletConfigCurrentHighAction=outletConfigCurrentHighAction, ipmDeviceCcOutNumber=ipmDeviceCcOutNumber, ipmEnvEmdStatusAlarm1=ipmEnvEmdStatusAlarm1, ipmEnvEmdConfigTempLowSetPoint=ipmEnvEmdConfigTempLowSetPoint, slaveOutletName06=slaveOutletName06, slaveOutletOffTime02=slaveOutletOffTime02, slaveOutletLocation03=slaveOutletLocation03, outletStatusIndex=outletStatusIndex, slaveOutletName11=slaveOutletName11, ipmDeviceCcOutConfigEntry=ipmDeviceCcOutConfigEntry, inletConfigfrequencyHighAction=inletConfigfrequencyHighAction, ipmAgentConfig=ipmAgentConfig, ipmSlave01EmdHumidityNotHigh=ipmSlave01EmdHumidityNotHigh, ipmSlave02EmdAlarm2Normal=ipmSlave02EmdAlarm2Normal, inletSlaveStatusWH=inletSlaveStatusWH, ipmSlave03Inlet01UnderLow=ipmSlave03Inlet01UnderLow, slaveOutletCurrTh07=slaveOutletCurrTh07, ipmSlave03Inlet01NotCurrentOverTh=ipmSlave03Inlet01NotCurrentOverTh, ipmIdentManufacturer=ipmIdentManufacturer, ipmSlaveDeviceOutletOffTimeTable=ipmSlaveDeviceOutletOffTimeTable, ipmSlave03EmdTemperatureNotLow=ipmSlave03EmdTemperatureNotLow, outletControlIndex=outletControlIndex, slaveOutletOnTime04=slaveOutletOnTime04, slaveOutletCurrTh03=slaveOutletCurrTh03, ipmSlave01Inlet01NotUnderLow=ipmSlave01Inlet01NotUnderLow, slaveOutletAction02=slaveOutletAction02, slaveOutletActionIndex=slaveOutletActionIndex, outletConfigOffDelay=outletConfigOffDelay, outletConfigLocation=outletConfigLocation, inletSlaveStatusVoltage=inletSlaveStatusVoltage, ipmSlaveDeviceOutletWattTable=ipmSlaveDeviceOutletWattTable, ipmSlave03Inlet01CurrentOverTh=ipmSlave03Inlet01CurrentOverTh, inletStatusIndex=inletStatusIndex, ipmAgentSnmpControl=ipmAgentSnmpControl, ipmDeviceOutletConfigTable=ipmDeviceOutletConfigTable, ipmSlave05Inlet02OverHigh=ipmSlave05Inlet02OverHigh, ipmEnvEmdConfigHumiHighStatus=ipmEnvEmdConfigHumiHighStatus, inletStatusKwatt=inletStatusKwatt, ipmSlave05Inlet01NotCurrentOverTh=ipmSlave05Inlet01NotCurrentOverTh, slaveOutletLocation06=slaveOutletLocation06, slaveOutletAction04=slaveOutletAction04, ipmSlave02Inlet02CurrentOverTh=ipmSlave02Inlet02CurrentOverTh, ipmAgentTrapRetryTime=ipmAgentTrapRetryTime, ipmAgentNetworkTelnet=ipmAgentNetworkTelnet, ipmAgentDayLightSaving=ipmAgentDayLightSaving, slaveOutletKwatt06=slaveOutletKwatt06, ipmSlave01Inlet01OverHigh=ipmSlave01Inlet01OverHigh, ipmDeviceInletNumber=ipmDeviceInletNumber, inletConfigDesc=inletConfigDesc, slaveOutletKwatt05=slaveOutletKwatt05, slaveOutletCurrent06=slaveOutletCurrent06, slaveOutletLocation10=slaveOutletLocation10, ipmEnvEmdConfigTempHighStatus=ipmEnvEmdConfigTempHighStatus, ipmInletCurrentNotTooHigh=ipmInletCurrentNotTooHigh, slaveOutletKwatt09=slaveOutletKwatt09, ipmSlave04Inlet01CurrentOverTh=ipmSlave04Inlet01CurrentOverTh, slaveOutletCurrent10=slaveOutletCurrent10, ipmSlave04Inlet01NotUnderLow=ipmSlave04Inlet01NotUnderLow, ipmEnvEmdConfigTempHighSetPoint=ipmEnvEmdConfigTempHighSetPoint, ipmSlave04EmdHumidityTooHigh=ipmSlave04EmdHumidityTooHigh, ipmSlave04EmdTemperatureTooLow=ipmSlave04EmdTemperatureTooLow, ipmInletFrequencyNotTooLow=ipmInletFrequencyNotTooLow, slaveOutletName12=slaveOutletName12, ipmDeviceInlet=ipmDeviceInlet, ipmSlave03EmdHumidityNotHigh=ipmSlave03EmdHumidityNotHigh, slaveOutletCurrent02=slaveOutletCurrent02, ipmSlave05EmdAlarm2Active=ipmSlave05EmdAlarm2Active, ipmAgentNetworkIpGateway=ipmAgentNetworkIpGateway, ipmEnvEmdConfigHumiName=ipmEnvEmdConfigHumiName, ipmDeviceslaveInletConfigTable=ipmDeviceslaveInletConfigTable, ipmSlaveDeviceOutletOnTimeTable=ipmSlaveDeviceOutletOnTimeTable, receiverCommunityString=receiverCommunityString, inletSlaveStatusVoltage2=inletSlaveStatusVoltage2, slaveOutletCurrent05=slaveOutletCurrent05, ipmInletCurrentTooHigh=ipmInletCurrentTooHigh, slaveOutletOnTime02=slaveOutletOnTime02, ipmEnvEmdStatusHumidity=ipmEnvEmdStatusHumidity, ipmDeviceOutletControlEntry=ipmDeviceOutletControlEntry, ipmSlave05Inlet02UnderLow=ipmSlave05Inlet02UnderLow, ipmSlave01EmdHumidityNotLow=ipmSlave01EmdHumidityNotLow, ipmSlave05EmdHumidityNotHigh=ipmSlave05EmdHumidityNotHigh, slaveOutletOnTime03=slaveOutletOnTime03, ccOutStatusStatus=ccOutStatusStatus, ipmEmdAlarm2Active=ipmEmdAlarm2Active, ipmSlave04Inlet01OverHigh=ipmSlave04Inlet01OverHigh, ipmSlave04Inlet02CurrentOverTh=ipmSlave04Inlet02CurrentOverTh, ipmDeviceCcOutConfigTable=ipmDeviceCcOutConfigTable, slaveOutletWatt06=slaveOutletWatt06, ipmSlave05EmdTemperatureTooHigh=ipmSlave05EmdTemperatureTooHigh, ipmAgentTelnetControl=ipmAgentTelnetControl, outletStatusStateTime=outletStatusStateTime, slaveOutletWatt09=slaveOutletWatt09, ipmSlave02EmdTemperatureTooLow=ipmSlave02EmdTemperatureTooLow, slaveOutletKwattIndex=slaveOutletKwattIndex, ipmSlave05EmdTemperatureNotLow=ipmSlave05EmdTemperatureNotLow, ipmEnvEmdConfigHumiLowStatus=ipmEnvEmdConfigHumiLowStatus, ipmAgentControl=ipmAgentControl, ipmSlaveDeviceOutletWattEntry=ipmSlaveDeviceOutletWattEntry, ipmDeviceSlaveInletStatusTable=ipmDeviceSlaveInletStatusTable, ipmSlaveDeviceOutletKwattEntry=ipmSlaveDeviceOutletKwattEntry, ipmInletFrequencyNotTooHigh=ipmInletFrequencyNotTooHigh, ipmEnvEmdConfigEmdName=ipmEnvEmdConfigEmdName, ipmSlave04Inlet02NotOverHigh=ipmSlave04Inlet02NotOverHigh, outletConfigCurrentHigh=outletConfigCurrentHigh, ipmEmdHumidityTooHigh=ipmEmdHumidityTooHigh, ipmSlave01EmdTemperatureTooHigh=ipmSlave01EmdTemperatureTooHigh, ipmSlave04Inlet02UnderLow=ipmSlave04Inlet02UnderLow, ipmSlave04Inlet02NotUnderLow=ipmSlave04Inlet02NotUnderLow, slaveOutletOnTimeIndex=slaveOutletOnTimeIndex, ipmSlave01EmdAlarm2Normal=ipmSlave01EmdAlarm2Normal, ipmAgentNetworkTftpControl=ipmAgentNetworkTftpControl, ipmEmdTemperatureNotLow=ipmEmdTemperatureNotLow, slaveOutletWatt10=slaveOutletWatt10, ipmSlave02EmdHumidityNotLow=ipmSlave02EmdHumidityNotLow, ipmInletVoltageNotTooLow=ipmInletVoltageNotTooLow, outletStatusKwatt=outletStatusKwatt, slaveOutletCurrTh01=slaveOutletCurrTh01, ipmInletVoltageTooHigh=ipmInletVoltageTooHigh, slaveOutletName01=slaveOutletName01, ipmSlave02EmdAlarm1Normal=ipmSlave02EmdAlarm1Normal, ipmSlave01EmdAlarm2Active=ipmSlave01EmdAlarm2Active, ipmSlave03Inlet02NotCurrentOverTh=ipmSlave03Inlet02NotCurrentOverTh, ipmEmdTemperatureNotHigh=ipmEmdTemperatureNotHigh, ipmEmdHumidityNotLow=ipmEmdHumidityNotLow, ipmDeviceInletStatusEntry=ipmDeviceInletStatusEntry, ipmSlaveStateEntry=ipmSlaveStateEntry, slaveOutletKwatt01=slaveOutletKwatt01, ipmEnvEmd=ipmEnvEmd, ingrasys=ingrasys, slaveOutletCurrTh09=slaveOutletCurrTh09, ipmDeviceCcOut=ipmDeviceCcOut, slaveOutletWattIndex=slaveOutletWattIndex, ipmAgentAccessControlEntry=ipmAgentAccessControlEntry, slaveOutletName08=slaveOutletName08, slaveOutletCurrTh10=slaveOutletCurrTh10, slaveOutletCurrentIndex=slaveOutletCurrentIndex, ipmEnvEmdConfigTemp=ipmEnvEmdConfigTemp, ipmSlave01Inlet02CurrentOverTh=ipmSlave01Inlet02CurrentOverTh, pduAgent=pduAgent, ipmSlaveInletConfig=ipmSlaveInletConfig, ccOutControlControl=ccOutControlControl, ipmAgentTrapsReceiversTable=ipmAgentTrapsReceiversTable, ipmAgentTimeDate=ipmAgentTimeDate, slaveOutletCurrent01=slaveOutletCurrent01, slaveOutletCurrTh02=slaveOutletCurrTh02, ipmSlave04Inlet01NotOverHigh=ipmSlave04Inlet01NotOverHigh, inletStatusFrequency=inletStatusFrequency, ipmSlaveDeviceOutletActionTable=ipmSlaveDeviceOutletActionTable, slaveOutletAction01=slaveOutletAction01, ipmSlave04Inlet02NotCurrentOverTh=ipmSlave04Inlet02NotCurrentOverTh, ipmEnvEmdConfigAlarm2=ipmEnvEmdConfigAlarm2, ipmInletFrequencyTooHigh=ipmInletFrequencyTooHigh, slaveOutletWatt08=slaveOutletWatt08, ipmSlave01Inlet02NotCurrentOverTh=ipmSlave01Inlet02NotCurrentOverTh, ipmSlave01OutletCurrentOverTh=ipmSlave01OutletCurrentOverTh, ipmSlaveDeviceOutletCurrentTable=ipmSlaveDeviceOutletCurrentTable, inletSlaveStatusCurrent2=inletSlaveStatusCurrent2, ipmSlave01EmdHumidityTooLow=ipmSlave01EmdHumidityTooLow, ipmSlave01EmdTemperatureTooLow=ipmSlave01EmdTemperatureTooLow, slaveOutletCurrThIndex=slaveOutletCurrThIndex, outletConfigOnDelay=outletConfigOnDelay, ipmEnvEmdConfigTempLowStatus=ipmEnvEmdConfigTempLowStatus, ipmAgentNetworkIp=ipmAgentNetworkIp, ipmSlaveDeviceOutletNameEntry=ipmSlaveDeviceOutletNameEntry, slaveOutletKwatt02=slaveOutletKwatt02, ccOutConfigOpenDelay=ccOutConfigOpenDelay, slaveInletConfigIndex=slaveInletConfigIndex, ipmEmdTemperatureTooLow=ipmEmdTemperatureTooLow, ipmEnvEmdConfigTempName=ipmEnvEmdConfigTempName, ipmSlave01EmdAlarm1Active=ipmSlave01EmdAlarm1Active, ipmSlave03EmdHumidityTooLow=ipmSlave03EmdHumidityTooLow, ipmDeviceOutletStatusEntry=ipmDeviceOutletStatusEntry, slaveOutletLocation02=slaveOutletLocation02, ipmSlave02Inlet01NotOverHigh=ipmSlave02Inlet01NotOverHigh, ipmAgentNetworkIpSubnet=ipmAgentNetworkIpSubnet, ipmSlave02EmdHumidityTooHigh=ipmSlave02EmdHumidityTooHigh, slaveOutletOffTime06=slaveOutletOffTime06, ipmSlave02EmdHumidityTooLow=ipmSlave02EmdHumidityTooLow, ipmSlave03EmdAlarm1Normal=ipmSlave03EmdAlarm1Normal, ipmObjects=ipmObjects, slaveOutletCurrTh05=slaveOutletCurrTh05, ipmInletVoltageNotTooHigh=ipmInletVoltageNotTooHigh, ipmAgentTelnetPort=ipmAgentTelnetPort, trapsReceiverAddr=trapsReceiverAddr, iPoManII=iPoManII, ipmAgentTimeTime=ipmAgentTimeTime, ipmEnvEmdConfigAlarm1Type=ipmEnvEmdConfigAlarm1Type, inletSlaveStatusKwatt2=inletSlaveStatusKwatt2, ipmSlave02EmdTemperatureNotHigh=ipmSlave02EmdTemperatureNotHigh, outletStatusWH=outletStatusWH, ipmSlave04Inlet01NotCurrentOverTh=ipmSlave04Inlet01NotCurrentOverTh, slaveOutletOffTime07=slaveOutletOffTime07, ipmSlave02Inlet01CurrentOverTh=ipmSlave02Inlet01CurrentOverTh, ipmSlave01Inlet02NotUnderLow=ipmSlave01Inlet02NotUnderLow, ipmAgentNetworkDhcpControl=ipmAgentNetworkDhcpControl, ipmSlaveOutletConfig=ipmSlaveOutletConfig, ipmDeviceOutlet=ipmDeviceOutlet, slaveInlet2ConfigVoltageHigh=slaveInlet2ConfigVoltageHigh, ipmSlave03EmdAlarm2Normal=ipmSlave03EmdAlarm2Normal, ipmEnvEmdStatusEmdType=ipmEnvEmdStatusEmdType, outletStatusStatus=outletStatusStatus, slaveOutletAction07=slaveOutletAction07, ipmOutletCurrentTooHigh=ipmOutletCurrentTooHigh, ipmEnvEmdConfigAlarm1Name=ipmEnvEmdConfigAlarm1Name, slaveOutletWatt05=slaveOutletWatt05, ipmEnvEmdStatusTemperature=ipmEnvEmdStatusTemperature, ipmSlave01EmdTemperatureNotHigh=ipmSlave01EmdTemperatureNotHigh, ipmSlave03Inlet01NotUnderLow=ipmSlave03Inlet01NotUnderLow, ipmAgentTrap=ipmAgentTrap, slaveOutletWatt11=slaveOutletWatt11, ipmSlave01Inlet01CurrentOverTh=ipmSlave01Inlet01CurrentOverTh)
