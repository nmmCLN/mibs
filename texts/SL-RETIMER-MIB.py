#
# PySNMP MIB module SL-RETIMER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/packetlight/SL-RETIMER-MIB
# Produced by pysmi-1.1.8 at Tue Sep 12 13:39:58 2023
# On host fv-az163-847 platform Linux version 5.15.0-1041-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
slService, = mibBuilder.importSymbols("SL-NE-MIB", "slService")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, ObjectIdentity, Unsigned32, iso, NotificationType, ModuleIdentity, TimeTicks, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Unsigned32", "iso", "NotificationType", "ModuleIdentity", "TimeTicks", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "Counter64", "MibIdentifier")
TextualConvention, DateAndTime, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "TruthValue", "DisplayString")
slRetimer = ModuleIdentity((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14))
if mibBuilder.loadTexts: slRetimer.setLastUpdated('200508171200Z')
if mibBuilder.loadTexts: slRetimer.setOrganization('PacketLight Networks Ltd.')
if mibBuilder.loadTexts: slRetimer.setContactInfo('Omri_Viner@PacketLight.com')
if mibBuilder.loadTexts: slRetimer.setDescription('This MIB module describes the Retimer')
slRetimerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 1))
slRetimerStat = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 2))
slRetimerPm = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 3))
slRetimerTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 7))
slRetimerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 1, 1), )
if mibBuilder.loadTexts: slRetimerConfigTable.setStatus('current')
if mibBuilder.loadTexts: slRetimerConfigTable.setDescription('The Retimer Configuration table.')
slRetimerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 1, 1, 1), ).setIndexNames((0, "SL-RETIMER-MIB", "slRetimerLineIndex"))
if mibBuilder.loadTexts: slRetimerConfigEntry.setStatus('current')
if mibBuilder.loadTexts: slRetimerConfigEntry.setDescription('An entry in the Retimer Configuration table.')
slRetimerLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slRetimerLineIndex.setStatus('current')
if mibBuilder.loadTexts: slRetimerLineIndex.setDescription('This object should be made equal to the ifIndex of the SFP.')
slRetimerResetPmCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slRetimerResetPmCounters.setStatus('current')
if mibBuilder.loadTexts: slRetimerResetPmCounters.setDescription('Setting this object to 1 reset the current interval PM\n    \tcounters of the retimer.')
slRetimerCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 3, 1), )
if mibBuilder.loadTexts: slRetimerCurrentTable.setStatus('current')
if mibBuilder.loadTexts: slRetimerCurrentTable.setDescription('The Ethernet current table contains various statistics\n\t\tbeing collected for the current 15 minute\n\t\tinterval.')
slRetimerCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 3, 1, 1), ).setIndexNames((0, "SL-RETIMER-MIB", "slRetimerCurrentIndex"))
if mibBuilder.loadTexts: slRetimerCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: slRetimerCurrentEntry.setDescription('An entry in the Retimer Current table.')
slRetimerCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 3, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slRetimerCurrentIndex.setStatus('current')
if mibBuilder.loadTexts: slRetimerCurrentIndex.setDescription('The index value which uniquely identifies  the\n\t\tEthernet interface to which this entry is applicable.\n\t\tThe interface identified by a particular value of\n\t\tthis index is the same interface as identified by\n\t\tthe same value as a the ifIndex of the SFP.')
slRetimerCurrentRxRllES = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slRetimerCurrentRxRllES.setStatus('current')
if mibBuilder.loadTexts: slRetimerCurrentRxRllES.setDescription('The total number of Errored Seconds with RLL error.')
slRetimerCurrentRxK285ES = MibTableColumn((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slRetimerCurrentRxK285ES.setStatus('current')
if mibBuilder.loadTexts: slRetimerCurrentRxK285ES.setDescription('The total number of Errored Seconds with K28.5 error.')
slRetimerStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 4515, 1, 1, 14, 7, 1)).setObjects(("SL-RETIMER-MIB", "slRetimerLineIndex"))
if mibBuilder.loadTexts: slRetimerStatusChange.setStatus('current')
if mibBuilder.loadTexts: slRetimerStatusChange.setDescription('')
mibBuilder.exportSymbols("SL-RETIMER-MIB", slRetimerResetPmCounters=slRetimerResetPmCounters, slRetimerConfig=slRetimerConfig, slRetimerCurrentEntry=slRetimerCurrentEntry, slRetimerLineIndex=slRetimerLineIndex, slRetimerStat=slRetimerStat, slRetimerConfigTable=slRetimerConfigTable, slRetimerConfigEntry=slRetimerConfigEntry, slRetimerCurrentTable=slRetimerCurrentTable, slRetimer=slRetimer, slRetimerTraps=slRetimerTraps, slRetimerCurrentRxRllES=slRetimerCurrentRxRllES, slRetimerStatusChange=slRetimerStatusChange, PYSNMP_MODULE_ID=slRetimer, slRetimerCurrentIndex=slRetimerCurrentIndex, slRetimerCurrentRxK285ES=slRetimerCurrentRxK285ES, slRetimerPm=slRetimerPm)
