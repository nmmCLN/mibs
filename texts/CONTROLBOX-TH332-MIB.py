#
# PySNMP MIB module CONTROLBOX-TH332-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/controlbox/CONTROLBOX-TH332-MIB
# Produced by pysmi-1.1.8 at Fri Dec  2 15:49:11 2022
# On host fv-az267-189 platform Linux version 5.15.0-1023-azure by user runner
# Using Python version 3.10.8 (main, Oct 18 2022, 06:44:51) [GCC 11.2.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Integer32, enterprises, Bits, IpAddress, ObjectIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, Counter64, Gauge32, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "enterprises", "Bits", "IpAddress", "ObjectIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "Counter64", "Gauge32", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
th332 = ModuleIdentity((1, 3, 6, 1, 4, 1, 17095, 2))
th332.setRevisions(('2015-03-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: th332.setRevisionsDescriptions(('The MIB module for SMIv2.',))
if mibBuilder.loadTexts: th332.setLastUpdated('201503230000Z')
if mibBuilder.loadTexts: th332.setOrganization('Controlbox')
if mibBuilder.loadTexts: th332.setContactInfo('www.controlbox-bg.com')
if mibBuilder.loadTexts: th332.setDescription('The MIB for TH-332 SNMP server.')
controlbox = MibIdentifier((1, 3, 6, 1, 4, 1, 17095))
trapNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 17095, 2, 0))
control = MibIdentifier((1, 3, 6, 1, 4, 1, 17095, 2, 1))
temperatureTrap = NotificationType((1, 3, 6, 1, 4, 1, 17095, 2, 0, 1)).setObjects(("CONTROLBOX-TH332-MIB", "deviceName"), ("CONTROLBOX-TH332-MIB", "temperature"), ("CONTROLBOX-TH332-MIB", "temperatureState"))
if mibBuilder.loadTexts: temperatureTrap.setStatus('current')
if mibBuilder.loadTexts: temperatureTrap.setDescription('SMIV2 Trap notification information for the SNMP Manager. \n      The objects used in the demo trap notification are \n      deviceName, temperature and temperatureState.')
humidityTrap = NotificationType((1, 3, 6, 1, 4, 1, 17095, 2, 0, 2)).setObjects(("CONTROLBOX-TH332-MIB", "deviceName"), ("CONTROLBOX-TH332-MIB", "humidity"), ("CONTROLBOX-TH332-MIB", "humidityState"))
if mibBuilder.loadTexts: humidityTrap.setStatus('current')
if mibBuilder.loadTexts: humidityTrap.setDescription('SMIV2 Trap notification information for the SNMP Manager. \n      The objects used in the demo trap notification are \n      deviceName, humidity and humidityState.')
dewpointTrap = NotificationType((1, 3, 6, 1, 4, 1, 17095, 2, 0, 3)).setObjects(("CONTROLBOX-TH332-MIB", "deviceName"), ("CONTROLBOX-TH332-MIB", "dewpoint"), ("CONTROLBOX-TH332-MIB", "dewpointState"))
if mibBuilder.loadTexts: dewpointTrap.setStatus('current')
if mibBuilder.loadTexts: dewpointTrap.setDescription('SMIV2 Trap notification information for the SNMP Manager. \n      The objects used in the demo trap notification are \n      deviceName, dewpoint and dewpointState.')
deviceID = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceID.setStatus('current')
if mibBuilder.loadTexts: deviceID.setDescription('Device ID')
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('current')
if mibBuilder.loadTexts: deviceName.setDescription('Device name')
temperature = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature.setStatus('current')
if mibBuilder.loadTexts: temperature.setDescription('Current measured temperature')
humidity = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidity.setStatus('current')
if mibBuilder.loadTexts: humidity.setDescription('Current measured humidity')
dewpoint = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewpoint.setStatus('current')
if mibBuilder.loadTexts: dewpoint.setDescription('Calculated dew point')
temperatureState = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("normal", 0), ("alert", 1), ("warning", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureState.setStatus('current')
if mibBuilder.loadTexts: temperatureState.setDescription('Current temperature state')
humidityState = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("normal", 0), ("alert", 1), ("warning", 2), ("critical", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidityState.setStatus('current')
if mibBuilder.loadTexts: humidityState.setDescription('Current himidity state')
dewpointState = MibScalar((1, 3, 6, 1, 4, 1, 17095, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("alert", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dewpointState.setStatus('current')
if mibBuilder.loadTexts: dewpointState.setDescription('Current dew point state')
mibBuilder.exportSymbols("CONTROLBOX-TH332-MIB", temperature=temperature, temperatureState=temperatureState, controlbox=controlbox, trapNotifications=trapNotifications, deviceID=deviceID, temperatureTrap=temperatureTrap, th332=th332, control=control, humidityTrap=humidityTrap, deviceName=deviceName, dewpointTrap=dewpointTrap, humidityState=humidityState, PYSNMP_MODULE_ID=th332, dewpointState=dewpointState, dewpoint=dewpoint, humidity=humidity)
