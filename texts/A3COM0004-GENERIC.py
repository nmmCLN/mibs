#
# PySNMP MIB module A3COM0004-GENERIC (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/3com/A3COM0004-GENERIC
# Produced by pysmi-1.1.11 at Tue Dec  5 02:25:11 2023
# On host fv-az1535-909 platform Linux version 6.2.0-1016-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
generic, = mibBuilder.importSymbols("A3Com-products-MIB", "generic")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, Counter32, Gauge32, TimeTicks, Bits, MibIdentifier, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "Counter32", "Gauge32", "TimeTicks", "Bits", "MibIdentifier", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "Unsigned32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
setup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 2))
sysLoader = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 3))
security = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 4))
gauges = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 5))
asciiAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 6))
serialIf = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 7))
repeaterMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 8))
endStation = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 9))
localSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 10))
manager = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 11))
unusedGeneric12 = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 12))
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 14))
mrmResilience = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 15))
tokenRing = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 16))
multiRepeater = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 17))
bridgeMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 18))
fault = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 19))
poll = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 20))
powerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 21))
securePort = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 22))
alertLed = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 23))
remoteControl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 24))
rmonExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 25))
rfc1516extensions = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 26))
superStackIIconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 27))
extendedIfInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 28))
a3ComVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 29))
vlanServerClient = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 30))
segmentLoadBalancing = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 31))
virtualFileSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 32))
smartAutosensing = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 33))
brasica2 = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 34))
smaVlanSupport = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 35))
a3ComBridgeExt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 36))
igmpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 37))
mibSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 38))
qosProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 39))
l4Redirect = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 40))
a3ComTrafficStats = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 41))
a3ComRadiusMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 42))
a3ComBackup_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 43)).setLabel("a3ComBackup-mib")
a3comLicenseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 44))
a3ComPowerEthernetExt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 45))
a3ComQBridgeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 46))
a3ComFabric = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 47))
a3ComLinkAgg = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 48))
a3ComPaeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 49))
a3ComSntpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 50))
mibBuilder.exportSymbols("A3COM0004-GENERIC", mibSummary=mibSummary, sysLoader=sysLoader, bridgeMgmt=bridgeMgmt, segmentLoadBalancing=segmentLoadBalancing, asciiAgent=asciiAgent, manager=manager, repeaterMgmt=repeaterMgmt, securePort=securePort, a3ComFabric=a3ComFabric, smartAutosensing=smartAutosensing, a3comLicenseGroup=a3comLicenseGroup, mrmResilience=mrmResilience, a3ComBridgeExt=a3ComBridgeExt, brasica2=brasica2, setup=setup, poll=poll, a3ComQBridgeMIB=a3ComQBridgeMIB, powerSupply=powerSupply, a3ComRadiusMIB=a3ComRadiusMIB, gauges=gauges, a3ComSntpGroup=a3ComSntpGroup, serialIf=serialIf, security=security, fault=fault, a3ComBackup_mib=a3ComBackup_mib, l4Redirect=l4Redirect, a3ComPowerEthernetExt=a3ComPowerEthernetExt, multiRepeater=multiRepeater, rfc1516extensions=rfc1516extensions, remoteControl=remoteControl, unusedGeneric12=unusedGeneric12, rmonExtensions=rmonExtensions, qosProfiles=qosProfiles, vlanServerClient=vlanServerClient, localSnmp=localSnmp, a3ComVlan=a3ComVlan, igmpMIB=igmpMIB, extendedIfInfo=extendedIfInfo, chassis=chassis, tokenRing=tokenRing, a3ComLinkAgg=a3ComLinkAgg, endStation=endStation, a3ComPaeMIB=a3ComPaeMIB, superStackIIconfig=superStackIIconfig, virtualFileSystem=virtualFileSystem, smaVlanSupport=smaVlanSupport, alertLed=alertLed, a3ComTrafficStats=a3ComTrafficStats)
