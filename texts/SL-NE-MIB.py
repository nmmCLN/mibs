#
# PySNMP MIB module SL-NE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/packetlight/SL-NE-MIB
# Produced by pysmi-1.1.10 at Fri Nov 10 13:26:58 2023
# On host fv-az1435-737 platform Linux version 6.2.0-1015-azure by user runner
# Using Python version 3.10.13 (main, Aug 28 2023, 08:28:42) [GCC 11.4.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Gauge32, Unsigned32, iso, Bits, IpAddress, MibIdentifier, Counter64, enterprises, ObjectIdentity, Integer32, TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Gauge32", "Unsigned32", "iso", "Bits", "IpAddress", "MibIdentifier", "Counter64", "enterprises", "ObjectIdentity", "Integer32", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
packetlight = ModuleIdentity((1, 3, 6, 1, 4, 1, 4515))
if mibBuilder.loadTexts: packetlight.setLastUpdated('200009260000Z')
if mibBuilder.loadTexts: packetlight.setOrganization('PacketLight Networks Ltd.')
if mibBuilder.loadTexts: packetlight.setContactInfo('Omri_Viner@PacketLight.com')
if mibBuilder.loadTexts: packetlight.setDescription('The MIB module is the root of the PL extension mibs.')
sitelight = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1))
plproduct = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100))
plne = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1))
pl10 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 10))
pl10H = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 10, 1))
pl10F = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 10, 2))
pl20 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 20))
pl20H = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 20, 1))
pl20F = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 20, 2))
pl100 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100))
pl100E = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100, 1))
pl100F = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100, 2))
pl100FG = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100, 3))
pl100EF = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100, 4))
pl100EFG = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100, 5))
pl100FT = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 100, 12))
plopto = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 150))
ploptoXB = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 150, 1))
ploptoI = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 150, 2))
ploptoX = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 150, 3))
pl200 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 200))
pl400r = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 400))
pl400 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 400, 1))
pl404r = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 404))
pl400e = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 404, 1))
pl408r = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 408))
pl400x = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 408, 1))
pl1000r = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 1000))
pl1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 1000, 1))
pl1000e = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 1000, 2))
pl1000em = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 1000, 3))
pl1000ro = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 1000, 4))
pl1000tn = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 1000, 5))
pl2000r = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 2000))
pl2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 100, 1, 2000, 1))
slService = MibIdentifier((1, 3, 6, 1, 4, 1, 4515, 1, 1))
mibBuilder.exportSymbols("SL-NE-MIB", pl1000r=pl1000r, packetlight=packetlight, pl2000r=pl2000r, ploptoI=ploptoI, pl400x=pl400x, pl100EF=pl100EF, pl20F=pl20F, pl404r=pl404r, pl1000ro=pl1000ro, pl408r=pl408r, pl2000=pl2000, pl400e=pl400e, pl10H=pl10H, ploptoX=ploptoX, pl100F=pl100F, pl20=pl20, plne=plne, ploptoXB=ploptoXB, pl1000e=pl1000e, PYSNMP_MODULE_ID=packetlight, pl200=pl200, plproduct=plproduct, pl10=pl10, pl400=pl400, pl1000=pl1000, plopto=plopto, sitelight=sitelight, pl100E=pl100E, pl1000tn=pl1000tn, pl20H=pl20H, pl1000em=pl1000em, pl100FG=pl100FG, pl100=pl100, pl100EFG=pl100EFG, pl100FT=pl100FT, pl400r=pl400r, slService=slService, pl10F=pl10F)
